(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    450082,       8266]
NotebookOptionsPosition[    447516,       8224]
NotebookOutlinePosition[    447920,       8240]
CellTagsIndexPosition[    447877,       8237]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "it", " ", "somewhat", " ", "improving", " ", "accuracy", " ", "by", " ", 
     "picking", " ", "another", " ", "sample", " ", "data"}], " ", ",", 
    RowBox[{"idk", " ", "why"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "set", " ", "directory", " ", "for", " ", "importing", " ", "file"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"myImport", "=", 
     RowBox[{
      RowBox[{"Import", "[", 
       RowBox[{"\"\<weather.xlsx\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Data\>\"", ",", "1"}], "}"}]}], "]"}], " ", "[", 
      RowBox[{"[", 
       RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.8207490064517517`*^9, 3.820749018850438*^9}, {
   3.820749087069009*^9, 3.8207491001869984`*^9}, {3.820749951784551*^9, 
   3.820749982002921*^9}, {3.8207500400882797`*^9, 3.8207501009717054`*^9}, {
   3.82622991501318*^9, 3.8262299548395877`*^9}, {3.826230142189184*^9, 
   3.826230142338915*^9}, {3.8262302417471848`*^9, 3.826230247869198*^9}, 
   3.826230345751811*^9, {3.826230382986189*^9, 3.826230383161333*^9}, {
   3.8262304229818444`*^9, 3.826230425311576*^9}},
 CellLabel->"In[13]:=",ExpressionUUID->"80ce72f3-0ed1-4349-b9a4-0a4c031e2668"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8262301345850677`*^9, 
  3.8262301356868153`*^9}},ExpressionUUID->"d69ccc90-d2a4-4fde-9d0d-\
1ef2aaed49d3"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8262301288352904`*^9, 3.8262301328173485`*^9}, {
  3.826230323718133*^9, 3.8262303376685553`*^9}},
 NumberMarks->False,ExpressionUUID->"128fd950-8403-4e90-98fa-9960055b4280"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8262303326498127`*^9, 
  3.8262303326563253`*^9}},ExpressionUUID->"cc253950-a8ed-4531-9981-\
0e2f39fbcc29"],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"transform", " ", "into", " ", "a", " ", "list"}], 
   "*)"}]}]], "Input",
 CellChangeTimes->{{3.826230691019531*^9, 
  3.8262306981118116`*^9}},ExpressionUUID->"0162896d-f5c1-46e2-aae2-\
e38856a2b52f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"myData", "=", 
   RowBox[{"Thread", "[", 
    RowBox[{
     RowBox[{"myImport", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;"}], ",", 
        RowBox[{"1", ";;", 
         RowBox[{"-", "2"}]}]}], "]"}], "]"}], "->", 
     RowBox[{"myImport", "[", 
      RowBox[{"[", 
       RowBox[{
        RowBox[{"1", ";;"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}]}], ";"}]], "Input",
 CellLabel->"In[15]:=",ExpressionUUID->"95bbd891-60d6-4bd0-9c0f-3d8081e4870d"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.820749153754635*^9, 3.8207491539865828`*^9}, 
   3.820749186902645*^9},ExpressionUUID->"660645b8-6f36-4f70-bcf6-\
734eb88a0e94"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
  "pick", " ", "80", "%", " ", "of", " ", "sample", " ", "data", " ", "from", 
   " ", "myData", " ", "and", " ", "20", "%", " ", "for", " ", "evaluating"}],
   "*)"}]], "Input",
 CellChangeTimes->{{3.820749988551957*^9, 
  3.8207500361961184`*^9}},ExpressionUUID->"4c9c3158-1472-467e-843d-\
a932e63f5ae0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sampleSize", "=", 
   RowBox[{"IntegerPart", "[", 
    RowBox[{
     RowBox[{"Length", "@", "myData"}], "*", "0.8"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myDataTrain", "=", 
   RowBox[{"RandomSample", "[", 
    RowBox[{"myData", ",", "sampleSize"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"myDataTest", "=", 
   RowBox[{"Complement", "[", 
    RowBox[{"myData", ",", "myDataTrain"}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.820749153754635*^9, 3.8207491539865828`*^9}, 
   3.820749186902645*^9},
 CellLabel->"In[16]:=",ExpressionUUID->"37bb7d3b-32c8-45b6-9537-3932a7d341cc"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.820749157768582*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"48ddda7b-67d9-4a5b-83d9-65306a808492"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"auto", " ", "train"}], "*)"}]], "Input",
 CellChangeTimes->{{3.8207501071317015`*^9, 
  3.820750116202649*^9}},ExpressionUUID->"ef0977ab-ab25-4a9b-aebf-\
6590e45df3b3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"myClassify", "=", 
  RowBox[{"Classify", "[", "myDataTrain", "]"}]}]], "Input",
 CellChangeTimes->{{3.8262304451009755`*^9, 3.8262304572783613`*^9}, {
  3.826230839980984*^9, 3.8262308541287518`*^9}, {3.826230929466618*^9, 
  3.826230938622161*^9}},
 CellLabel->"In[20]:=",ExpressionUUID->"ee8b21a4-b922-442e-9ef7-58e173aa6005"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["ClassifierFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "21", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Nominal", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"No\"", "\"Yes\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], 
            GraphicsBox[{{
               PointSize[0.13], 
               GrayLevel[0.45], 
               
               PointBox[{{0.9821769431797024, -0.440194219686987}, {
                1.1339776261519132`, 0.8056918676854272}, {0.5279892326667741,
                 0.6574306661126254}, {0.022147046479890797`, 
                1.4937877187998898`}}], 
               GrayLevel[0.7], 
               
               PointBox[{{-0.9815166384819979, 
                0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
               GrayLevel[0.55], 
               AbsoluteThickness[1.5], 
               LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
             Axes -> {False, False}, AxesLabel -> {None, None}, 
              AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
              Frame -> {{True, True}, {True, True}}, 
              FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
              Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
              GridLines -> {None, None}, 
              LabelStyle -> {FontFamily -> "Arial"}, 
              Method -> {"ScalingFunctions" -> None}, 
              PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> True,
               PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
              Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
             ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}], Frame -> True, FrameTicks -> None, 
             FrameStyle -> Directive[
               Opacity[0.5], 
               Thickness[Tiny], 
               RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
             GrayLevel[0.94]], 
            GridBox[{{
               RowBox[{
                 TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "21", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Nominal", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  
                  TemplateBox[{",", "\",\"", "\"No\"", "\"Yes\""}, 
                   "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox[
                 "\"Number of training examples: \"", 
                  "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                 TagBox["292", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  ClassifierFunction[
   Association[
   "ExampleNumber" -> 292, "ClassNumber" -> 2, "Input" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical"], "f2" -> 
           Association["Type" -> "Numerical"], "f3" -> 
           Association["Type" -> "Numerical"], "f4" -> 
           Association["Type" -> "Numerical"], "f5" -> 
           Association["Type" -> "Nominal"], "f6" -> 
           Association["Type" -> "Nominal"], "f7" -> 
           Association["Type" -> "Nominal"], "f8" -> 
           Association["Type" -> "Nominal"], "f9" -> 
           Association["Type" -> "Nominal"], "f10" -> 
           Association["Type" -> "Nominal"], "f11" -> 
           Association["Type" -> "Numerical"], "f12" -> 
           Association["Type" -> "Numerical"], "f13" -> 
           Association["Type" -> "Numerical"], "f14" -> 
           Association["Type" -> "Numerical"], "f15" -> 
           Association["Type" -> "Numerical"], "f16" -> 
           Association["Type" -> "Numerical"], "f17" -> 
           Association["Type" -> "Numerical"], "f18" -> 
           Association["Type" -> "Numerical"], "f19" -> 
           Association["Type" -> "Numerical"], "f20" -> 
           Association["Type" -> "Nominal"], "f21" -> 
           Association["Type" -> "Numerical"]], "Output" -> 
         Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f7" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f8" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f9" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f10" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f11" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f12" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f13" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f20" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f21" -> 
           Association["Type" -> "Numerical", "Weight" -> 1]], "Preprocessor" -> 
         MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["Transpose", 
               Association["FeatureNumber" -> 21]], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {
                 "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                  "Nominal", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                  "Numerical", "Numerical", "Nominal", "Numerical"}, 
                "FeatureKeys" -> {
                 "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10", 
                  "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", 
                  "f19", "f20", "f21"}, "FeatureWeights" -> Automatic, 
                "ExampleWeights" -> Automatic, "RawExample" -> 
                Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                False]]}]], "ScalarFeature" -> False, "Invertibility" -> 
         "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "Processor" -> MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f11" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f12" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f13" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f21" -> 
           Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f6" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f7" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f8" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f9" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f10" -> 
           Association["Type" -> "Nominal", "Weight" -> 1], "f20" -> 
           Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association[
          "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 14], 
           "(f5f6f7f8f9f10f20)" -> 
           Association["Type" -> "NominalVector", "Weight" -> 7]], 
         "Processors" -> {
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f11" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f12" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f13" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f21" -> 
               Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
               Association["Type" -> "Nominal", "Weight" -> 1], "f6" -> 
               Association["Type" -> "Nominal", "Weight" -> 1], "f7" -> 
               Association["Type" -> "Nominal", "Weight" -> 1], "f8" -> 
               Association["Type" -> "Nominal", "Weight" -> 1], "f9" -> 
               Association["Type" -> "Nominal", "Weight" -> 1], "f10" -> 
               Association["Type" -> "Nominal", "Weight" -> 1], "f20" -> 
               Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
             Association[
              "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 14], 
               "(f5f6f7f8f9f10f20)" -> 
               Association["Type" -> "NominalVector", "Weight" -> 7]], 
             "Processors" -> {
               MachineLearning`MLProcessor["ToVector", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, "Input" -> 
                 Association[
                  "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f3" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f4" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                   "f11" -> Association["Type" -> "Numerical", "Weight" -> 1],
                    "f12" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f13" -> 
                   Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
                   Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
                   Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
                   Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
                   Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
                   Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
                   Association["Type" -> "Numerical", "Weight" -> 1], "f21" -> 
                   Association["Type" -> "Numerical", "Weight" -> 1]], 
                 "Output" -> 
                 Association[
                  "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 14]], 
                 "Version" -> {12.2, 0}, "ID" -> 4365890816216361023]], 
               MachineLearning`MLProcessor["ToVector", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                 "StructurePreserving" -> True, "Input" -> 
                 Association[
                  "f5" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                   "f6" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                   "f7" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                   "f8" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                   "f9" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                   "f10" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                   "f20" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                 "Output" -> 
                 Association[
                  "(f5f6f7f8f9f10f20)" -> 
                   Association["Type" -> "NominalVector", "Weight" -> 7]], 
                 "Version" -> {12.2, 0}, "ID" -> 3089886697020883640]]}, 
             "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
             "Missing" -> "Allowed"]], 
           MachineLearning`MLProcessor["Threads", 
            Association[
            "Input" -> Association[
              "(f5f6f7f8f9f10f20)" -> 
               Association["Type" -> "NominalVector", "Weight" -> 7], 
               "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 14]], 
             "Output" -> 
             Association[
              "(f5f6f7f8f9f10f20)" -> 
               Association["Type" -> "NominalVector", "Weight" -> 7], 
               "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 14]], 
             "Processors" -> {
               MachineLearning`MLProcessor["ImputeMissing", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                 "StructurePreserving" -> True, "Input" -> 
                 Association[
                  "(f5f6f7f8f9f10f20)" -> 
                   Association["Type" -> "NominalVector", "Weight" -> 7]], 
                 "VectorLength" -> 7, "Output" -> 
                 Association[
                  "(f5f6f7f8f9f10f20)" -> 
                   Association["Type" -> "NominalVector", "Weight" -> 7]], 
                 "Type" -> "NominalVector", "Version" -> {12.2, 0}, "ID" -> 
                 2787103142329180041]], 
               MachineLearning`MLProcessor["ImputeMissing", 
                Association[
                "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                 "StructurePreserving" -> True, "Input" -> 
                 Association[
                  "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 14]], 
                 "Imputer" -> (DimensionReducerFunction[
                   Association[
                   "ExampleNumber" -> 292, "Imputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {7.033219178082191, 20.44691780821917, 
                    1.3746575342465748`, 4.5301369863013665`, 
                    17.623287671232877`, 72.12328767123287, 
                    44.294520547945204`, 1020.1297945205475`, 
                    1017.2051369863012`, 3.835616438356164, 
                    3.8595890410958904`, 12.174657534246577`, 
                    19.149657534246593`, 1.3801369863013693`}, "Method" -> 
                    "Naive", "VectorLength" -> 14, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {7.033219178082191, 20.44691780821917, 
                    1.3746575342465748`, 4.5301369863013665`, 
                    17.623287671232877`, 72.12328767123287, 
                    44.294520547945204`, 1020.1297945205475`, 
                    1017.2051369863012`, 3.835616438356164, 
                    3.8595890410958904`, 12.174657534246577`, 
                    19.149657534246593`, 1.3801369863013693`}, 
                    "StandardDeviation" -> {5.975861196024612, 
                    6.6873237336973785`, 4.345463886579489, 2.66109385952093, 
                    8.673799637420842, 13.105415805604691`, 
                    16.642562948129548`, 6.445214532447195, 6.312604887157415,
                     2.93310672000912, 2.6658951763688594`, 5.581105743584622,
                     6.624061051516925, 4.281692788129442}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 14, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                    MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 14]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "Processor" -> 
                    MachineLearning`MLProcessor["Identity"], "Model" -> 
                    Association["Matrix" -> CompressedData["
1:eJwNwws4EwgcAHBKWueRd6iF7qLrgRInvvzJHR/ZKWHTQ/fJkhIKFaUvKcm6
z+TRId0+kovF2jxO4r/Na2PLHh4zZecRk5LUpcR1/b7vZxMRF0RdpqGhof/t
d98akdJ6Dc8NoH9+Q7dLbCdsPGucyxILsf7NZJGHBwuOW+R+7rvTiZsou0qI
HxgwnGIZStWSgOvX7Q6ap1rRn2I+tiZDAoRqBs99Gw3sRwuflPw9iENNZRVT
YRx8Fyuk9AyKcKpFOzsIS+FJeWCAbx4L8qKLk8MfN2OADdFur+VDbDUNO5tq
IkK1RUOnit6C4Z+2F3rPVEO/W/aF83M5GBV4O9k5TQqhJDOzk5IWiDfWTlOR
JsFCTD/ndECMmoLF96LGF+A0ZC33UTfhDRuv6xefPsJXCwf0nLbIcQtRlRLx
sBRsd4hqHBIGUDexaw1Z8QfuS1+BxNB4MDlYTrpYycMXrKHZcjoXDaHdSTrZ
BWt1FTXM5c3gmbtH6nisH3JLfiJuyKzH6KIE+SufKVT3BiTU+THQl/Q9c37r
I9C6HvTxN7txiCX+Q2w5LcUkbtzjZk8ZlhdhiMm6xzh7uLLYWiiB9Z1dFtvY
I/inKcV5VluMo9meE5yN9eiR46KvtUcME8N+PmpFDyTcaqsQ7JZiDwR23CuW
wZ5pnmrpmQy6Sab3k8ueY8sxZ/Hsjx2gw/09WA/7MPKIOyE/VYBTVjGfQhRD
eIH8xW/Bphvi6FXjR/cNQYbyv/D5X+twp0GAc2tEOj64lvxAYs/E22tPFuza
yQfaDNV+rLALjtqcyaHQuEhoTCfpkseB73HIsr60CTXmvKirD0nAICXYeqBR
jurz0W97GxS4P6g38e5TRO9lPl6nrLrwvVv7DC9JBAUJ86lEdiNMcW+NRJ0Q
Y03tVc5lThsmrnpfV0/JwRD6PaoqSwqC4Xz2fIQMY5YK2OzFPrRVfHzNzK3F
yf0D+3nTUlz3nKaMZ8mg6IrI2OpdOzhfLK6/c7kdC5aqIjMZLOyZFggPFbHR
2zyDecCwBm5WaH96sEYJryt9XYwUQmzLDomUyfkYVdxj4uKuxFrq6aSYADke
MZl3/DrSB62uliPVNCVEXrLdJGAOoDLfqI1aJoEQR/5ncVMVEK6rbFvuDkLA
v1YXZnZ04OSHaGtyUx8GlWwtjpp7hhKNVXkp5cchQ6Cl42WgRuXBExrt7zqw
i+Y2sdjJwYUqZihtMw9XnhtLdDdRovl9MnckiQ2uLFn0cg8+mh3Omr6iWYHV
czD8sZePRypX+LWy6qAmtyDreDkbDJtYfIMGAXLaZa1pvQK4nD1KuPumGzxH
9FYvkQeRQLT+ZcHrCe7Ov1Ex1SDG7puuDLPgahAVEsmXfNngXJVnl/KSh/pO
X1ZtUldiRZXOVRcUovJqodPmtjZ0XK+/0MDgwIZ0nYfqiDK8NXDPetvKftAP
81xZ68ZBLt10aVd4P+b7hycrxkfhw+agH/TGVOCw5WdlpqEQhhxfnfEO/gtn
X9LfUpLkuNcfAsPMefA/VehY6g==
                    "], "Processor" -> MachineLearning`MLProcessor["Sequence", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {7.033219178082191, 20.44691780821917, 
                    1.3746575342465748`, 4.5301369863013665`, 
                    17.623287671232877`, 72.12328767123287, 
                    44.294520547945204`, 1020.1297945205475`, 
                    1017.2051369863012`, 3.835616438356164, 
                    3.8595890410958904`, 12.174657534246577`, 
                    19.149657534246593`, 1.3801369863013693`}, 
                    "StandardDeviation" -> {5.975861196024612, 
                    6.6873237336973785`, 4.345463886579489, 2.66109385952093, 
                    8.673799637420842, 13.105415805604691`, 
                    16.642562948129548`, 6.445214532447195, 6.312604887157415,
                     2.93310672000912, 2.6658951763688594`, 5.581105743584622,
                     6.624061051516925, 4.281692788129442}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "FinalDimension" -> 10, "Padder" -> 
                    MachineLearning`MLProcessor["Identity"], "Method" -> 
                    "Linear"], "PerformanceGoal" -> Automatic, 
                    "Invertibility" -> "Approximate", "Log" -> 
                    Association[
                    "TrainingTime" -> 0.0279355, "MaxTrainingMemory" -> 
                    172088, "DataMemory" -> 32880, "FunctionMemory" -> 23424, 
                    "LanguageVersion" -> {12.2, 0}, "Date" -> 
                    DateObject[{
                    2021, 4, 1, 9, 56, 1.4353198`7.909523662346748}, 
                    "Instant", "Gregorian", 8.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "Windows", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}]]][#, "ImputedVectors", 
                   PerformanceGoal -> "Quality"]& ), "Method" -> 
                 "DimensionReduction", "VectorLength" -> 14, "Output" -> 
                 Association[
                  "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                   Association["Type" -> "NumericalVector", "Weight" -> 14]], 
                 "Type" -> "NumericalVector", "Version" -> {12.2, 0}, "ID" -> 
                 3972838121628584863]]}, "Invertibility" -> "Perfect", 
             "StructurePreserving" -> True, "Missing" -> "Imputed"]], 
           MachineLearning`MLProcessor["Standardize", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 14]], 
             "Mean" -> {7.033219178082191, 20.44691780821917, 
              1.3746575342465748`, 4.5301369863013665`, 17.623287671232877`, 
              72.12328767123287, 44.294520547945204`, 1020.1297945205475`, 
              1017.2051369863012`, 3.835616438356164, 3.8595890410958904`, 
              12.174657534246577`, 19.149657534246593`, 1.3801369863013693`}, 
             "StandardDeviation" -> {5.975861196024612, 6.6873237336973785`, 
              4.345463886579489, 2.66109385952093, 8.673799637420842, 
              13.105415805604691`, 16.642562948129548`, 6.445214532447195, 
              6.312604887157415, 2.93310672000912, 2.6658951763688594`, 
              5.581105743584622, 6.624061051516925, 4.281692788129442}, 
             "Output" -> 
             Association[
              "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 14]], 
             "Version" -> {12.2, 0}, "ID" -> 3564137223642712157]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f5f6f7f8f9f10f20)" -> 
               Association["Type" -> "NominalVector", "Weight" -> 7]], 
             "Index" -> {
               Association[
               0. -> 1, 0.1 -> 2, 0.2 -> 3, 0.3 -> 4, 0.4 -> 5, 0.6 -> 6, 0.8 -> 
                7, 1.2 -> 8, 1.6 -> 9, 1.8 -> 10, 1.9 -> 11, 2. -> 12, 2.2 -> 
                13, 2.3 -> 14, 2.4 -> 15, 2.7 -> 16, 2.8 -> 17, 2.9 -> 18, 3. -> 
                19, 3.3 -> 20, 3.5 -> 21, 3.6 -> 22, 3.8 -> 23, 3.9 -> 24, 
                4.1 -> 25, 4.2 -> 26, 4.3 -> 27, 4.6 -> 28, 4.7 -> 29, 4.9 -> 
                30, 5.1 -> 31, 5.2 -> 32, 5.3 -> 33, 5.6 -> 34, 5.8 -> 35, 
                5.9 -> 36, 6. -> 37, 6.1 -> 38, 6.2 -> 39, 6.3 -> 40, 6.4 -> 
                41, 6.5 -> 42, 6.7 -> 43, 6.8 -> 44, 6.9 -> 45, 7. -> 46, 7.1 -> 
                47, 7.2 -> 48, 7.3 -> 49, 7.5 -> 50, 7.6 -> 51, 7.7 -> 52, 
                7.8 -> 53, 7.9 -> 54, 8. -> 55, 8.1 -> 56, 8.2 -> 57, 8.3 -> 
                58, 8.4 -> 59, 8.5 -> 60, 8.6 -> 61, 8.7 -> 62, 8.8 -> 63, 
                8.9 -> 64, 9. -> 65, 9.1 -> 66, 9.2 -> 67, 9.3 -> 68, 9.4 -> 
                69, 9.5 -> 70, 9.6 -> 71, 9.7 -> 72, 9.8 -> 73, 9.9 -> 74, 
                10. -> 75, 10.2 -> 76, 10.3 -> 77, 10.4 -> 78, 10.5 -> 79, 
                10.6 -> 80, 10.7 -> 81, 10.8 -> 82, 10.9 -> 83, 11. -> 84, 
                11.1 -> 85, 11.2 -> 86, 11.3 -> 87, 11.4 -> 88, 11.5 -> 89, 
                11.6 -> 90, 11.7 -> 91, 11.8 -> 92, 11.9 -> 93, 12. -> 94, 
                12.1 -> 95, 12.2 -> 96, 12.4 -> 97, 12.5 -> 98, 12.6 -> 99, 
                12.7 -> 100, 12.8 -> 101, 13. -> 102, 13.2 -> 103, 13.5 -> 
                104, 13.6 -> 105, "NA" -> 106], 
               Association[
               "E" -> 1, "ENE" -> 2, "ESE" -> 3, "N" -> 4, "NA" -> 5, "NE" -> 
                6, "NNE" -> 7, "NNW" -> 8, "NW" -> 9, "S" -> 10, "SE" -> 11, 
                "SSE" -> 12, "SSW" -> 13, "SW" -> 14, "W" -> 15, "WNW" -> 16, 
                "WSW" -> 17], 
               Association[
               13. -> 1, 15. -> 2, 17. -> 3, 20. -> 4, 22. -> 5, 24. -> 6, 
                26. -> 7, 28. -> 8, 30. -> 9, 31. -> 10, 33. -> 11, 35. -> 12,
                 39. -> 13, 41. -> 14, 43. -> 15, 44. -> 16, 46. -> 17, 48. -> 
                18, 50. -> 19, 52. -> 20, 54. -> 21, 57. -> 22, 59. -> 23, 
                61. -> 24, 63. -> 25, 65. -> 26, 67. -> 27, 69. -> 28, 70. -> 
                29, 78. -> 30, 80. -> 31, 85. -> 32, "NA" -> 33], 
               Association[
               "E" -> 1, "ENE" -> 2, "ESE" -> 3, "N" -> 4, "NA" -> 5, "NE" -> 
                6, "NNE" -> 7, "NNW" -> 8, "NW" -> 9, "S" -> 10, "SE" -> 11, 
                "SSE" -> 12, "SSW" -> 13, "SW" -> 14, "W" -> 15, "WNW" -> 16, 
                "WSW" -> 17], 
               Association[
               "E" -> 1, "ENE" -> 2, "ESE" -> 3, "N" -> 4, "NA" -> 5, "NE" -> 
                6, "NNE" -> 7, "NNW" -> 8, "NW" -> 9, "S" -> 10, "SE" -> 11, 
                "SSE" -> 12, "SSW" -> 13, "SW" -> 14, "W" -> 15, "WNW" -> 16, 
                "WSW" -> 17], 
               Association[
               0. -> 1, 2. -> 2, 4. -> 3, 6. -> 4, 7. -> 5, 9. -> 6, 11. -> 7,
                 13. -> 8, 15. -> 9, 17. -> 10, 19. -> 11, 20. -> 12, 22. -> 
                13, 24. -> 14, 26. -> 15, 28. -> 16, 30. -> 17, 31. -> 18, 
                33. -> 19, 39. -> 20, "NA" -> 21], 
               Association["No" -> 1, "Yes" -> 2]}, "MissingCode" -> 0, 
             "Version" -> {12.2, 0}, "ID" -> 6009108333341414470, "Output" -> 
             Association[
              "(f5f6f7f8f9f10f20)" -> 
               Association["Type" -> "NominalVector", "Weight" -> 7]]]]}, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
         "Missing" -> "Imputed"]]], "Output" -> 
    Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
        Association[
        "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
         "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
           Association["Processors" -> {
              MachineLearning`MLProcessor["List"], 
              MachineLearning`MLProcessor["WrapMLDataset", 
               Association[
               "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic, 
                "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                "StructurePreserving" -> False]]}]], "ScalarFeature" -> True, 
         "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
         "Missing" -> "Allowed"]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
         Association["f1" -> Association["Type" -> "Nominal", "Weight" -> 1]],
          "Processors" -> {
           MachineLearning`MLProcessor["ToVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 1374468457434343602]], 
           MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]], 
             "Index" -> {
               Association["No" -> 1, "Yes" -> 2]}, "MissingCode" -> 0, 
             "Version" -> {12.2, 0}, "ID" -> 8292309200956012400, "Output" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1]]]], 
           MachineLearning`MLProcessor["FromVector", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "f1" -> Association[
                "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {2}]], 
             "Output" -> 
             Association[
              "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
             "Version" -> {12.2, 0}, "ID" -> 3858298161417783371]], 
           MachineLearning`MLProcessor["FirstValues", 
            Association[
            "Info" -> Association[
              "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
             "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
             False, "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
      Association["No" -> 0.8265306122448979, "Yes" -> 0.17346938775510204`]],
     "LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit", 
      Association[
      "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
       "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], "Prior" -> 
    Automatic, "Utility" -> 
    SparseArray[
     Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
    "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
    Automatic, "BatchProcessing" -> Automatic, "Model" -> 
    Association["Tree" -> MachineLearning`DecisionTree[
        Association[
        "FeatureIndices" -> RawArray["Integer16",{55}], 
         "NumericalThresholds" -> {-0.08089266198139153}, 
         "NominalSplits" -> {}, "Children" -> 
         RawArray["Integer16",{{-1, -2}}], "LeafValues" -> 
         RawArray["UnsignedInteger8",{{196, 1}, {1, 40}}], "RootIndex" -> 1, 
         "NominalDimension" -> 0]], "Processor" -> 
      MachineLearning`MLProcessor["Sequence", 
        Association[
        "Input" -> Association[
          "(f5f6f7f8f9f10f20)" -> 
           Association[
            "Type" -> "NominalVector", "Weight" -> 7, 
             "SetSize" -> {106, 17, 33, 17, 17, 21, 2}], 
           "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
           Association["Type" -> "NumericalVector", "Weight" -> 14]], 
         "Output" -> 
         Association[
          "((f5f6f7f8f9f10f20)(f1f2f3f4f11f12f13f14f15f16f17f18f19f21))" -> 
           Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+LbU1fEdt46aj9KU0YzgMEHutEAPIfZsA==
              "], "Type" -> "NumericalVector"]], "Processors" -> {
           MachineLearning`MLProcessor["EmbedNominalVector", 
            Association[
            "Invertibility" -> "Impossible", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f5f6f7f8f9f10f20)" -> 
               Association[
                "Type" -> "NominalVector", "Weight" -> 7, 
                 "SetSize" -> {106, 17, 33, 17, 17, 21, 2}]], "Index" -> {
               Association[
               1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8,
                 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 15 -> 
                15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20, 21 -> 
                21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 26, 27 -> 
                27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 32, 33 -> 
                33, 34 -> 34, 35 -> 35, 36 -> 36, 37 -> 37, 38 -> 38, 39 -> 
                39, 40 -> 40, 41 -> 41, 42 -> 42, 43 -> 43, 44 -> 44, 45 -> 
                45, 46 -> 46, 47 -> 47, 48 -> 48, 49 -> 49, 50 -> 50, 51 -> 
                51, 52 -> 52, 53 -> 53, 54 -> 54, 55 -> 55, 56 -> 56, 57 -> 
                57, 58 -> 58, 59 -> 59, 60 -> 60, 61 -> 61, 62 -> 62, 63 -> 
                63, 64 -> 64, 65 -> 65, 66 -> 66, 67 -> 67, 68 -> 68, 69 -> 
                69, 70 -> 70, 71 -> 71, 72 -> 72, 73 -> 73, 74 -> 74, 75 -> 
                75, 76 -> 76, 77 -> 77, 78 -> 78, 79 -> 79, 80 -> 80, 81 -> 
                81, 82 -> 82, 83 -> 83, 84 -> 84, 85 -> 85, 86 -> 86, 87 -> 
                87, 88 -> 88, 89 -> 89, 90 -> 90, 91 -> 91, 92 -> 92, 93 -> 
                93, 94 -> 94, 95 -> 95, 96 -> 96, 97 -> 97, 98 -> 98, 99 -> 
                99, 100 -> 100, 101 -> 101, 102 -> 102, 103 -> 103, 104 -> 
                104, 105 -> 105, 106 -> 106], 
               Association[
               1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8,
                 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 15 -> 
                15, 16 -> 16, 17 -> 17], 
               Association[
               1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8,
                 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 15 -> 
                15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20, 21 -> 
                21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 26, 27 -> 
                27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 32, 33 -> 
                33], 
               Association[
               1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8,
                 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 15 -> 
                15, 16 -> 16, 17 -> 17], 
               Association[
               1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8,
                 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 15 -> 
                15, 16 -> 16, 17 -> 17], 
               Association[
               1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 8,
                 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 15 -> 
                15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20, 21 -> 
                21], 
               Association[1 -> 1, 2 -> 2]}, "Output" -> 
             Association[
              "(f5f6f7f8f9f10f20)" -> 
               Association["Weight" -> 7, "Type" -> "NumericalVector"]], 
             "EmbeddingVectors" -> {CompressedData["
1:eJxVVnlUzmvU7UVp0CAqpfSWiAZRuqL3OT8N0qAQSTJUSlGkhMs1lIpKA42U
NKgrpRQvofc5j0ZjFIVSoskUMpfI113r++P7zlr7nHXWPn/utc/W8gp03jRK
TExsh+RIc/bcbREc7LlnhcR/i49ngIlxwH+k/wj+4/+3Qv/P/H9QlR/CTwM8
7ueWGHjY4I2+x2ugp7Od9odO5WZnTaG2SzZD27pOVMpMhe0FHdANZiytqQ8L
DHbB74duLPjIcRgMSobCwCfm9cIZrF62H3fy18Kyggaq6R4Pjg358Hp7GnlY
eQIOVeVi4zpj/EdmObu4JlPg0s3BfeyEGMMe1LTJgMQDDhhpO4/wJyZAzzkx
9BzugMrmJaxo2j2UdBnPletJwsUhW4ozJenCpfPwpMN9vBESSsaGe7IKZ2Vc
KGlAVS4bo+YsDSZcY8W9COvB1eo7YFt5OXEvNaIJadfwn0Ip+memHnj9SYMx
zgF0wL0NP06S5t4k/o07FiiTCTWG3L6wx5ig3gy971ZyIUfFuM4GL/wRfwHa
ffS4v3/VQ41NATZnRaFs+HxYX92P3vmx0Nt4jrSO3Fi8+wYX11lCu+krTDxd
B7H6iaQ15jG67tflPKvVOXuXh3CJz0eXyxHEHsbSpQPyuMYsGUSoi88+GdLn
W4CeEVZBxrIA/NijKNJy1kEZu0Pwc5EVk68tpy/fCOCOpRUtUojDHw6m4OFz
F2tPXMSvg85k+esU2t+oA4HafMGdimToXfUHwwK3Iv+GSLTCYJg0KkSS07HT
WGL9Odh4nuCLX9Pw0/pBWuJtCf9eWo9hG8eATfw1QXPZVTr73i+qVyTH7Vu+
D5ovb8XuLW+QDSeg9IUGkBwWwo0QH+ow1h1KFs2gcyqM0K44DjZJ/KKS3Y/J
tkWnkbH1XF3IXbLzrDhdl9NMfRL64FZPLKhezBIJPUKI3js5tvhlB+as3YbN
my+ARlkSnFPOxhXhUiTwTyEtTJgCaTQU/aYmQlGULDe4V0fUlThIaj0kwW3z
GDRX+w2Gwwvp15pwQWb8TPxOqwFsEnH5r30kZasPmZ8bQaSvPyRfZRvNDwfn
kiqZNVjvdRb//uKO2UIJTFU5jcHfH1DPY0fIqYh7xO/RWFoel0z3cqNYT/1b
2jVaiGlqfJbtnQTxDtthRIHM4f1VKAt7BpV1elCs/xKL43lc0zEKe38UgIxH
OFVQbsOz1dWC2+bXQBitxFbNTKHDejV4xyIDjhfmE/MNIrzU74BHD6ix/Qem
o6/ke5F6/we67Ukg2CXx2MCPHNxjo8b+8FbDri/6XItjEpyWVcS1WjaYVqMA
Wrqy3OyTKvTIaSP4/cWFC1r/HerS8knVng4y1ayG/HmUBcffi9GvzXGocLoA
e55cJvrxq7DMqEW0NqUUdPWHqNKRUBhsGhBlFgjgijAUGr8mkIYEKbzv3UtJ
ywbY8VkEiw7uxeeKd0nG3hAItjmLYr7aoNsoQqf2VHpgUSzqlClRh7bxqN7Z
RVMembKDK/NxetcJMm+7O6ew1o/UjvhF3e1JnMxlJ3pjzQIsyHcH42oTtjpM
gztgpwi63RpEbX4MTeIbc+G/4kRlYR1wZ4+fyKL7K3mX7QGPDULhh/ML5NX3
Q6p1C+Y3h8HW48XgNU6BWyCehgfrZ3C3YxWJlnUa3usooXMCWYXtwE9B+hot
JrbGjvs+zgXbf40mJj75mDZOmmn7v8cAK457OuoGJuW00Rllnxb0zvaFt9Wq
ePJ7lEhcx4bl2XzDb+YIWc+6oPSNGH1GfYji80y0mZoPYgPAxH3W0Yq6c5Cz
aDH0LcjFB+Z1EMWlUn7l3/h5Rjzcj5rP7f4dBw551pibYUVbE8O5tziJxjaL
sWXilxa4OQajbfkOWP+cYlTIM3hi8lrg5J5OrvS9oSW2BpSc3APTJhpi4K5f
pJxocm++5EBdbA54XdRhSfYIrs29xHeXBvfg2PgR3c3mWqaoM4cmaU76uiMG
+z6mBTm5VCO+ryK7UZJZdvuSZsd8VPLLRuP9l6mK2SZwfbWPmny8JTin/Uyw
ei6FpYo7wcl1icDiygZ4fvYUhsasRz1mxfm/y0ZFaznc2H0MPJe6g569CX5z
dIR98i9p8fkYkK0U5171TmfxXv2i8YvngueZMFz2QxyMyl9RraMmoHvzNFyO
iUba/hnq5BK5jBU8KJ0uhLvWJtCppANGsh3Qk6MAfCMtxks7xrnsSoXWLH2u
dVIFpP6cKBr0EuJkxy6BxGwn2mjiiWWT1eFy9gk4ofsY0zMUaK7835A8KQ6z
VQ7jlMY/17s8DtOtsuO4Un1GRr+sBc3N/rDafwpeGPyA8R3yZAP/Iwy/uEZs
cz6BkpgBCEUTOJ6TFEvvl4co40bUkNaFmnl1cKm5E208LlLL5SP+/jSdhe+9
ghH8PtrxcQdncWxY9Hb3CjgpZ4tdE+vh3vEbdGbvGVBumszOvYvFUmJEkzc8
xbFFR3DIUJMTn/GdzjVLh0MXprEIlRqy6EQisd/Nw8nBGmxTirHghu0EMHxV
hP+oZ9Pi+LminVldYJ8Sjp3jlwhUvlrg/pJNeCRSnqwMSAe3VCHIDU0lfOXl
wB+KEjX1zcFHa2WYz/id2BHahFJfAnDI+wXN4W3AII090NmWSWInlULC8Tc0
vWs0aT8TSvaqXILORapgRUJxTJ0s4WbqsOR5x8DpQh5GTtoKBVbuTM3iFW7X
2SAqOlWBH1J4yL27gWCng2OKedwRs4swJSSa8FzNYOntPNEK+f1k0TwBtguP
4cMPetiwNQ9MI7aAfbov5PXJs4iGpRBaGcT5befgRI4Z+CwTmRdlaqDddjd8
2+KHPb3pVEJlOVrwdUnXq5f0MG8e2hxQ5hK9JNidkrnsgvs2OO9ylNqNqoGp
eYFg2epLbW+6ieqDUgimdKPY9Kf4874AFy4soPUZdmheXArztytzFWNmo5O0
kYC3SwacjVbRSu4QHLJzIQ8izTAgdxxa+nzE84HvyKz2u9d7f/TT52MSsUBf
CmbMXG6u8rsMHOTEucuaEVS9VhMunFBC1ZYSfLZqLrNtjQGLqkzU5EsypcpZ
WJN6Akrsn+FPNiAaDldlr1XcYOWtlUTm7SR238gV2o9HwJdUSXaPiTCTP4cz
cLZmrU+TYGj/cwgsFmMaS7XZxn2d1LY7B04Jd8CCZDX2Nu4nJhbegPbTXnBJ
LBrMzf7Czwu+4Ev2HN0mjGh36ijm8PofckRZilWPE4qMHiShUOE9PV8WQaeb
KWDteCX2+SSPTHzrC1KFd9G36BtxLJOmhXti8M/CPrwy9gcmR7TTyjpNzq44
Fz4+umiuZ9JGawvEObEzlpArmY2zDs4HkbcG6XvyF3rp8MAseBCy3X9g1Rxt
iC8gsFhsKui8HM9yZimhWrY8Cz56G8zXZUAzhpGrbfEQfTuAGG4y4MSVz5PP
+SM/k+dKa6yWoL1OCDzwHyRzq57gyV0r8Im4Kludnw+HvMTxsHwf/nQJwvWv
zLgFhjlgejAT8lZXQ8t9VSYVNh7Sqlcwg7ABgeV+hET3JyQzyAENppVg5NM8
tJK8CSoqM+iSjZ9xi+tDEMZFgRP/N24ZYKg9fQneXrcZcyMrsHayKZfgt4F9
iBIzLxdNYX5aOpijkA6O+qNJyPoWkE5yFbSOasPbCWtxfrQkBIQWkuyOU/DV
zQgLE/tBfHY5RMuZ4akYHSpX3i6QUhaB6c43GDXoj5ERPBHukeCq5a5hSlwp
jvMohpydfLLkKEX3QTmWZabMRbxPhrYiC4jfliyQdY7EmPQ/xJRpwLKN1nDP
+yrIxMTDi1E3yfv52TRwsoiWq0tj/gYTOEczSdIzd7SQ2I5pY47SFP6/EGT1
mbzfrMRVBU2heM8bRa1F1B/60PaAPaemnY0z/ipBrvcAmDR9w+5r9mhuPpKl
yx5RNf/JuA9kwDXrXxKUvgXdtesFD7vz6P6+xSAlOZNF5TuSxL3GbMtACtYx
4NaEDtCXbh4YVd8meto2hxtQVeC+vEuFccvSYayMGlwbyeJNBh4oqleDufGq
LEO4nMzkzyFjhYfwXosUSDhGw5rdvzHcWhn8uAY4JgiCWzJDWPrYmul3fjcv
Xz2R2xU9Ea1P3iIBm9KhSrEK+kMO46fuz1T/6gGMPZqFdvyzNJV2i65eGstp
Lv6JcZWPSexda+qvZU0+hiqhjMlkCD3YhhOvG8MqPVnOcriR8IcmcBtvprPq
4izsnHAKH3wfoN4uFmTx0mrBpo+l2KnrBzkrlmITmjIlx4fgFFBOz29WZZ82
SrDETadAPmsI93e1VJQZPsbI6+5w/UE0Yb3JglZbbdg8v5a+P+SMNuLZqGuq
AokNiux/APtGkUI=
               "], CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIIiEFCUNAAxXB+
Y+sSuz/i7bb2ug/3bZtdY8e4eeu+C1mF+5qzmew3p6+ym7h+2+7tMYv2uiRH
7bP57LrvUKX7/gZt9X0bKqXtLrBO26uX8dZ2obaCff2pc/vubmu3M7UQ27Nx
7fF9c/59sV0zbbEdx/2fthtmztv3eNWhfWz7mPdZ5Wywm/a+3ZYhfLLtCm7T
/bd4LOxFHu3ax31J2T5Y0NiO68FcG9Fi6X3bdp3cd+f7RrsFqXr7Zthq7Huv
x2JXxbhgX2ih8H4974h9lc5Z+55rzbHmujzBfo3eKjtWx3g7Dx+e/YlprXbv
qzv2rZKauu/4igq7y1u377uRxrNvr9wSO/v00n1uPFvsPsVJ2OZuvrFPWdfS
jmeh8v457lz792gl71vY6m03+2javqszOu1za/v2nyrYb/vf5o6damWH7eyQ
PXbl9Xvs8hkK9537pL5PgnPVnp9Fq+yU1UL3Mwgy2r/bv8Zuf9MBOy52M3tl
thW2Bub77dbsyLXbqtayzzp2/145ZTb7X372dgsX3bAT9mPbd7Hq6T7eD6v2
eV21tHfJe2/Hx+VoP2Pnn31cv7fv+yYcuBcAjPTK5g==
               "], CompressedData["
1:eJxtj31Q03Ucx+dmbImbgpyBGwTUXRjVgcypG9/Pz93s6HhQhEVAXblx7gox
CUQOj2BtRCHjodgpeE1IHi0Tc8DJtt/nq2AcJIUcRRwgyYHyJDswuBMQCPu7
1937ffe6919vP+2pGB2Xw+GkCzYqRpOpTEvTZMW6PJfjmpSQPSnPR/+N8Dn/
oef8P/pO3j0MX4+E7hlwtE29iW4WPjWs9EF29AreVMYTbqCZ5XSHkYFBOeUr
NSTj2ATbFzeAv+q+YwOk02RZcpktdt9GZ67zqOsTC4Tqy+3jX1nRQ6jCgw0G
zHxShvvSpxyrcSLmbKQ7U+/DJ84lQq3jVeiIqsTxFh2MhaUAv/B9NDrSUPH4
Z3v06yFg/KCUbDXJ8HBeKZncC+h5VELv5AUxq8mlmBtrxENnNhHxUxupLHuG
lfE/QMLCTpQuXWZHo5oxtb0Htd8kwAlFEF1z7SKCsCbUuW5mUlOMZP5cH7Za
eVT0p5MIPrKBPMkOGp/PUdWuZf8uucZOnh7Ci9+L8etoE6gXkzHbe47ceDQL
hvogyGiUMwZigtXhXZBoKMOwjW+jm87D02FOKEddwuTHetJhyToUB+hofm0f
zNUOQhNeQ5x5B7ibLWQmpBnibwUy93mDGCBzkodJWmYxSw+miDjmkv0WzoTz
mTdCn2G4RwyWW6sxRl2CrbFq7PyrFpu5YVCB2cDFakWN9FM4Pv0t+NUEkpdy
/sBetYB5RayH0EExZUo9KeqHHB2iCnae+wB7Jr+gY+/FM/k+t7FlzB8kZXqM
+InD7Nzfji7aNpD4roLv6jIOLZkUWW4j2Bb7G8y32OFKvoKtE9rAnizE7X6B
NCdeBy8knsUm3nnU6wJo9XgJSTFPw8GWFTZb9Amcdj+JC6L9kK77GJzXPUlq
RA906eRMY68R/ORCqnHxgbXObgwIHoLhxwhWlRt5zfcEBt1IwAtdt3FX4RaI
fvAIhcdG2M8yHeTUzS9JiEyJy8xJstVwmHn5boNjLuKMI1H5I8xaVKwosoCU
TxdBUS2XXl1YZwsaBdR7nxl+6TyCh+pepSWSJtLPOwoqkRQHHxYAf2KNNFyY
xtykWshXvQtp9XkQ3HsAfvc6gldyRnE+QYt4jwt+d+xQ7Jyy2dgMLPISUK8m
LVTwgxnL3Q5QW2349ltXsarGDFG5H+IexRYK/xhpXFUdZPnLmB0rwcyOfhku
vljK9tcLSZHjACvdG4Uxu/tBWmdBZaE32+WUodzqhgOXzkHf/RF0czowsHsO
jOY66FjYTj1mxTBf3Yq2id30X0If00k=
               "], CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIIiEFCUNCAjuMe
Lrc72BJu1/zCyvbwQUl7B8bcvfdm/LMrVS2waV3fbLfdw8VmYd2iveKtfvsU
Ou3sVgl+3LdvebFdnVbY/vhlsvvV9M7ZCT7Msdtk77+vd+L7fX5CqfuamHv2
2TQes71xN8veYTOTvWiDrP3CuoJ90nZP973f37evd43O/obr9vusLsjY9yw+
aXsywdH2fVGz3cuWn/ssP2nsLxKP3Het88y+Bn9ZO/Yb0/etND2577Hru30t
x7tsXm7NtZuf9mbvx8zmfXMub7Xjrjy/V9vLbe/PtpfWzzeX2m3vm7sv70WG
naMWu12lirydUk7q/rSU5Xt3SwTa+ypP2mfkeMIm2fCk7UNuAbubTWl2k5gK
7OSXWe8799RrP+MPPrv/x+buc97JayfWLrXf6txyu/oNcvZrTl3ZGy/Zt2/S
CfN9OlIHbCcc2bNvta6crefOd/tOz55id1T6px2bNIs9h4Oz/c/KQpuj5Ufs
vrtU256tSdlbqtlnL1+na+djw2lfajhx/8oFPfuF95ze9+cel91tSYf9x9tF
9gvP27G3uPDivmNrMvbp3vizV+v1HBsA3eDRRA==
               "], CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIIiEFCSKABGe9m
rNr3va7PLnLXsn2rp4XZ6+Ra2nLHi+79Zy67T3z2Sru/MzL2H7g815a3ImAv
13f5fac32tlvbNO2VZ3OZndhyf69u08+s1vEamw33V/c+otl+T6VnHm2bKnB
dtPP/bNjt2jdN4Wn17ZsT4Xd2ZbifT+FFtvPCJ1iu5z34943Jc9s96d62F2T
19o3MT1rn8hW0f3TPzPsS5qoubuuMcWWQYHN3qzl1+7EE8x7y3432broVe+p
Y/DdbxF3xHbHLSVbJVZjW9Gyv3ayiY/2chU92Pe764Ndf//OfTOYltrOueVt
w3B3097dF5jsbxWeslt1v9f+fKPevgWmovY8jV/2rtkeZufMMsfqv4SBXfjP
WbYT6qfYMl+cse+6o8n+VJ8i24RFgXaaHlH7PaWr7SuOi9nPPSRt7y+/3Y5Z
9Izd630M+9eZMtquNnW3sXObZCcuXGHntW+P3eLmN/vYHu/d51G5YO+OCic7
FbEV++o2Lts9/9PqfdsMz9p5vplp++3eHls1m222u1+02D3OuW4nY6a5T+Pd
XztVBn7bsA2n9sw+d3avr8otG9k13XsBhgHI4w==
               "], CompressedData["
1:eJxNiWtIE1AYhtfENS0vSQuhvBUkiUm6MUR3vlNpGpqZWloJ4Waaom00FbMs
h5dJCgqBGopD0oLKaall4s53QrPCVvshWs4bzJVCNJjSH12QRj964Xl5LyEq
TXq+UCAQlIi3LF1ZfkKrVVZkiLZLnrJYGlW8fe7bYnv6T7p//M2jV6ZQOB9I
3RTupruNakxo9+a6YwFw0JaBpupFcPhTpl+LpE5JMLKhBrKUuIySiFL2scTJ
ys6aYOW2Hk8mHaDO0EvMsCuedfnaSWHaRaxTWaBnsYumaD2BFihB4qR0+lM0
fyNvhDrnOfL71mlQmQmddllwtFxDvdU++NloZfctg2BK3iTB8gC20uEHruUB
XM8+z5qWejDmux8P1A8r/MMX8NSO/dyy8ApnD3XDblcViuffxxqHm3BIb8b2
HHfeGjcDIXwT9kTIIa5eh6uPWqBx8R3UyHQY1v8FwzsVvEKYRUubz/C8r2by
rT8fuXoDx94+hZ+hkdQedZklVnixa4WTTFU4DnNSB1SpRHykXszXXk5AsDEL
bJkPIWhEwiWvm0FT+4yRqjHW56pmUmsB1XrLeO9GKm0ps5DKtmLmuBqJ614+
KEhuQJlzlRV1H0FiP0wh6QJ50WYjuTMJXF07QHJTJlHvW0M6PETwoeE5uPFe
MF7/AZvWaDI39QRnb1QyyHPjkqNK3JDfQcwUceoRRGNoPN37K4wOagwkJ83C
im72Qeq4Z2y4wYvea32ME/KdVGh+YIovO06zpTL6B4pNAE8=
               "], 
               RawArray["Real32",{{0., 0.}, {-0.29040566086769104`, 
                0.037538956850767136`}, {
                1.102798342704773, -0.7911755442619324}}]}, 
             "Version" -> {12.2, 0}, "ID" -> 1443557437972528300]], 
           MachineLearning`MLProcessor["MergeVectors", 
            Association[
            "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
             "StructurePreserving" -> True, "Input" -> 
             Association[
              "(f5f6f7f8f9f10f20)" -> 
               Association["Weight" -> 7, "Type" -> "NumericalVector"], 
               "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
               Association["Type" -> "NumericalVector", "Weight" -> 14]], 
             "Spans" -> {
               Span[1, 41], 
               Span[42, 55]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
             Association[
              "((f5f6f7f8f9f10f20)(f1f2f3f4f11f12f13f14f15f16f17f18f19f21))" -> 
               Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+LbU1fEdt46aj9KU0YzgMEHutEAPIfZsA==
                  "], "Type" -> "NumericalVector"]], "Version" -> {12.2, 0}, 
             "ID" -> 5244572383990249557]], 
           MachineLearning`MLProcessor["Values", 
            Association[
            "Info" -> Association[
              "((f5f6f7f8f9f10f20)(f1f2f3f4f11f12f13f14f15f16f17f18f19f21))" -> 
               Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+LbU1fEdt46aj9KU0YzgMEHutEAPIfZsA==
                  "], "Type" -> "NumericalVector"]], "Invertibility" -> 
             "Perfect", "StructurePreserving" -> False, "Missing" -> 
             "Allowed"]]}, "Invertibility" -> "Impossible", 
         "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
      "Calibrator" -> MachineLearning`CalibratorFunction["TemperatureScaling", 
        Association["Theta" -> 1.3939460816776243`]], "Method" -> 
      "DecisionTree", "PostProcessor" -> 
      MachineLearning`MLProcessor["Identity"], "Options" -> 
      Association[
       "DistributionSmoothing" -> 
        Association["Value" -> 1, "Options" -> Association[]], 
        "FeatureFraction" -> 
        Association["Value" -> 1, "Options" -> Association[]]]], 
    "TrainingInformation" -> 
    Association[
     "PanelCell" -> CellObject[68769], "TrainingFunction" -> Classify, 
      "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
      "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
      0.3180334`6.954017725662748, "LossName" -> "MeanCrossEntropy", 
      "BestModelInformation" -> Dataset[
        Association[
        "MeanCrossEntropy" -> 
         Around[0.0344849400423992, 0.023469670341369604`], "Accuracy" -> 
         Around[0.9937361894055189, 0.02541299817322734], "EvaluationTime" -> 
         0.00010878574904830915`, "TestSize" -> 58, "ModelMemory" -> 59568, 
         "ModelUtility" -> 2.5464278592534675`, "TrainingSize" -> 234, 
         "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 355152, 
         "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
           Around[0.0344849400423992, 0.01659556305059524]}, 
         "AccuracyHistory" -> {
           Around[0.9937361894055189, 0.017969703338570397`]}, 
         "Configuration" -> {
          "DecisionTree", "DistributionSmoothing" -> 1, "FeatureFraction" -> 
           1}, "FinalTrainingSize" -> 292], 
        TypeSystem`Struct[{
         "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
          "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
          "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
          "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
         TypeSystem`AnyType, TypeSystem`AnyType, 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Real], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Atom[Integer], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Vector[TypeSystem`AnyType, 1], 
          TypeSystem`Tuple[{
            TypeSystem`Atom[String], TypeSystem`AnyType, TypeSystem`AnyType}], 
          TypeSystem`Atom[Integer]}], 
        Association[]], "Configurations" -> Dataset[
        Association[
        Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 0.0001], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.3896496711500608, 0.10599384596246139`], "Accuracy" -> 
              Around[0.8905272351903457, 0.027010880355545858`], 
              "EvaluationTime" -> 0.00007291641573349885, "TestSize" -> 282, 
              "ModelMemory" -> 35016, "ModelUtility" -> 0.1963468991588172, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.07943282347242814, 
              "TrainingMemory" -> 132304, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.3896496711500608, 0.0749489672440988]}, 
              "AccuracyHistory" -> {
                Around[0.8905272351903457, 0.01909957666522498]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.37654751966686784`, 0.13980376154075957`], "Accuracy" -> 
              Around[0.9185748478079111, 0.0259623231847476], 
              "EvaluationTime" -> 0.000057871142058183503`, "TestSize" -> 242,
               "ModelMemory" -> 48456, "ModelUtility" -> 0.2118959869919017, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.0630957344480193, 
              "TrainingMemory" -> 191720, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.37654751966686784`, 0.09885618782085814]}, 
              "AccuracyHistory" -> {
                Around[0.9185748478079111, 0.01835813477929175]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.000057871142058183503`, "MeanCrossEntropy" -> 
             Around[0.37654751966686784`, 0.13980376154075957`], 
             "ModelMemory" -> 48456, "TrainingMemory" -> 191720, 
             "TrainingTime" -> 0.26367236806064454`], "Index" -> 1], 
         Association[
          "Value" -> "NaiveBayes", "Options" -> 
           Association["SmoothingParameter" -> Association["Value" -> 0.2]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[1.9964257626573056`, 0.49072031840785174`], "Accuracy" -> 
              Around[0.809706017644556, 0.03972423745063834], 
              "EvaluationTime" -> 0.0007550570274725627, "TestSize" -> 200, 
              "ModelMemory" -> 54320, "ModelUtility" -> -1.4325373671296227`, 
              "TrainingSize" -> 10, "TrainingTime" -> 0.03981071705534971, 
              "TrainingMemory" -> 79152, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.9964257626573056`, 0.3469916648122137]}, 
              "AccuracyHistory" -> {
                Around[0.809706017644556, 0.02808927767881098]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[1.5672056115068984`, 0.6094099238778635], "Accuracy" -> 
              Around[0.8379251007418386, 0.052984824309552314`], 
              "EvaluationTime" -> 0.0005011872336272722, "TestSize" -> 100, 
              "ModelMemory" -> 68656, "ModelUtility" -> -1.2173807516081303`, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 147552, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[1.5672056115068984`, 0.430917889696415]}, 
              "AccuracyHistory" -> {
                Around[0.8379251007418386, 0.03746592856926227]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0005011872336272722, "MeanCrossEntropy" -> 
             Around[1.5672056115068984`, 0.6094099238778635], "ModelMemory" -> 
             68656, "TrainingMemory" -> 147552, "TrainingTime" -> 
             0.1861573892745132], "Index" -> 2], 
         Association[
          "Value" -> "DecisionTree", "Options" -> 
           Association[
            "DistributionSmoothing" -> Association["Value" -> 1], 
             "FeatureFraction" -> Association["Value" -> 1]]] -> 
         Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.130782391388455, 0.034565184863459074`], "Accuracy" -> 
              Around[0.963163060797362, 0.019003606667962972`], 
              "EvaluationTime" -> 0.0000632335433330976, "TestSize" -> 242, 
              "ModelMemory" -> 45232, "ModelUtility" -> 1.28952471324958, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.03162277660168379, 
              "TrainingMemory" -> 142696, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.130782391388455, 0.024441276609918516`]}, 
              "AccuracyHistory" -> {
                Around[0.963163060797362, 0.013437579141918508`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.0344849400423992, 0.023469670341369604`], "Accuracy" -> 
              Around[0.9937361894055189, 0.02541299817322734], 
              "EvaluationTime" -> 0.00010878574904830915`, "TestSize" -> 58, 
              "ModelMemory" -> 59568, "ModelUtility" -> 2.5464278592534675`, 
              "TrainingSize" -> 234, "TrainingTime" -> 0.03981071705534971, 
              "TrainingMemory" -> 355152, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.0344849400423992, 0.01659556305059524]}, 
              "AccuracyHistory" -> {
                Around[0.9937361894055189, 0.017969703338570397`]}], 
             Association[
             "MeanCrossEntropy" -> 
              Around[0.5834718754014929, 0.0685649571893801], "Accuracy" -> 
              Around[0.7401131640482883, 0.03723699076495959], 
              "EvaluationTime" -> 0.0000683146387528988, "TestSize" -> 282, 
              "ModelMemory" -> 31920, "ModelUtility" -> -0.17765471235355024`,
               "TrainingSize" -> 10, "TrainingTime" -> 0.03162277660168379, 
              "TrainingMemory" -> 96112, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.5834718754014929, 0.04848274618037599]}, 
              "AccuracyHistory" -> {
                Around[0.7401131640482883, 0.026330528680883772`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.0000683146387528988, "MeanCrossEntropy" -> 
             Around[0.5834718754014929, 0.0685649571893801], "ModelMemory" -> 
             31920, "TrainingMemory" -> 96112, "TrainingTime" -> 
             0.12396128427860047`], "Index" -> 3], 
         Association[
          "Value" -> "RandomForest", "Options" -> 
           Association[
            "FeatureFraction" -> Association["Value" -> Automatic], 
             "LeafSize" -> Association["Value" -> Automatic], "TreeNumber" -> 
             Association["Value" -> Automatic], "DistributionSmoothing" -> 
             Association["Value" -> 0.5], "Implementation" -> 
             Association["Value" -> Automatic]]] -> Association["Experiments" -> {
             Association[
             "MeanCrossEntropy" -> 
              Around[0.425879787554919, 0.032563483595444566`], "Accuracy" -> 
              Around[0.823176593354348, 0.03871104145148135], 
              "EvaluationTime" -> 0.00017900777537149963`, "TestSize" -> 200, 
              "ModelMemory" -> 136784, "ModelUtility" -> 0.1452137823620342, 
              "TrainingSize" -> 50, "TrainingTime" -> 0.05011872336272722, 
              "TrainingMemory" -> 224680, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.425879787554919, 0.023025860069395748`]}, 
              "AccuracyHistory" -> {
                Around[0.823176593354348, 0.027372839917135988`]}]}, 
           "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 0.00017900777537149963`, "MeanCrossEntropy" -> 
             Around[0.425879787554919, 0.032563483595444566`], "ModelMemory" -> 
             136784, "TrainingMemory" -> 224680, "TrainingTime" -> 
             0.1964653955818907], "Index" -> 4], 
         Association[
          "Value" -> "NearestNeighbors", "Options" -> 
           Association[
            "NeighborsNumber" -> Association["Value" -> Automatic], 
             "DistributionSmoothing" -> Association["Value" -> 0.5], 
             "NearestMethod" -> Association["Value" -> Automatic]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 5], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.*^6], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 6], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 1.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 7], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 10000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 8], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 9], 
         Association[
          "Value" -> "LogisticRegression", "Options" -> 
           Association[
            "L1Regularization" -> Association["Value" -> 0], 
             "L2Regularization" -> Association["Value" -> 100000.], 
             "OptimizationMethod" -> Association["Value" -> Automatic], 
             MaxIterations -> Association["Value" -> 30]]] -> 
         Association[
          "Experiments" -> {}, "PredictedPerformances" -> 
           Association[
            "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
             1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 10]], 
        TypeSystem`Assoc[
         TypeSystem`Struct[{"Value", "Options"}, {
           TypeSystem`Atom[
            TypeSystem`Enumeration[
            "DecisionTree", "LogisticRegression", "NaiveBayes", 
             "NearestNeighbors", "RandomForest"]], 
           TypeSystem`Assoc[TypeSystem`AnyType, 
            TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
            TypeSystem`AnyLength]}], 
         TypeSystem`Struct[{"Experiments", "PredictedPerformances", "Index"}, {
           TypeSystem`Vector[
            
            TypeSystem`Struct[{
             "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
              "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
              "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
              "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Vector[TypeSystem`AnyType, 1], 
              TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
            TypeSystem`AnyLength], 
           
           TypeSystem`Struct[{
            "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
             "TrainingMemory", "TrainingTime"}, {
             TypeSystem`Atom[Real], TypeSystem`AnyType, 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Integer], 
             TypeSystem`Atom[Real]}], 
           TypeSystem`Atom[Integer]}], 10], 
        Association[]], "MaxTrainingSize" -> 292, 
      "PreprocessorEvaluationTime" -> 0.000012375, "PreprocessorMemory" -> 
      122720, "InputDimension" -> 21, "OutputDimension" -> 1, 
      "BaselineLogProbability" -> -0.46134494420706984`, "VariableBudget" -> 
      True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
      "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
      "LastReportingTime" -> 3.8262597634253782`17.33534943995126*^9, 
      "RoundPartitioning" -> Dataset[{
         Association[
         "TrainingSizes" -> 10, "TimeBudgets" -> 0.2479903182223158, 
          "ElapsedTimes" -> 0.6260638, "ExperimentCounts" -> 3], 
         Association[
         "TrainingSizes" -> 50, "TimeBudgets" -> 0.354271883174737, 
          "ElapsedTimes" -> 0.3830251, "ExperimentCounts" -> 4], 
         Association[
         "TrainingSizes" -> 234, "TimeBudgets" -> 0.5061026902496241, 
          "ElapsedTimes" -> 0.3485523, "ExperimentCounts" -> 1]}, 
        TypeSystem`Vector[
         TypeSystem`Struct[{
          "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
           "ExperimentCounts"}, {
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer]}], 3], 
        Association[]]], "AnomalyDetector" -> None, "Log" -> 
    Association["Example" -> MachineLearning`MLDataset[
        Association[
        "f1" -> Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {9.9}, "ID" -> 
           4525956837581453641], "f2" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {24.4}, "ID" -> 
           9166730886693948270], "f3" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
           990524332453264237], "f4" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {5.8}, "ID" -> 
           232448991201422582], "f5" -> 
         Association[
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {10.8}, "ID" -> 
           7754382459845470914], "f6" -> 
         Association[
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"NE"}, "ID" -> 
           329585617001349521], "f7" -> 
         Association[
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {28.}, "ID" -> 
           3243215497704270151], "f8" -> 
         Association[
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"SE"}, "ID" -> 
           6841301414025814389], "f9" -> 
         Association[
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"E"}, "ID" -> 
           2066190972337303861], "f10" -> 
         Association[
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {7.}, "ID" -> 
           2624762530792798180], "f11" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.}, "ID" -> 
           1753102248525463586], "f12" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {60.}, "ID" -> 
           2618579850348136583], "f13" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {38.}, "ID" -> 
           1361077257524445132], "f14" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1021.6}, "ID" -> 
           4650329820652959046], "f15" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1019.2}, "ID" -> 
           4260525428114561835], "f16" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.}, "ID" -> 
           6148215246205187820], "f17" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {4.}, "ID" -> 
           677977307689347416], "f18" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {16.2}, "ID" -> 
           4175785524861886403], "f19" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {22.7}, "ID" -> 
           990122695496599883], "f20" -> 
         Association[
          "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"No"}, "ID" -> 
           4272969664753640397], "f21" -> 
         Association[
          "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
           1961685482141474880]], 
        Association[
        "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0, 
         "RawExample" -> False]], "TrainingTime" -> 2.3983675, 
      "MaxTrainingMemory" -> 972432, "DataMemory" -> 205840, "FunctionMemory" -> 
      334048, "LanguageVersion" -> {12.2, 0}, "Date" -> 
      DateObject[{2021, 4, 1, 9, 56, 3.7243793`8.323628885163293}, "Instant", 
        "Gregorian", 8.], "ProcessorCount" -> 4, "ProcessorType" -> "x86-64", 
      "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
      "Evaluations" -> {}]]],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{{3.8262308313619947`*^9, 3.826230885316156*^9}, 
   3.826230963938368*^9},
 CellLabel->"Out[20]=",ExpressionUUID->"eba3df0b-5538-40ac-99fa-6b33c018bc89"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"accuracy", " ", "test"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"myAccuracy", "=", 
     RowBox[{"ClassifierMeasurements", "[", 
      RowBox[{"myClassify", ",", "myDataTest"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"myAccuracy", "[", "\"\<Report\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{"myAccuracy", "/@", 
    RowBox[{"{", "\"\<ResidualPlot\>\"", "}"}]}]}]}]], "Input",
 CellChangeTimes->{{3.820749261344601*^9, 3.820749261806549*^9}, {
  3.820749462174286*^9, 3.8207495074711943`*^9}, {3.820750119883649*^9, 
  3.820750127513652*^9}, {3.826230951359383*^9, 3.8262309957817698`*^9}, {
  3.8262312431424837`*^9, 3.82623124681787*^9}},
 CellLabel->"In[24]:=",ExpressionUUID->"53fdd2ff-7bbd-4545-bd48-a4b20623d0e0"],

Cell[BoxData[
 TagBox[
  StyleBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        FrameBox[
         StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
          StripOnInput->False,
          FontSize->12],
         FrameMargins->{{10, 5}, {-4, 2}},
         FrameStyle->None,
         StripOnInput->False],
        Alignment->{Left, Bottom},
        Background->RGBColor[0.96, 0.96, 0.96],
        Frame->{{False, False}, {True, False}},
        FrameStyle->Opacity[0.1],
        ItemSize->{Automatic, 1},
        StripOnInput->False]},
      {
       ItemBox[
        TagBox[
         FrameBox[
          TagBox[GridBox[{
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Classifier method"], 
                  TextCell["Classifier method"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              
              InterpretationBox[Cell[
               "DecisionTree",ExpressionUUID->
                "4bbc8efc-2a31-4b64-914b-7491db035425"],
               TextCell["DecisionTree"]]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Number of test examples"], 
                  TextCell["Number of test examples"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], "74"},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Accuracy"], 
                  TextCell["Accuracy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"100.0000000000000", "00", "22"}, "AroundSeq",
                     SyntaxForm -> PlusMinus], 
                   Around[100.`3., 2.220446049250313080847263`3.*^-14]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 TagBox[
                  TooltipBox[
                   InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                   "\"Accuracy if predicting the commonest class\"", 
                   LabelStyle -> "TextStyling"], 
                  Annotation[#, "Accuracy if predicting the commonest class", 
                   "Tooltip"]& ], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{
                RowBox[{"(", 
                  InterpretationBox[
                   
                   TemplateBox[{"78.", "5."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                   Around[
                   78.3783783783783718491`3., 4.8181557897067763818`3.]], 
                  ")"}], "\"%\"", "percent", "\"Percent\""},
               "QuantityPostfix"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Geometric mean of probabilities"], 
                  TextCell["Geometric mean of probabilities"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.9982415784586571306`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0002496582654608615`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.9977422619277354077`3.",
                   "\", \"", "0.9987408949895788535`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.9977422619277354077`3., 
                  ", ", 0.9987408949895788535`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Mean cross entropy"], 
                  TextCell["Mean cross entropy"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TagBox[
               TooltipBox[
                TemplateBox[{"0.0017599693792685822`3.", 
                  StyleBox[
                   
                   TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0002500980406403396`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                 "RowDefault"],
                
                TemplateBox[{
                 "\"95% confidence interval: [\"", "0.0012597732979879029`3.",
                   "\", \"", "0.0022601654605492617`3.", "\"]\""}, 
                 "RowDefault"],
                TooltipStyle->{}],
               Annotation[#, 
                
                Row[{"95% confidence interval: [", 0.0012597732979879029`3., 
                  ", ", 0.0022601654605492617`3., "]"}], "Tooltip"]& ]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Single evaluation time"], 
                  TextCell["Single evaluation time"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"8.71`", 
                RowBox[{
                 "\"ms\"", "\[InvisibleSpace]", "\"/\"", "\[InvisibleSpace]", 
                  "\"example\""}], "milliseconds per example", 
                FractionBox["\"Milliseconds\"", "\"Examples\""]},
               "Quantity"]},
             {
              TemplateBox[{
                TemplateBox[{5}, "Spacer1"], 
                StyleBox[
                 InterpretationBox[
                  Cell["Batch evaluation speed"], 
                  TextCell["Batch evaluation speed"]], 
                 GrayLevel[0.4], StripOnInput -> False]},
               "RowDefault"], 
              TemplateBox[{"2.22`", 
                
                RowBox[{
                 "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                  "\[InvisibleSpace]", "\"ms\""}], "examples per millisecond", 
                FractionBox["\"Examples\"", "\"Milliseconds\""]},
               "Quantity"]},
             {
              ItemBox[
               
               GraphicsBox[
                RasterBox[{{{1., 1., 1.}, {0.904569562667561, 
                 0.7526766134765918, 0.3881677948913043}}, {{1., 0.42, 0.}, {
                 1., 1., 1.}}}, {{0, 0}, {2, 2}}, {0, 1}],
                Epilog->{{
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["58", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "58", "\" examples of \"", "\"No\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{58, " examples of ", "No", " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"Yes\"", 
                    "\" misclassified as \"", "\"No\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "Yes", " misclassified as ", 
                    "No"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"No\"", 
                    "\" misclassified as \"", "\"Yes\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "No", " misclassified as ", 
                    "Yes"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                   TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "\"Yes\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{16, " examples of ", "Yes", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ]}, 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "58", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"No\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{58, " example", "s", " of class ", "No"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"Yes\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " of class ", "Yes"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "58", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"No\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{58, " example", "s", " classified as ", "No"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                  TagBox[
                   TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"Yes\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " classified as ", "Yes"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
                Frame->True,
                FrameLabel->{
                  FormBox["\"predicted class\"", TraditionalForm], 
                  FormBox["\"actual class\"", TraditionalForm]},
                FrameTicks->{{{{1.5, 
                    FormBox[
                    RotationBox["\"No\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"Yes\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{1.5, 
                    FormBox["58", TraditionalForm]}, {0.5, 
                    FormBox["16", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["58", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["16", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["\"No\"", BoxRotation -> 1.5707963267948966`],
                     TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"Yes\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                FrameTicksStyle->13,
                GridLinesStyle->Directive[
                  GrayLevel[0.5, 0.4]],
                ImageSize->181.2,
                
                Method->{
                 "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                  Automatic, 
                  "DefaultGraphicsInteraction" -> {
                   "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                  "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                  Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                PlotRangePadding->None],
               Alignment->Center,
               StripOnInput->False], "\[SpanFromLeft]"}
            },
            AutoDelete->False,
            ColumnsEqual->False,
            
            GridBoxAlignment->{
             "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
            GridBoxDividers->{"Columns" -> {False, {
                 Opacity[0.15]}, False}},
            
            GridBoxItemSize->{
             "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.27999999999999997`], 
                Offset[1.1199999999999999`], {
                 Offset[1.75]}, 
                Offset[0.27999999999999997`]}, "Rows" -> {
                Offset[0.2], {
                 Offset[0.8]}, 
                Offset[0.2]}}],
           "Grid"],
          FrameMargins->{{10, 10}, {10, 5}},
          FrameStyle->None,
          StripOnInput->False],
         Deploy,
         DefaultBaseStyle->"Deploy"],
        Alignment->Center,
        BaseStyle->{
         FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
          NumberMarks -> False, Deployed -> False},
        StripOnInput->False]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
     GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
     GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "Rows" -> {
         Offset[0.2], 
         Offset[0.8], {
          Offset[0.4]}, 
         Offset[0.2]}}],
    Background->GrayLevel[1],
    FrameMargins->{{0, 0}, {0, 0}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   StripOnInput->False,
   LineBreakWithin->False],
  Deploy,
  DefaultBaseStyle->"Deploy"]], "Output",
 CellChangeTimes->{
  3.8207492817295475`*^9, 3.820749312227522*^9, {3.8207494821456895`*^9, 
   3.820749508752392*^9}, {3.820749906806616*^9, 3.820749932800001*^9}, {
   3.8262309752834487`*^9, 3.8262309990597935`*^9}},
 CellLabel->"Out[25]=",ExpressionUUID->"c3e40d40-acab-4e50-bdfa-6bb05af89908"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierMeasurementsObject", "elmntav", 
   "\"\\!\\(\\*RowBox[{\\\"\\\\\\\"\\\\\\\\\\\\\\\"ResidualPlot\\\\\\\\\\\\\\\
\"\\\\\\\"\\\"}]\\) is not an available \\!\\(\\*RowBox[{\\\"\\\\\\\"property\
\\\\\\\"\\\"}]\\).\"", 2, 26, 5, 19893325542889681013, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{{3.8262309749207315`*^9, 3.8262309991746745`*^9}},
 CellLabel->
  "During evaluation of \
In[24]:=",ExpressionUUID->"2a837225-8725-4044-9dbc-7d1e384b9190"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TagBox[
     StyleBox[
      FrameBox[GridBox[{
         {
          ItemBox[
           FrameBox[
            StyleBox["\<\"Classifier Measurements\"\>", "SuggestionsBarText",
             StripOnInput->False,
             FontSize->12],
            FrameMargins->{{10, 5}, {-4, 2}},
            FrameStyle->None,
            StripOnInput->False],
           Alignment->{Left, Bottom},
           Background->RGBColor[0.96, 0.96, 0.96],
           Frame->{{False, False}, {True, False}},
           FrameStyle->Opacity[0.1],
           ItemSize->{Automatic, 1},
           StripOnInput->False]},
         {
          ItemBox[
           TagBox[
            FrameBox[
             TagBox[GridBox[{
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Classifier method"], 
                    TextCell["Classifier method"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 
                 InterpretationBox[Cell[
                  "DecisionTree",ExpressionUUID->
                   "e9537a07-c387-4060-831d-43d011c8dfce"],
                  TextCell["DecisionTree"]]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Number of test examples"], 
                    TextCell["Number of test examples"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], "74"},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Accuracy"], 
                    TextCell["Accuracy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"100.0000000000000", "00", "22"}, 
                    "AroundSeq", SyntaxForm -> PlusMinus], 
                    Around[100.`3., 2.220446049250313080847263`3.*^-14]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    TagBox[
                    TooltipBox[
                    InterpretationBox[
                    Cell["Accuracy baseline"], 
                    TextCell["Accuracy baseline"]], 
                    "\"Accuracy if predicting the commonest class\"", 
                    LabelStyle -> "TextStyling"], 
                    Annotation[#, 
                    "Accuracy if predicting the commonest class", 
                    "Tooltip"]& ], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{
                   RowBox[{"(", 
                    InterpretationBox[
                    
                    TemplateBox[{"78.", "5."}, "Around", SyntaxForm -> 
                    PlusMinus], 
                    Around[
                    78.3783783783783718491`3., 4.8181557897067763818`3.]], 
                    ")"}], "\"%\"", "percent", "\"Percent\""},
                  "QuantityPostfix"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Geometric mean of probabilities"], 
                    TextCell["Geometric mean of probabilities"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.9982415784586571306`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0002496582654608615`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.9977422619277354077`3.", "\", \"", 
                    "0.9987408949895788535`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.9977422619277354077`3., ", ", 0.9987408949895788535`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Mean cross entropy"], 
                    TextCell["Mean cross entropy"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TagBox[
                  TooltipBox[
                   TemplateBox[{"0.0017599693792685822`3.", 
                    StyleBox[
                    
                    TemplateBox[{
                    "\" \[PlusMinus] \"", "0.0002500980406403396`2."}, 
                    "RowDefault"], {10, 
                    Opacity[0.5]}, StripOnInput -> False]},
                    "RowDefault"],
                   
                   TemplateBox[{
                    "\"95% confidence interval: [\"", 
                    "0.0012597732979879029`3.", "\", \"", 
                    "0.0022601654605492617`3.", "\"]\""}, "RowDefault"],
                   TooltipStyle->{}],
                  Annotation[#, 
                   
                   Row[{"95% confidence interval: [", 
                    0.0012597732979879029`3., ", ", 0.0022601654605492617`3., 
                    "]"}], "Tooltip"]& ]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Single evaluation time"], 
                    TextCell["Single evaluation time"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"8.71`", 
                   
                   RowBox[{
                    "\"ms\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"example\""}], 
                   "milliseconds per example", 
                   FractionBox["\"Milliseconds\"", "\"Examples\""]},
                  "Quantity"]},
                {
                 TemplateBox[{
                   TemplateBox[{5}, "Spacer1"], 
                   StyleBox[
                    InterpretationBox[
                    Cell["Batch evaluation speed"], 
                    TextCell["Batch evaluation speed"]], 
                    GrayLevel[0.4], StripOnInput -> False]},
                  "RowDefault"], 
                 TemplateBox[{"2.22`", 
                   
                   RowBox[{
                    "\"examples\"", "\[InvisibleSpace]", "\"/\"", 
                    "\[InvisibleSpace]", "\"ms\""}], 
                   "examples per millisecond", 
                   FractionBox["\"Examples\"", "\"Milliseconds\""]},
                  "Quantity"]},
                {
                 ItemBox[
                  
                  GraphicsBox[
                   RasterBox[{{{1., 1., 1.}, {0.904569562667561, 
                    0.7526766134765918, 0.3881677948913043}}, {{1., 0.42, 
                    0.}, {1., 1., 1.}}}, {{0, 0}, {2, 2}}, {0, 1}],
                   Epilog->{{
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["58", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "58", "\" examples of \"", "\"No\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{58, " examples of ", "No", " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"Yes\"", 
                    "\" misclassified as \"", "\"No\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{0, " example of ", "Yes", " misclassified as ", 
                    "No"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ]}, {
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["0", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 1.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "0", "\" example of \"", "\"No\"", 
                    "\" misclassified as \"", "\"Yes\""}, "RowDefault"]}, {
                    
                    TemplateBox[{"\"Column fraction = \"", "0.`"}, 
                    "RowDefault"]}, {
                    
                    TemplateBox[{"\"Row fraction = \"", "0.`"}, 
                    "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{0, " example of ", "No", " misclassified as ", 
                    "Yes"}], 
                    Row[{"Column fraction = ", 0.}], 
                    Row[{"Row fraction = ", 0.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[1.], 
                    InsetBox[
                    FormBox["16", TraditionalForm], {0.5, 0.5}, BaseStyle -> 
                    10], 
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, 0.5}, Automatic, {
                    1., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" examples of \"", "\"Yes\"", 
                    "\" correctly classified\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}, {
                    TemplateBox[{"\"FScore = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    
                    Row[{16, " examples of ", "Yes", 
                    " correctly classified"}], 
                    Row[{"Precision = ", 1.}], 
                    Row[{"Recall = ", 1.}], 
                    Row[{"FScore = ", 1.}]}], "Tooltip"]& ]}, 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 1.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "58", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"No\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{58, " example", "s", " of class ", "No"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {2.5, 0.5}, Automatic, {
                    10., 1.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" of class \"", 
                    "\"Yes\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Recall = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " of class ", "Yes"}], 
                    Row[{"Recall = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {0.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "58", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"No\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{58, " example", "s", " classified as ", "No"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ], 
                    TagBox[
                    TooltipBox[
                    InsetBox[
                    GraphicsBox[{
                    Opacity[0.], 
                    RectangleBox[{0, 0}, {1, 1}]}], {1.5, -0.5}, Automatic, {
                    1., 10.}], 
                    TagBox[
                    GridBox[{{
                    
                    TemplateBox[{
                    "16", "\" example\"", "\"s\"", "\" classified as \"", 
                    "\"Yes\""}, "RowDefault"]}, {
                    TemplateBox[{"\"Precision = \"", "1.`"}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"]], Annotation[#, 
                    Column[{
                    Row[{16, " example", "s", " classified as ", "Yes"}], 
                    Row[{"Precision = ", 1.}]}], "Tooltip"]& ]},
                   Frame->True,
                   FrameLabel->{
                    FormBox["\"predicted class\"", TraditionalForm], 
                    FormBox["\"actual class\"", TraditionalForm]},
                   FrameTicks->{{{{1.5, 
                    FormBox[
                    RotationBox["\"No\"", BoxRotation -> 0.], 
                    TraditionalForm]}, {0.5, 
                    FormBox[
                    RotationBox["\"Yes\"", BoxRotation -> 0.], 
                    TraditionalForm]}}, {{1.5, 
                    FormBox["58", TraditionalForm]}, {0.5, 
                    FormBox["16", TraditionalForm]}}}, {{{0.5, 
                    FormBox[
                    RotationBox["58", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox["16", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}, {{0.5, 
                    FormBox[
                    RotationBox["\"No\"", BoxRotation -> 1.5707963267948966`],
                     TraditionalForm]}, {1.5, 
                    FormBox[
                    RotationBox[
                    "\"Yes\"", BoxRotation -> 1.5707963267948966`], 
                    TraditionalForm]}}}},
                   FrameTicksStyle->13,
                   GridLinesStyle->Directive[
                    GrayLevel[0.5, 0.4]],
                   ImageSize->181.2,
                   
                   Method->{
                    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> 
                    Automatic, 
                    "DefaultGraphicsInteraction" -> {
                    "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
                    "Effects" -> {
                    "Highlight" -> {"ratio" -> 2}, 
                    "HighlightPoint" -> {"ratio" -> 2}, 
                    "Droplines" -> {
                    "freeformCursorMode" -> True, 
                    "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
                    "DefaultPlotStyle" -> Automatic, "DomainPadding" -> 
                    Scaled[0.02], "RangePadding" -> Scaled[0.05]},
                   PlotRangePadding->None],
                  Alignment->Center,
                  StripOnInput->False], "\[SpanFromLeft]"}
               },
               AutoDelete->False,
               ColumnsEqual->False,
               
               GridBoxAlignment->{
                "Columns" -> {Right, {Left}}, "Rows" -> {{Baseline}}},
               GridBoxDividers->{"Columns" -> {False, {
                    Opacity[0.15]}, False}},
               
               GridBoxItemSize->{
                "Columns" -> {Automatic, {Automatic}}, "Rows" -> {{1.}}},
               GridBoxSpacings->{"Columns" -> {
                   Offset[0.27999999999999997`], 
                   Offset[1.1199999999999999`], {
                    Offset[1.75]}, 
                   Offset[0.27999999999999997`]}, "Rows" -> {
                   Offset[0.2], {
                    Offset[0.8]}, 
                   Offset[0.2]}}],
              "Grid"],
             FrameMargins->{{10, 10}, {10, 5}},
             FrameStyle->None,
             StripOnInput->False],
            Deploy,
            DefaultBaseStyle->"Deploy"],
           Alignment->Center,
           
           BaseStyle->{
            FontWeight -> "Light", FontSize -> 11, FontFamily -> "Segoe UI", 
             NumberMarks -> False, Deployed -> False},
           StripOnInput->False]}
        },
        DefaultBaseStyle->"Column",
        GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
        GridBoxDividers->{"Columns" -> {{False}}, "Rows" -> {{False}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{1.}}},
        GridBoxSpacings->{"Columns" -> {
            Offset[0.27999999999999997`], {
             Offset[0.5599999999999999]}, 
            Offset[0.27999999999999997`]}, "Rows" -> {
            Offset[0.2], 
            Offset[0.8], {
             Offset[0.4]}, 
            Offset[0.2]}}],
       Background->GrayLevel[1],
       FrameMargins->{{0, 0}, {0, 0}},
       FrameStyle->GrayLevel[0.85],
       RoundingRadius->5,
       StripOnInput->False],
      StripOnInput->False,
      LineBreakWithin->False],
     Deploy,
     DefaultBaseStyle->"Deploy"],
    ClassifierMeasurementsObject[
     Association["Model" -> ClassifierFunction[
        Association[
        "ExampleNumber" -> 292, "ClassNumber" -> 2, "Input" -> 
         Association[
          "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
             Association[
             "Input" -> Association[
               "f1" -> Association["Type" -> "Numerical"], "f2" -> 
                Association["Type" -> "Numerical"], "f3" -> 
                Association["Type" -> "Numerical"], "f4" -> 
                Association["Type" -> "Numerical"], "f5" -> 
                Association["Type" -> "Nominal"], "f6" -> 
                Association["Type" -> "Nominal"], "f7" -> 
                Association["Type" -> "Nominal"], "f8" -> 
                Association["Type" -> "Nominal"], "f9" -> 
                Association["Type" -> "Nominal"], "f10" -> 
                Association["Type" -> "Nominal"], "f11" -> 
                Association["Type" -> "Numerical"], "f12" -> 
                Association["Type" -> "Numerical"], "f13" -> 
                Association["Type" -> "Numerical"], "f14" -> 
                Association["Type" -> "Numerical"], "f15" -> 
                Association["Type" -> "Numerical"], "f16" -> 
                Association["Type" -> "Numerical"], "f17" -> 
                Association["Type" -> "Numerical"], "f18" -> 
                Association["Type" -> "Numerical"], "f19" -> 
                Association["Type" -> "Numerical"], "f20" -> 
                Association["Type" -> "Nominal"], "f21" -> 
                Association["Type" -> "Numerical"]], "Output" -> 
              Association[
               "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f3" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f4" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f5" -> Association["Type" -> "Nominal", "Weight" -> 1], "f6" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f7" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f8" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f9" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f10" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f11" -> 
                Association["Type" -> "Numerical", "Weight" -> 1], "f12" -> 
                Association["Type" -> "Numerical", "Weight" -> 1], "f13" -> 
                Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
                Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
                Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
                Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
                Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
                Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
                Association["Type" -> "Numerical", "Weight" -> 1], "f20" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f21" -> 
                Association["Type" -> "Numerical", "Weight" -> 1]], 
              "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                Association["Processors" -> {
                   MachineLearning`MLProcessor["Transpose", 
                    Association["FeatureNumber" -> 21]], 
                   MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Nominal", "Numerical"}, 
                    "FeatureKeys" -> {
                    "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", 
                    "f10", "f11", "f12", "f13", "f14", "f15", "f16", "f17", 
                    "f18", "f19", "f20", "f21"}, "FeatureWeights" -> 
                    Automatic, "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> False, "Invertibility" -> 
              "Perfect", "StructurePreserving" -> False, "Missing" -> 
              "Allowed"]], "Processor" -> 
           MachineLearning`MLProcessor["Sequence", 
             Association[
             "Input" -> Association[
               "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f3" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f4" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f11" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f12" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f13" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f14" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f15" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f16" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f17" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f18" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f19" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f21" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f5" -> Association["Type" -> "Nominal", "Weight" -> 1], "f6" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f7" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f8" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f9" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f10" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f20" -> 
                Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
              Association[
               "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                Association["Type" -> "NumericalVector", "Weight" -> 14], 
                "(f5f6f7f8f9f10f20)" -> 
                Association["Type" -> "NominalVector", "Weight" -> 7]], 
              "Processors" -> {
                MachineLearning`MLProcessor["Threads", 
                 Association[
                 "Input" -> 
                  Association[
                   "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                    "f2" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f3" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f11" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f12" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f13" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f21" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
                    Association["Type" -> "Nominal", "Weight" -> 1], "f6" -> 
                    Association["Type" -> "Nominal", "Weight" -> 1], "f7" -> 
                    Association["Type" -> "Nominal", "Weight" -> 1], "f8" -> 
                    Association["Type" -> "Nominal", "Weight" -> 1], "f9" -> 
                    Association["Type" -> "Nominal", "Weight" -> 1], "f10" -> 
                    Association["Type" -> "Nominal", "Weight" -> 1], "f20" -> 
                    Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Output" -> 
                  Association[
                   "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14], 
                    "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7]], 
                  "Processors" -> {
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f2" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f11" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f12" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f13" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f21" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                    "Output" -> 
                    Association[
                    "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                     "Version" -> {12.2, 0}, "ID" -> 4365890816216361023]], 
                    MachineLearning`MLProcessor["ToVector", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f5" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f6" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f7" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f8" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f9" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f10" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f20" -> Association["Type" -> "Nominal", "Weight" -> 1]],
                     "Output" -> 
                    Association[
                    "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7]], 
                    "Version" -> {12.2, 0}, "ID" -> 3089886697020883640]]}, 
                  "Invertibility" -> "Perfect", "StructurePreserving" -> True,
                   "Missing" -> "Allowed"]], 
                MachineLearning`MLProcessor["Threads", 
                 Association[
                 "Input" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7], 
                    "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                   "Output" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7], 
                    "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                   "Processors" -> {
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7]], 
                    "VectorLength" -> 7, "Output" -> 
                    Association[
                    "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7]], 
                    "Type" -> "NominalVector", "Version" -> {12.2, 0}, "ID" -> 
                    2787103142329180041]], 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                     "Imputer" -> (DimensionReducerFunction[
                    Association[
                    "ExampleNumber" -> 292, "Imputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {7.033219178082191, 20.44691780821917, 
                    1.3746575342465748`, 4.5301369863013665`, 
                    17.623287671232877`, 72.12328767123287, 
                    44.294520547945204`, 1020.1297945205475`, 
                    1017.2051369863012`, 3.835616438356164, 
                    3.8595890410958904`, 12.174657534246577`, 
                    19.149657534246593`, 1.3801369863013693`}, "Method" -> 
                    "Naive", "VectorLength" -> 14, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {7.033219178082191, 20.44691780821917, 
                    1.3746575342465748`, 4.5301369863013665`, 
                    17.623287671232877`, 72.12328767123287, 
                    44.294520547945204`, 1020.1297945205475`, 
                    1017.2051369863012`, 3.835616438356164, 
                    3.8595890410958904`, 12.174657534246577`, 
                    19.149657534246593`, 1.3801369863013693`}, 
                    "StandardDeviation" -> {5.975861196024612, 
                    6.6873237336973785`, 4.345463886579489, 2.66109385952093, 
                    8.673799637420842, 13.105415805604691`, 
                    16.642562948129548`, 6.445214532447195, 6.312604887157415,
                     2.93310672000912, 2.6658951763688594`, 5.581105743584622,
                     6.624061051516925, 4.281692788129442}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 14, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                    MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 14]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "Processor" -> 
                    MachineLearning`MLProcessor["Identity"], "Model" -> 
                    Association["Matrix" -> CompressedData["
1:eJwNwws4EwgcAHBKWueRd6iF7qLrgRInvvzJHR/ZKWHTQ/fJkhIKFaUvKcm6
z+TRId0+kovF2jxO4r/Na2PLHh4zZecRk5LUpcR1/b7vZxMRF0RdpqGhof/t
d98akdJ6Dc8NoH9+Q7dLbCdsPGucyxILsf7NZJGHBwuOW+R+7rvTiZsou0qI
HxgwnGIZStWSgOvX7Q6ap1rRn2I+tiZDAoRqBs99Gw3sRwuflPw9iENNZRVT
YRx8Fyuk9AyKcKpFOzsIS+FJeWCAbx4L8qKLk8MfN2OADdFur+VDbDUNO5tq
IkK1RUOnit6C4Z+2F3rPVEO/W/aF83M5GBV4O9k5TQqhJDOzk5IWiDfWTlOR
JsFCTD/ndECMmoLF96LGF+A0ZC33UTfhDRuv6xefPsJXCwf0nLbIcQtRlRLx
sBRsd4hqHBIGUDexaw1Z8QfuS1+BxNB4MDlYTrpYycMXrKHZcjoXDaHdSTrZ
BWt1FTXM5c3gmbtH6nisH3JLfiJuyKzH6KIE+SufKVT3BiTU+THQl/Q9c37r
I9C6HvTxN7txiCX+Q2w5LcUkbtzjZk8ZlhdhiMm6xzh7uLLYWiiB9Z1dFtvY
I/inKcV5VluMo9meE5yN9eiR46KvtUcME8N+PmpFDyTcaqsQ7JZiDwR23CuW
wZ5pnmrpmQy6Sab3k8ueY8sxZ/Hsjx2gw/09WA/7MPKIOyE/VYBTVjGfQhRD
eIH8xW/Bphvi6FXjR/cNQYbyv/D5X+twp0GAc2tEOj64lvxAYs/E22tPFuza
yQfaDNV+rLALjtqcyaHQuEhoTCfpkseB73HIsr60CTXmvKirD0nAICXYeqBR
jurz0W97GxS4P6g38e5TRO9lPl6nrLrwvVv7DC9JBAUJ86lEdiNMcW+NRJ0Q
Y03tVc5lThsmrnpfV0/JwRD6PaoqSwqC4Xz2fIQMY5YK2OzFPrRVfHzNzK3F
yf0D+3nTUlz3nKaMZ8mg6IrI2OpdOzhfLK6/c7kdC5aqIjMZLOyZFggPFbHR
2zyDecCwBm5WaH96sEYJryt9XYwUQmzLDomUyfkYVdxj4uKuxFrq6aSYADke
MZl3/DrSB62uliPVNCVEXrLdJGAOoDLfqI1aJoEQR/5ncVMVEK6rbFvuDkLA
v1YXZnZ04OSHaGtyUx8GlWwtjpp7hhKNVXkp5cchQ6Cl42WgRuXBExrt7zqw
i+Y2sdjJwYUqZihtMw9XnhtLdDdRovl9MnckiQ2uLFn0cg8+mh3Omr6iWYHV
czD8sZePRypX+LWy6qAmtyDreDkbDJtYfIMGAXLaZa1pvQK4nD1KuPumGzxH
9FYvkQeRQLT+ZcHrCe7Ov1Ex1SDG7puuDLPgahAVEsmXfNngXJVnl/KSh/pO
X1ZtUldiRZXOVRcUovJqodPmtjZ0XK+/0MDgwIZ0nYfqiDK8NXDPetvKftAP
81xZ68ZBLt10aVd4P+b7hycrxkfhw+agH/TGVOCw5WdlpqEQhhxfnfEO/gtn
X9LfUpLkuNcfAsPMefA/VehY6g==
                    "], "Processor" -> MachineLearning`MLProcessor["Sequence", 
                    Association[
                    "Input" -> Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association["f1" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {7.033219178082191, 20.44691780821917, 
                    1.3746575342465748`, 4.5301369863013665`, 
                    17.623287671232877`, 72.12328767123287, 
                    44.294520547945204`, 1020.1297945205475`, 
                    1017.2051369863012`, 3.835616438356164, 
                    3.8595890410958904`, 12.174657534246577`, 
                    19.149657534246593`, 1.3801369863013693`}, 
                    "StandardDeviation" -> {5.975861196024612, 
                    6.6873237336973785`, 4.345463886579489, 2.66109385952093, 
                    8.673799637420842, 13.105415805604691`, 
                    16.642562948129548`, 6.445214532447195, 6.312604887157415,
                     2.93310672000912, 2.6658951763688594`, 5.581105743584622,
                     6.624061051516925, 4.281692788129442}, "Output" -> 
                    Association["f1" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 
                    1]]]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "FinalDimension" -> 10, "Padder" -> 
                    MachineLearning`MLProcessor["Identity"], "Method" -> 
                    "Linear"], "PerformanceGoal" -> Automatic, 
                    "Invertibility" -> "Approximate", "Log" -> 
                    Association[
                    "TrainingTime" -> 0.0279355, "MaxTrainingMemory" -> 
                    172088, "DataMemory" -> 32880, "FunctionMemory" -> 23424, 
                    "LanguageVersion" -> {12.2, 0}, "Date" -> 
                    DateObject[{
                    2021, 4, 1, 9, 56, 1.4353198`7.909523662346748}, 
                    "Instant", "Gregorian", 8.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "Windows", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}]]][#, "ImputedVectors", 
                    PerformanceGoal -> "Quality"]& ), "Method" -> 
                    "DimensionReduction", "VectorLength" -> 14, "Output" -> 
                    Association[
                    "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                     "Type" -> "NumericalVector", "Version" -> {12.2, 0}, 
                    "ID" -> 3972838121628584863]]}, "Invertibility" -> 
                  "Perfect", "StructurePreserving" -> True, "Missing" -> 
                  "Imputed"]], 
                MachineLearning`MLProcessor["Standardize", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                   "Mean" -> {7.033219178082191, 20.44691780821917, 
                   1.3746575342465748`, 4.5301369863013665`, 
                   17.623287671232877`, 72.12328767123287, 
                   44.294520547945204`, 1020.1297945205475`, 
                   1017.2051369863012`, 3.835616438356164, 
                   3.8595890410958904`, 12.174657534246577`, 
                   19.149657534246593`, 1.3801369863013693`}, 
                  "StandardDeviation" -> {5.975861196024612, 
                   6.6873237336973785`, 4.345463886579489, 2.66109385952093, 
                   8.673799637420842, 13.105415805604691`, 
                   16.642562948129548`, 6.445214532447195, 6.312604887157415, 
                   2.93310672000912, 2.6658951763688594`, 5.581105743584622, 
                   6.624061051516925, 4.281692788129442}, "Output" -> 
                  Association[
                   "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                   "Version" -> {12.2, 0}, "ID" -> 3564137223642712157]], 
                MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7]], 
                  "Index" -> {
                    Association[
                    0. -> 1, 0.1 -> 2, 0.2 -> 3, 0.3 -> 4, 0.4 -> 5, 0.6 -> 6,
                     0.8 -> 7, 1.2 -> 8, 1.6 -> 9, 1.8 -> 10, 1.9 -> 11, 2. -> 
                    12, 2.2 -> 13, 2.3 -> 14, 2.4 -> 15, 2.7 -> 16, 2.8 -> 17,
                     2.9 -> 18, 3. -> 19, 3.3 -> 20, 3.5 -> 21, 3.6 -> 22, 
                    3.8 -> 23, 3.9 -> 24, 4.1 -> 25, 4.2 -> 26, 4.3 -> 27, 
                    4.6 -> 28, 4.7 -> 29, 4.9 -> 30, 5.1 -> 31, 5.2 -> 32, 
                    5.3 -> 33, 5.6 -> 34, 5.8 -> 35, 5.9 -> 36, 6. -> 37, 6.1 -> 
                    38, 6.2 -> 39, 6.3 -> 40, 6.4 -> 41, 6.5 -> 42, 6.7 -> 43,
                     6.8 -> 44, 6.9 -> 45, 7. -> 46, 7.1 -> 47, 7.2 -> 48, 
                    7.3 -> 49, 7.5 -> 50, 7.6 -> 51, 7.7 -> 52, 7.8 -> 53, 
                    7.9 -> 54, 8. -> 55, 8.1 -> 56, 8.2 -> 57, 8.3 -> 58, 8.4 -> 
                    59, 8.5 -> 60, 8.6 -> 61, 8.7 -> 62, 8.8 -> 63, 8.9 -> 64,
                     9. -> 65, 9.1 -> 66, 9.2 -> 67, 9.3 -> 68, 9.4 -> 69, 
                    9.5 -> 70, 9.6 -> 71, 9.7 -> 72, 9.8 -> 73, 9.9 -> 74, 
                    10. -> 75, 10.2 -> 76, 10.3 -> 77, 10.4 -> 78, 10.5 -> 79,
                     10.6 -> 80, 10.7 -> 81, 10.8 -> 82, 10.9 -> 83, 11. -> 
                    84, 11.1 -> 85, 11.2 -> 86, 11.3 -> 87, 11.4 -> 88, 11.5 -> 
                    89, 11.6 -> 90, 11.7 -> 91, 11.8 -> 92, 11.9 -> 93, 12. -> 
                    94, 12.1 -> 95, 12.2 -> 96, 12.4 -> 97, 12.5 -> 98, 12.6 -> 
                    99, 12.7 -> 100, 12.8 -> 101, 13. -> 102, 13.2 -> 103, 
                    13.5 -> 104, 13.6 -> 105, "NA" -> 106], 
                    Association[
                    "E" -> 1, "ENE" -> 2, "ESE" -> 3, "N" -> 4, "NA" -> 5, 
                    "NE" -> 6, "NNE" -> 7, "NNW" -> 8, "NW" -> 9, "S" -> 10, 
                    "SE" -> 11, "SSE" -> 12, "SSW" -> 13, "SW" -> 14, "W" -> 
                    15, "WNW" -> 16, "WSW" -> 17], 
                    Association[
                    13. -> 1, 15. -> 2, 17. -> 3, 20. -> 4, 22. -> 5, 24. -> 
                    6, 26. -> 7, 28. -> 8, 30. -> 9, 31. -> 10, 33. -> 11, 
                    35. -> 12, 39. -> 13, 41. -> 14, 43. -> 15, 44. -> 16, 
                    46. -> 17, 48. -> 18, 50. -> 19, 52. -> 20, 54. -> 21, 
                    57. -> 22, 59. -> 23, 61. -> 24, 63. -> 25, 65. -> 26, 
                    67. -> 27, 69. -> 28, 70. -> 29, 78. -> 30, 80. -> 31, 
                    85. -> 32, "NA" -> 33], 
                    Association[
                    "E" -> 1, "ENE" -> 2, "ESE" -> 3, "N" -> 4, "NA" -> 5, 
                    "NE" -> 6, "NNE" -> 7, "NNW" -> 8, "NW" -> 9, "S" -> 10, 
                    "SE" -> 11, "SSE" -> 12, "SSW" -> 13, "SW" -> 14, "W" -> 
                    15, "WNW" -> 16, "WSW" -> 17], 
                    Association[
                    "E" -> 1, "ENE" -> 2, "ESE" -> 3, "N" -> 4, "NA" -> 5, 
                    "NE" -> 6, "NNE" -> 7, "NNW" -> 8, "NW" -> 9, "S" -> 10, 
                    "SE" -> 11, "SSE" -> 12, "SSW" -> 13, "SW" -> 14, "W" -> 
                    15, "WNW" -> 16, "WSW" -> 17], 
                    Association[
                    0. -> 1, 2. -> 2, 4. -> 3, 6. -> 4, 7. -> 5, 9. -> 6, 11. -> 
                    7, 13. -> 8, 15. -> 9, 17. -> 10, 19. -> 11, 20. -> 12, 
                    22. -> 13, 24. -> 14, 26. -> 15, 28. -> 16, 30. -> 17, 
                    31. -> 18, 33. -> 19, 39. -> 20, "NA" -> 21], 
                    Association["No" -> 1, "Yes" -> 2]}, "MissingCode" -> 0, 
                  "Version" -> {12.2, 0}, "ID" -> 6009108333341414470, 
                  "Output" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7]]]]},
               "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
              "Missing" -> "Imputed"]]], "Output" -> 
         Association[
          "Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
             Association[
             "Input" -> Association["f1" -> Association["Type" -> "Nominal"]],
               "Output" -> 
              Association[
               "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
              "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                Association["Processors" -> {
                   MachineLearning`MLProcessor["List"], 
                   MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                    "FeatureWeights" -> Automatic, "ExampleWeights" -> 
                    Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
              "Perfect", "StructurePreserving" -> False, "Missing" -> 
              "Allowed"]], "Processor" -> 
           MachineLearning`MLProcessor["Sequence", 
             Association[
             "Input" -> Association[
               "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
              "Output" -> 
              Association[
               "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
              "Processors" -> {
                MachineLearning`MLProcessor["ToVector", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Output" -> 
                  Association[
                   "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], 
                  "Version" -> {12.2, 0}, "ID" -> 1374468457434343602]], 
                MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]], "Index" -> {
                    Association["No" -> 1, "Yes" -> 2]}, "MissingCode" -> 0, 
                  "Version" -> {12.2, 0}, "ID" -> 8292309200956012400, 
                  "Output" -> 
                  Association[
                   "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1]]]], 
                MachineLearning`MLProcessor["FromVector", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "f1" -> Association[
                    "Type" -> "NominalVector", "Weight" -> 1, 
                    "SetSize" -> {2}]], "Output" -> 
                  Association[
                   "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
                  "Version" -> {12.2, 0}, "ID" -> 3858298161417783371]], 
                MachineLearning`MLProcessor["FirstValues", 
                 Association[
                 "Info" -> Association[
                   "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
                  "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                  False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
              "Perfect", "StructurePreserving" -> False, "Missing" -> 
              "Allowed"]], "ProbabilityPostprocessor" -> Identity, "Name" -> 
           "class", "Marginal" -> 
           Association[
            "No" -> 0.8265306122448979, "Yes" -> 0.17346938775510204`]], 
         "LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit", 
           Association[
           "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
            "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], "Prior" -> 
         Automatic, "Utility" -> 
         SparseArray[
          Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
         "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
         Automatic, "BatchProcessing" -> Automatic, "Model" -> 
         Association["Tree" -> MachineLearning`DecisionTree[
             Association[
             "FeatureIndices" -> RawArray["Integer16",{55}], 
              "NumericalThresholds" -> {-0.08089266198139153}, 
              "NominalSplits" -> {}, "Children" -> 
              RawArray["Integer16",{{-1, -2}}], "LeafValues" -> 
              RawArray["UnsignedInteger8",{{196, 1}, {1, 40}}], "RootIndex" -> 
              1, "NominalDimension" -> 0]], "Processor" -> 
           MachineLearning`MLProcessor["Sequence", 
             Association[
             "Input" -> Association[
               "(f5f6f7f8f9f10f20)" -> 
                Association[
                 "Type" -> "NominalVector", "Weight" -> 7, 
                  "SetSize" -> {106, 17, 33, 17, 17, 21, 2}], 
                "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                Association["Type" -> "NumericalVector", "Weight" -> 14]], 
              "Output" -> 
              Association[
               "((f5f6f7f8f9f10f20)(f1f2f3f4f11f12f13f14f15f16f17f18f19f21))" -> 
                Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+LbU1fEdt46aj9KU0YzgMEHutEAPIfZsA==
                   "], "Type" -> "NumericalVector"]], "Processors" -> {
                MachineLearning`MLProcessor["EmbedNominalVector", 
                 Association[
                 "Invertibility" -> "Impossible", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association[
                    "Type" -> "NominalVector", "Weight" -> 7, 
                    "SetSize" -> {106, 17, 33, 17, 17, 21, 2}]], "Index" -> {
                    Association[
                    1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                    8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 
                    14, 15 -> 15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 
                    20, 21 -> 21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 
                    26, 27 -> 27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 
                    32, 33 -> 33, 34 -> 34, 35 -> 35, 36 -> 36, 37 -> 37, 38 -> 
                    38, 39 -> 39, 40 -> 40, 41 -> 41, 42 -> 42, 43 -> 43, 44 -> 
                    44, 45 -> 45, 46 -> 46, 47 -> 47, 48 -> 48, 49 -> 49, 50 -> 
                    50, 51 -> 51, 52 -> 52, 53 -> 53, 54 -> 54, 55 -> 55, 56 -> 
                    56, 57 -> 57, 58 -> 58, 59 -> 59, 60 -> 60, 61 -> 61, 62 -> 
                    62, 63 -> 63, 64 -> 64, 65 -> 65, 66 -> 66, 67 -> 67, 68 -> 
                    68, 69 -> 69, 70 -> 70, 71 -> 71, 72 -> 72, 73 -> 73, 74 -> 
                    74, 75 -> 75, 76 -> 76, 77 -> 77, 78 -> 78, 79 -> 79, 80 -> 
                    80, 81 -> 81, 82 -> 82, 83 -> 83, 84 -> 84, 85 -> 85, 86 -> 
                    86, 87 -> 87, 88 -> 88, 89 -> 89, 90 -> 90, 91 -> 91, 92 -> 
                    92, 93 -> 93, 94 -> 94, 95 -> 95, 96 -> 96, 97 -> 97, 98 -> 
                    98, 99 -> 99, 100 -> 100, 101 -> 101, 102 -> 102, 103 -> 
                    103, 104 -> 104, 105 -> 105, 106 -> 106], 
                    Association[
                    1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                    8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 
                    14, 15 -> 15, 16 -> 16, 17 -> 17], 
                    Association[
                    1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                    8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 
                    14, 15 -> 15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 
                    20, 21 -> 21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 
                    26, 27 -> 27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 
                    32, 33 -> 33], 
                    Association[
                    1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                    8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 
                    14, 15 -> 15, 16 -> 16, 17 -> 17], 
                    Association[
                    1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                    8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 
                    14, 15 -> 15, 16 -> 16, 17 -> 17], 
                    Association[
                    1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                    8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 
                    14, 15 -> 15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 
                    20, 21 -> 21], 
                    Association[1 -> 1, 2 -> 2]}, "Output" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association["Weight" -> 7, "Type" -> "NumericalVector"]], 
                  "EmbeddingVectors" -> {CompressedData["
1:eJxVVnlUzmvU7UVp0CAqpfSWiAZRuqL3OT8N0qAQSTJUSlGkhMs1lIpKA42U
NKgrpRQvofc5j0ZjFIVSoskUMpfI113r++P7zlr7nHXWPn/utc/W8gp03jRK
TExsh+RIc/bcbREc7LlnhcR/i49ngIlxwH+k/wj+4/+3Qv/P/H9QlR/CTwM8
7ueWGHjY4I2+x2ugp7Od9odO5WZnTaG2SzZD27pOVMpMhe0FHdANZiytqQ8L
DHbB74duLPjIcRgMSobCwCfm9cIZrF62H3fy18Kyggaq6R4Pjg358Hp7GnlY
eQIOVeVi4zpj/EdmObu4JlPg0s3BfeyEGMMe1LTJgMQDDhhpO4/wJyZAzzkx
9BzugMrmJaxo2j2UdBnPletJwsUhW4ozJenCpfPwpMN9vBESSsaGe7IKZ2Vc
KGlAVS4bo+YsDSZcY8W9COvB1eo7YFt5OXEvNaIJadfwn0Ip+memHnj9SYMx
zgF0wL0NP06S5t4k/o07FiiTCTWG3L6wx5ig3gy971ZyIUfFuM4GL/wRfwHa
ffS4v3/VQ41NATZnRaFs+HxYX92P3vmx0Nt4jrSO3Fi8+wYX11lCu+krTDxd
B7H6iaQ15jG67tflPKvVOXuXh3CJz0eXyxHEHsbSpQPyuMYsGUSoi88+GdLn
W4CeEVZBxrIA/NijKNJy1kEZu0Pwc5EVk68tpy/fCOCOpRUtUojDHw6m4OFz
F2tPXMSvg85k+esU2t+oA4HafMGdimToXfUHwwK3Iv+GSLTCYJg0KkSS07HT
WGL9Odh4nuCLX9Pw0/pBWuJtCf9eWo9hG8eATfw1QXPZVTr73i+qVyTH7Vu+
D5ovb8XuLW+QDSeg9IUGkBwWwo0QH+ow1h1KFs2gcyqM0K44DjZJ/KKS3Y/J
tkWnkbH1XF3IXbLzrDhdl9NMfRL64FZPLKhezBIJPUKI3js5tvhlB+as3YbN
my+ARlkSnFPOxhXhUiTwTyEtTJgCaTQU/aYmQlGULDe4V0fUlThIaj0kwW3z
GDRX+w2Gwwvp15pwQWb8TPxOqwFsEnH5r30kZasPmZ8bQaSvPyRfZRvNDwfn
kiqZNVjvdRb//uKO2UIJTFU5jcHfH1DPY0fIqYh7xO/RWFoel0z3cqNYT/1b
2jVaiGlqfJbtnQTxDtthRIHM4f1VKAt7BpV1elCs/xKL43lc0zEKe38UgIxH
OFVQbsOz1dWC2+bXQBitxFbNTKHDejV4xyIDjhfmE/MNIrzU74BHD6ix/Qem
o6/ke5F6/we67Ukg2CXx2MCPHNxjo8b+8FbDri/6XItjEpyWVcS1WjaYVqMA
Wrqy3OyTKvTIaSP4/cWFC1r/HerS8knVng4y1ayG/HmUBcffi9GvzXGocLoA
e55cJvrxq7DMqEW0NqUUdPWHqNKRUBhsGhBlFgjgijAUGr8mkIYEKbzv3UtJ
ywbY8VkEiw7uxeeKd0nG3hAItjmLYr7aoNsoQqf2VHpgUSzqlClRh7bxqN7Z
RVMembKDK/NxetcJMm+7O6ew1o/UjvhF3e1JnMxlJ3pjzQIsyHcH42oTtjpM
gztgpwi63RpEbX4MTeIbc+G/4kRlYR1wZ4+fyKL7K3mX7QGPDULhh/ML5NX3
Q6p1C+Y3h8HW48XgNU6BWyCehgfrZ3C3YxWJlnUa3usooXMCWYXtwE9B+hot
JrbGjvs+zgXbf40mJj75mDZOmmn7v8cAK457OuoGJuW00Rllnxb0zvaFt9Wq
ePJ7lEhcx4bl2XzDb+YIWc+6oPSNGH1GfYji80y0mZoPYgPAxH3W0Yq6c5Cz
aDH0LcjFB+Z1EMWlUn7l3/h5Rjzcj5rP7f4dBw551pibYUVbE8O5tziJxjaL
sWXilxa4OQajbfkOWP+cYlTIM3hi8lrg5J5OrvS9oSW2BpSc3APTJhpi4K5f
pJxocm++5EBdbA54XdRhSfYIrs29xHeXBvfg2PgR3c3mWqaoM4cmaU76uiMG
+z6mBTm5VCO+ryK7UZJZdvuSZsd8VPLLRuP9l6mK2SZwfbWPmny8JTin/Uyw
ei6FpYo7wcl1icDiygZ4fvYUhsasRz1mxfm/y0ZFaznc2H0MPJe6g569CX5z
dIR98i9p8fkYkK0U5171TmfxXv2i8YvngueZMFz2QxyMyl9RraMmoHvzNFyO
iUba/hnq5BK5jBU8KJ0uhLvWJtCppANGsh3Qk6MAfCMtxks7xrnsSoXWLH2u
dVIFpP6cKBr0EuJkxy6BxGwn2mjiiWWT1eFy9gk4ofsY0zMUaK7835A8KQ6z
VQ7jlMY/17s8DtOtsuO4Un1GRr+sBc3N/rDafwpeGPyA8R3yZAP/Iwy/uEZs
cz6BkpgBCEUTOJ6TFEvvl4co40bUkNaFmnl1cKm5E208LlLL5SP+/jSdhe+9
ghH8PtrxcQdncWxY9Hb3CjgpZ4tdE+vh3vEbdGbvGVBumszOvYvFUmJEkzc8
xbFFR3DIUJMTn/GdzjVLh0MXprEIlRqy6EQisd/Nw8nBGmxTirHghu0EMHxV
hP+oZ9Pi+LminVldYJ8Sjp3jlwhUvlrg/pJNeCRSnqwMSAe3VCHIDU0lfOXl
wB+KEjX1zcFHa2WYz/id2BHahFJfAnDI+wXN4W3AII090NmWSWInlULC8Tc0
vWs0aT8TSvaqXILORapgRUJxTJ0s4WbqsOR5x8DpQh5GTtoKBVbuTM3iFW7X
2SAqOlWBH1J4yL27gWCng2OKedwRs4swJSSa8FzNYOntPNEK+f1k0TwBtguP
4cMPetiwNQ9MI7aAfbov5PXJs4iGpRBaGcT5befgRI4Z+CwTmRdlaqDddjd8
2+KHPb3pVEJlOVrwdUnXq5f0MG8e2hxQ5hK9JNidkrnsgvs2OO9ylNqNqoGp
eYFg2epLbW+6ieqDUgimdKPY9Kf4874AFy4soPUZdmheXArztytzFWNmo5O0
kYC3SwacjVbRSu4QHLJzIQ8izTAgdxxa+nzE84HvyKz2u9d7f/TT52MSsUBf
CmbMXG6u8rsMHOTEucuaEVS9VhMunFBC1ZYSfLZqLrNtjQGLqkzU5EsypcpZ
WJN6Akrsn+FPNiAaDldlr1XcYOWtlUTm7SR238gV2o9HwJdUSXaPiTCTP4cz
cLZmrU+TYGj/cwgsFmMaS7XZxn2d1LY7B04Jd8CCZDX2Nu4nJhbegPbTXnBJ
LBrMzf7Czwu+4Ev2HN0mjGh36ijm8PofckRZilWPE4qMHiShUOE9PV8WQaeb
KWDteCX2+SSPTHzrC1KFd9G36BtxLJOmhXti8M/CPrwy9gcmR7TTyjpNzq44
Fz4+umiuZ9JGawvEObEzlpArmY2zDs4HkbcG6XvyF3rp8MAseBCy3X9g1Rxt
iC8gsFhsKui8HM9yZimhWrY8Cz56G8zXZUAzhpGrbfEQfTuAGG4y4MSVz5PP
+SM/k+dKa6yWoL1OCDzwHyRzq57gyV0r8Im4Kludnw+HvMTxsHwf/nQJwvWv
zLgFhjlgejAT8lZXQ8t9VSYVNh7Sqlcwg7ABgeV+hET3JyQzyAENppVg5NM8
tJK8CSoqM+iSjZ9xi+tDEMZFgRP/N24ZYKg9fQneXrcZcyMrsHayKZfgt4F9
iBIzLxdNYX5aOpijkA6O+qNJyPoWkE5yFbSOasPbCWtxfrQkBIQWkuyOU/DV
zQgLE/tBfHY5RMuZ4akYHSpX3i6QUhaB6c43GDXoj5ERPBHukeCq5a5hSlwp
jvMohpydfLLkKEX3QTmWZabMRbxPhrYiC4jfliyQdY7EmPQ/xJRpwLKN1nDP
+yrIxMTDi1E3yfv52TRwsoiWq0tj/gYTOEczSdIzd7SQ2I5pY47SFP6/EGT1
mbzfrMRVBU2heM8bRa1F1B/60PaAPaemnY0z/ipBrvcAmDR9w+5r9mhuPpKl
yx5RNf/JuA9kwDXrXxKUvgXdtesFD7vz6P6+xSAlOZNF5TuSxL3GbMtACtYx
4NaEDtCXbh4YVd8meto2hxtQVeC+vEuFccvSYayMGlwbyeJNBh4oqleDufGq
LEO4nMzkzyFjhYfwXosUSDhGw5rdvzHcWhn8uAY4JgiCWzJDWPrYmul3fjcv
Xz2R2xU9Ea1P3iIBm9KhSrEK+kMO46fuz1T/6gGMPZqFdvyzNJV2i65eGstp
Lv6JcZWPSexda+qvZU0+hiqhjMlkCD3YhhOvG8MqPVnOcriR8IcmcBtvprPq
4izsnHAKH3wfoN4uFmTx0mrBpo+l2KnrBzkrlmITmjIlx4fgFFBOz29WZZ82
SrDETadAPmsI93e1VJQZPsbI6+5w/UE0Yb3JglZbbdg8v5a+P+SMNuLZqGuq
AokNiux/APtGkUI=
                    "], CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIIiEFCUNAAxXB+
Y+sSuz/i7bb2ug/3bZtdY8e4eeu+C1mF+5qzmew3p6+ym7h+2+7tMYv2uiRH
7bP57LrvUKX7/gZt9X0bKqXtLrBO26uX8dZ2obaCff2pc/vubmu3M7UQ27Nx
7fF9c/59sV0zbbEdx/2fthtmztv3eNWhfWz7mPdZ5Wywm/a+3ZYhfLLtCm7T
/bd4LOxFHu3ax31J2T5Y0NiO68FcG9Fi6X3bdp3cd+f7RrsFqXr7Zthq7Huv
x2JXxbhgX2ih8H4974h9lc5Z+55rzbHmujzBfo3eKjtWx3g7Dx+e/YlprXbv
qzv2rZKauu/4igq7y1u377uRxrNvr9wSO/v00n1uPFvsPsVJ2OZuvrFPWdfS
jmeh8v457lz792gl71vY6m03+2javqszOu1za/v2nyrYb/vf5o6damWH7eyQ
PXbl9Xvs8hkK9537pL5PgnPVnp9Fq+yU1UL3Mwgy2r/bv8Zuf9MBOy52M3tl
thW2Bub77dbsyLXbqtayzzp2/145ZTb7X372dgsX3bAT9mPbd7Hq6T7eD6v2
eV21tHfJe2/Hx+VoP2Pnn31cv7fv+yYcuBcAjPTK5g==
                    "], CompressedData["
1:eJxtj31Q03Ucx+dmbImbgpyBGwTUXRjVgcypG9/Pz93s6HhQhEVAXblx7gox
CUQOj2BtRCHjodgpeE1IHi0Tc8DJtt/nq2AcJIUcRRwgyYHyJDswuBMQCPu7
1937ffe6919vP+2pGB2Xw+GkCzYqRpOpTEvTZMW6PJfjmpSQPSnPR/+N8Dn/
oef8P/pO3j0MX4+E7hlwtE29iW4WPjWs9EF29AreVMYTbqCZ5XSHkYFBOeUr
NSTj2ATbFzeAv+q+YwOk02RZcpktdt9GZ67zqOsTC4Tqy+3jX1nRQ6jCgw0G
zHxShvvSpxyrcSLmbKQ7U+/DJ84lQq3jVeiIqsTxFh2MhaUAv/B9NDrSUPH4
Z3v06yFg/KCUbDXJ8HBeKZncC+h5VELv5AUxq8mlmBtrxENnNhHxUxupLHuG
lfE/QMLCTpQuXWZHo5oxtb0Htd8kwAlFEF1z7SKCsCbUuW5mUlOMZP5cH7Za
eVT0p5MIPrKBPMkOGp/PUdWuZf8uucZOnh7Ci9+L8etoE6gXkzHbe47ceDQL
hvogyGiUMwZigtXhXZBoKMOwjW+jm87D02FOKEddwuTHetJhyToUB+hofm0f
zNUOQhNeQ5x5B7ibLWQmpBnibwUy93mDGCBzkodJWmYxSw+miDjmkv0WzoTz
mTdCn2G4RwyWW6sxRl2CrbFq7PyrFpu5YVCB2cDFakWN9FM4Pv0t+NUEkpdy
/sBetYB5RayH0EExZUo9KeqHHB2iCnae+wB7Jr+gY+/FM/k+t7FlzB8kZXqM
+InD7Nzfji7aNpD4roLv6jIOLZkUWW4j2Bb7G8y32OFKvoKtE9rAnizE7X6B
NCdeBy8knsUm3nnU6wJo9XgJSTFPw8GWFTZb9Amcdj+JC6L9kK77GJzXPUlq
RA906eRMY68R/ORCqnHxgbXObgwIHoLhxwhWlRt5zfcEBt1IwAtdt3FX4RaI
fvAIhcdG2M8yHeTUzS9JiEyJy8xJstVwmHn5boNjLuKMI1H5I8xaVKwosoCU
TxdBUS2XXl1YZwsaBdR7nxl+6TyCh+pepSWSJtLPOwoqkRQHHxYAf2KNNFyY
xtykWshXvQtp9XkQ3HsAfvc6gldyRnE+QYt4jwt+d+xQ7Jyy2dgMLPISUK8m
LVTwgxnL3Q5QW2349ltXsarGDFG5H+IexRYK/xhpXFUdZPnLmB0rwcyOfhku
vljK9tcLSZHjACvdG4Uxu/tBWmdBZaE32+WUodzqhgOXzkHf/RF0czowsHsO
jOY66FjYTj1mxTBf3Yq2id30X0If00k=
                    "], CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIIiEFCUNCAjuMe
Lrc72BJu1/zCyvbwQUl7B8bcvfdm/LMrVS2waV3fbLfdw8VmYd2iveKtfvsU
Ou3sVgl+3LdvebFdnVbY/vhlsvvV9M7ZCT7Msdtk77+vd+L7fX5CqfuamHv2
2TQes71xN8veYTOTvWiDrP3CuoJ90nZP973f37evd43O/obr9vusLsjY9yw+
aXsywdH2fVGz3cuWn/ssP2nsLxKP3Het88y+Bn9ZO/Yb0/etND2577Hru30t
x7tsXm7NtZuf9mbvx8zmfXMub7Xjrjy/V9vLbe/PtpfWzzeX2m3vm7sv70WG
naMWu12lirydUk7q/rSU5Xt3SwTa+ypP2mfkeMIm2fCk7UNuAbubTWl2k5gK
7OSXWe8799RrP+MPPrv/x+buc97JayfWLrXf6txyu/oNcvZrTl3ZGy/Zt2/S
CfN9OlIHbCcc2bNvta6crefOd/tOz55id1T6px2bNIs9h4Oz/c/KQpuj5Ufs
vrtU256tSdlbqtlnL1+na+djw2lfajhx/8oFPfuF95ze9+cel91tSYf9x9tF
9gvP27G3uPDivmNrMvbp3vizV+v1HBsA3eDRRA==
                    "], CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIIiEFCSKABGe9m
rNr3va7PLnLXsn2rp4XZ6+Ra2nLHi+79Zy67T3z2Sru/MzL2H7g815a3ImAv
13f5fac32tlvbNO2VZ3OZndhyf69u08+s1vEamw33V/c+otl+T6VnHm2bKnB
dtPP/bNjt2jdN4Wn17ZsT4Xd2ZbifT+FFtvPCJ1iu5z34943Jc9s96d62F2T
19o3MT1rn8hW0f3TPzPsS5qoubuuMcWWQYHN3qzl1+7EE8x7y3432broVe+p
Y/DdbxF3xHbHLSVbJVZjW9Gyv3ayiY/2chU92Pe764Ndf//OfTOYltrOueVt
w3B3097dF5jsbxWeslt1v9f+fKPevgWmovY8jV/2rtkeZufMMsfqv4SBXfjP
WbYT6qfYMl+cse+6o8n+VJ8i24RFgXaaHlH7PaWr7SuOi9nPPSRt7y+/3Y5Z
9Izd630M+9eZMtquNnW3sXObZCcuXGHntW+P3eLmN/vYHu/d51G5YO+OCic7
FbEV++o2Lts9/9PqfdsMz9p5vplp++3eHls1m222u1+02D3OuW4nY6a5T+Pd
XztVBn7bsA2n9sw+d3avr8otG9k13XsBhgHI4w==
                    "], CompressedData["
1:eJxNiWtIE1AYhtfENS0vSQuhvBUkiUm6MUR3vlNpGpqZWloJ4Waaom00FbMs
h5dJCgqBGopD0oLKaall4s53QrPCVvshWs4bzJVCNJjSH12QRj964Xl5LyEq
TXq+UCAQlIi3LF1ZfkKrVVZkiLZLnrJYGlW8fe7bYnv6T7p//M2jV6ZQOB9I
3RTupruNakxo9+a6YwFw0JaBpupFcPhTpl+LpE5JMLKhBrKUuIySiFL2scTJ
ys6aYOW2Hk8mHaDO0EvMsCuedfnaSWHaRaxTWaBnsYumaD2BFihB4qR0+lM0
fyNvhDrnOfL71mlQmQmddllwtFxDvdU++NloZfctg2BK3iTB8gC20uEHruUB
XM8+z5qWejDmux8P1A8r/MMX8NSO/dyy8ApnD3XDblcViuffxxqHm3BIb8b2
HHfeGjcDIXwT9kTIIa5eh6uPWqBx8R3UyHQY1v8FwzsVvEKYRUubz/C8r2by
rT8fuXoDx94+hZ+hkdQedZklVnixa4WTTFU4DnNSB1SpRHykXszXXk5AsDEL
bJkPIWhEwiWvm0FT+4yRqjHW56pmUmsB1XrLeO9GKm0ps5DKtmLmuBqJ614+
KEhuQJlzlRV1H0FiP0wh6QJ50WYjuTMJXF07QHJTJlHvW0M6PETwoeE5uPFe
MF7/AZvWaDI39QRnb1QyyHPjkqNK3JDfQcwUceoRRGNoPN37K4wOagwkJ83C
im72Qeq4Z2y4wYvea32ME/KdVGh+YIovO06zpTL6B4pNAE8=
                    "], 
                    RawArray["Real32",{{0., 0.}, {-0.29040566086769104`, 
                    0.037538956850767136`}, {
                    1.102798342704773, -0.7911755442619324}}]}, 
                  "Version" -> {12.2, 0}, "ID" -> 1443557437972528300]], 
                MachineLearning`MLProcessor["MergeVectors", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association["Weight" -> 7, "Type" -> "NumericalVector"], 
                    "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                   "Spans" -> {
                    Span[1, 41], 
                    Span[42, 55]}, "Wrappers" -> {Identity, Identity}, 
                  "Output" -> 
                  Association[
                   "((f5f6f7f8f9f10f20)(\
f1f2f3f4f11f12f13f14f15f16f17f18f19f21))" -> 
                    Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+LbU1fEdt46aj9KU0YzgMEHutEAPIfZsA==
                    "], "Type" -> "NumericalVector"]], "Version" -> {12.2, 0},
                   "ID" -> 5244572383990249557]], 
                MachineLearning`MLProcessor["Values", 
                 Association[
                 "Info" -> Association[
                   "((f5f6f7f8f9f10f20)(\
f1f2f3f4f11f12f13f14f15f16f17f18f19f21))" -> 
                    Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+LbU1fEdt46aj9KU0YzgMEHutEAPIfZsA==
                    "], "Type" -> "NumericalVector"]], "Invertibility" -> 
                  "Perfect", "StructurePreserving" -> False, "Missing" -> 
                  "Allowed"]]}, "Invertibility" -> "Impossible", 
              "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
           "Calibrator" -> 
           MachineLearning`CalibratorFunction["TemperatureScaling", 
             Association["Theta" -> 1.3939460816776243`]], "Method" -> 
           "DecisionTree", "PostProcessor" -> 
           MachineLearning`MLProcessor["Identity"], "Options" -> 
           Association[
            "DistributionSmoothing" -> 
             Association["Value" -> 1, "Options" -> Association[]], 
             "FeatureFraction" -> 
             Association["Value" -> 1, "Options" -> Association[]]]], 
         "TrainingInformation" -> 
         Association[
          "PanelCell" -> CellObject[68769], "TrainingFunction" -> Classify, 
           "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
           "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
           0.3180334`6.954017725662748, "LossName" -> "MeanCrossEntropy", 
           "BestModelInformation" -> Dataset[
             Association[
             "MeanCrossEntropy" -> 
              Around[0.0344849400423992, 0.023469670341369604`], "Accuracy" -> 
              Around[0.9937361894055189, 0.02541299817322734], 
              "EvaluationTime" -> 0.00010878574904830915`, "TestSize" -> 58, 
              "ModelMemory" -> 59568, "ModelUtility" -> 2.5464278592534675`, 
              "TrainingSize" -> 234, "TrainingTime" -> 0.03981071705534971, 
              "TrainingMemory" -> 355152, "ExperimentCount" -> 1, 
              "MeanCrossEntropyHistory" -> {
                Around[0.0344849400423992, 0.01659556305059524]}, 
              "AccuracyHistory" -> {
                Around[0.9937361894055189, 0.017969703338570397`]}, 
              "Configuration" -> {
               "DecisionTree", "DistributionSmoothing" -> 1, 
                "FeatureFraction" -> 1}, "FinalTrainingSize" -> 292], 
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
               "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
               "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory",
                "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
              TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Vector[TypeSystem`AnyType, 1], 
               TypeSystem`Vector[TypeSystem`AnyType, 1], 
               TypeSystem`Tuple[{
                 TypeSystem`Atom[String], TypeSystem`AnyType, 
                 TypeSystem`AnyType}], 
               TypeSystem`Atom[Integer]}], 
             Association[]], "Configurations" -> Dataset[
             Association[
             Association[
               "Value" -> "LogisticRegression", "Options" -> 
                Association[
                 "L1Regularization" -> Association["Value" -> 0], 
                  "L2Regularization" -> Association["Value" -> 0.0001], 
                  "OptimizationMethod" -> Association["Value" -> Automatic], 
                  MaxIterations -> Association["Value" -> 30]]] -> 
              Association["Experiments" -> {
                  Association[
                  "MeanCrossEntropy" -> 
                   Around[0.3896496711500608, 0.10599384596246139`], 
                   "Accuracy" -> 
                   Around[0.8905272351903457, 0.027010880355545858`], 
                   "EvaluationTime" -> 0.00007291641573349885, "TestSize" -> 
                   282, "ModelMemory" -> 35016, "ModelUtility" -> 
                   0.1963468991588172, "TrainingSize" -> 10, "TrainingTime" -> 
                   0.07943282347242814, "TrainingMemory" -> 132304, 
                   "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                    Around[0.3896496711500608, 0.0749489672440988]}, 
                   "AccuracyHistory" -> {
                    Around[0.8905272351903457, 0.01909957666522498]}], 
                  Association[
                  "MeanCrossEntropy" -> 
                   Around[0.37654751966686784`, 0.13980376154075957`], 
                   "Accuracy" -> 
                   Around[0.9185748478079111, 0.0259623231847476], 
                   "EvaluationTime" -> 0.000057871142058183503`, "TestSize" -> 
                   242, "ModelMemory" -> 48456, "ModelUtility" -> 
                   0.2118959869919017, "TrainingSize" -> 50, "TrainingTime" -> 
                   0.0630957344480193, "TrainingMemory" -> 191720, 
                   "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                    Around[0.37654751966686784`, 0.09885618782085814]}, 
                   "AccuracyHistory" -> {
                    Around[0.9185748478079111, 0.01835813477929175]}]}, 
                "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 0.000057871142058183503`, 
                  "MeanCrossEntropy" -> 
                  Around[0.37654751966686784`, 0.13980376154075957`], 
                  "ModelMemory" -> 48456, "TrainingMemory" -> 191720, 
                  "TrainingTime" -> 0.26367236806064454`], "Index" -> 1], 
              Association[
               "Value" -> "NaiveBayes", "Options" -> 
                Association[
                 "SmoothingParameter" -> Association["Value" -> 0.2]]] -> 
              Association["Experiments" -> {
                  Association[
                  "MeanCrossEntropy" -> 
                   Around[1.9964257626573056`, 0.49072031840785174`], 
                   "Accuracy" -> 
                   Around[0.809706017644556, 0.03972423745063834], 
                   "EvaluationTime" -> 0.0007550570274725627, "TestSize" -> 
                   200, "ModelMemory" -> 54320, 
                   "ModelUtility" -> -1.4325373671296227`, "TrainingSize" -> 
                   10, "TrainingTime" -> 0.03981071705534971, 
                   "TrainingMemory" -> 79152, "ExperimentCount" -> 1, 
                   "MeanCrossEntropyHistory" -> {
                    Around[1.9964257626573056`, 0.3469916648122137]}, 
                   "AccuracyHistory" -> {
                    Around[0.809706017644556, 0.02808927767881098]}], 
                  Association[
                  "MeanCrossEntropy" -> 
                   Around[1.5672056115068984`, 0.6094099238778635], 
                   "Accuracy" -> 
                   Around[0.8379251007418386, 0.052984824309552314`], 
                   "EvaluationTime" -> 0.0005011872336272722, "TestSize" -> 
                   100, "ModelMemory" -> 68656, 
                   "ModelUtility" -> -1.2173807516081303`, "TrainingSize" -> 
                   50, "TrainingTime" -> 0.05011872336272722, 
                   "TrainingMemory" -> 147552, "ExperimentCount" -> 1, 
                   "MeanCrossEntropyHistory" -> {
                    Around[1.5672056115068984`, 0.430917889696415]}, 
                   "AccuracyHistory" -> {
                    Around[0.8379251007418386, 0.03746592856926227]}]}, 
                "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 0.0005011872336272722, 
                  "MeanCrossEntropy" -> 
                  Around[1.5672056115068984`, 0.6094099238778635], 
                  "ModelMemory" -> 68656, "TrainingMemory" -> 147552, 
                  "TrainingTime" -> 0.1861573892745132], "Index" -> 2], 
              Association[
               "Value" -> "DecisionTree", "Options" -> 
                Association[
                 "DistributionSmoothing" -> Association["Value" -> 1], 
                  "FeatureFraction" -> Association["Value" -> 1]]] -> 
              Association["Experiments" -> {
                  Association[
                  "MeanCrossEntropy" -> 
                   Around[0.130782391388455, 0.034565184863459074`], 
                   "Accuracy" -> 
                   Around[0.963163060797362, 0.019003606667962972`], 
                   "EvaluationTime" -> 0.0000632335433330976, "TestSize" -> 
                   242, "ModelMemory" -> 45232, "ModelUtility" -> 
                   1.28952471324958, "TrainingSize" -> 50, "TrainingTime" -> 
                   0.03162277660168379, "TrainingMemory" -> 142696, 
                   "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                    Around[0.130782391388455, 0.024441276609918516`]}, 
                   "AccuracyHistory" -> {
                    Around[0.963163060797362, 0.013437579141918508`]}], 
                  Association[
                  "MeanCrossEntropy" -> 
                   Around[0.0344849400423992, 0.023469670341369604`], 
                   "Accuracy" -> 
                   Around[0.9937361894055189, 0.02541299817322734], 
                   "EvaluationTime" -> 0.00010878574904830915`, "TestSize" -> 
                   58, "ModelMemory" -> 59568, "ModelUtility" -> 
                   2.5464278592534675`, "TrainingSize" -> 234, "TrainingTime" -> 
                   0.03981071705534971, "TrainingMemory" -> 355152, 
                   "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                    Around[0.0344849400423992, 0.01659556305059524]}, 
                   "AccuracyHistory" -> {
                    Around[0.9937361894055189, 0.017969703338570397`]}], 
                  Association[
                  "MeanCrossEntropy" -> 
                   Around[0.5834718754014929, 0.0685649571893801], "Accuracy" -> 
                   Around[0.7401131640482883, 0.03723699076495959], 
                   "EvaluationTime" -> 0.0000683146387528988, "TestSize" -> 
                   282, "ModelMemory" -> 31920, 
                   "ModelUtility" -> -0.17765471235355024`, "TrainingSize" -> 
                   10, "TrainingTime" -> 0.03162277660168379, 
                   "TrainingMemory" -> 96112, "ExperimentCount" -> 1, 
                   "MeanCrossEntropyHistory" -> {
                    Around[0.5834718754014929, 0.04848274618037599]}, 
                   "AccuracyHistory" -> {
                    Around[0.7401131640482883, 0.026330528680883772`]}]}, 
                "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 0.0000683146387528988, 
                  "MeanCrossEntropy" -> 
                  Around[0.5834718754014929, 0.0685649571893801], 
                  "ModelMemory" -> 31920, "TrainingMemory" -> 96112, 
                  "TrainingTime" -> 0.12396128427860047`], "Index" -> 3], 
              Association[
               "Value" -> "RandomForest", "Options" -> 
                Association[
                 "FeatureFraction" -> Association["Value" -> Automatic], 
                  "LeafSize" -> Association["Value" -> Automatic], 
                  "TreeNumber" -> Association["Value" -> Automatic], 
                  "DistributionSmoothing" -> Association["Value" -> 0.5], 
                  "Implementation" -> Association["Value" -> Automatic]]] -> 
              Association["Experiments" -> {
                  Association[
                  "MeanCrossEntropy" -> 
                   Around[0.425879787554919, 0.032563483595444566`], 
                   "Accuracy" -> 
                   Around[0.823176593354348, 0.03871104145148135], 
                   "EvaluationTime" -> 0.00017900777537149963`, "TestSize" -> 
                   200, "ModelMemory" -> 136784, "ModelUtility" -> 
                   0.1452137823620342, "TrainingSize" -> 50, "TrainingTime" -> 
                   0.05011872336272722, "TrainingMemory" -> 224680, 
                   "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                    Around[0.425879787554919, 0.023025860069395748`]}, 
                   "AccuracyHistory" -> {
                    Around[0.823176593354348, 0.027372839917135988`]}]}, 
                "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 0.00017900777537149963`, 
                  "MeanCrossEntropy" -> 
                  Around[0.425879787554919, 0.032563483595444566`], 
                  "ModelMemory" -> 136784, "TrainingMemory" -> 224680, 
                  "TrainingTime" -> 0.1964653955818907], "Index" -> 4], 
              Association[
               "Value" -> "NearestNeighbors", "Options" -> 
                Association[
                 "NeighborsNumber" -> Association["Value" -> Automatic], 
                  "DistributionSmoothing" -> Association["Value" -> 0.5], 
                  "NearestMethod" -> Association["Value" -> Automatic]]] -> 
              Association[
               "Experiments" -> {}, "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, 
                  "ModelMemory" -> 1, "TrainingMemory" -> 1, "TrainingTime" -> 
                  1], "Index" -> 5], 
              Association[
               "Value" -> "LogisticRegression", "Options" -> 
                Association[
                 "L1Regularization" -> Association["Value" -> 0], 
                  "L2Regularization" -> Association["Value" -> 1.*^6], 
                  "OptimizationMethod" -> Association["Value" -> Automatic], 
                  MaxIterations -> Association["Value" -> 30]]] -> 
              Association[
               "Experiments" -> {}, "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, 
                  "ModelMemory" -> 1, "TrainingMemory" -> 1, "TrainingTime" -> 
                  1], "Index" -> 6], 
              Association[
               "Value" -> "LogisticRegression", "Options" -> 
                Association[
                 "L1Regularization" -> Association["Value" -> 0], 
                  "L2Regularization" -> Association["Value" -> 1.], 
                  "OptimizationMethod" -> Association["Value" -> Automatic], 
                  MaxIterations -> Association["Value" -> 30]]] -> 
              Association[
               "Experiments" -> {}, "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, 
                  "ModelMemory" -> 1, "TrainingMemory" -> 1, "TrainingTime" -> 
                  1], "Index" -> 7], 
              Association[
               "Value" -> "LogisticRegression", "Options" -> 
                Association[
                 "L1Regularization" -> Association["Value" -> 0], 
                  "L2Regularization" -> Association["Value" -> 10000.], 
                  "OptimizationMethod" -> Association["Value" -> Automatic], 
                  MaxIterations -> Association["Value" -> 30]]] -> 
              Association[
               "Experiments" -> {}, "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, 
                  "ModelMemory" -> 1, "TrainingMemory" -> 1, "TrainingTime" -> 
                  1], "Index" -> 8], 
              Association[
               "Value" -> "LogisticRegression", "Options" -> 
                Association[
                 "L1Regularization" -> Association["Value" -> 0], 
                  "L2Regularization" -> Association["Value" -> 100.], 
                  "OptimizationMethod" -> Association["Value" -> Automatic], 
                  MaxIterations -> Association["Value" -> 30]]] -> 
              Association[
               "Experiments" -> {}, "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, 
                  "ModelMemory" -> 1, "TrainingMemory" -> 1, "TrainingTime" -> 
                  1], "Index" -> 9], 
              Association[
               "Value" -> "LogisticRegression", "Options" -> 
                Association[
                 "L1Regularization" -> Association["Value" -> 0], 
                  "L2Regularization" -> Association["Value" -> 100000.], 
                  "OptimizationMethod" -> Association["Value" -> Automatic], 
                  MaxIterations -> Association["Value" -> 30]]] -> 
              Association[
               "Experiments" -> {}, "PredictedPerformances" -> 
                Association[
                 "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, 
                  "ModelMemory" -> 1, "TrainingMemory" -> 1, "TrainingTime" -> 
                  1], "Index" -> 10]], 
             TypeSystem`Assoc[
              TypeSystem`Struct[{"Value", "Options"}, {
                TypeSystem`Atom[
                 TypeSystem`Enumeration[
                 "DecisionTree", "LogisticRegression", "NaiveBayes", 
                  "NearestNeighbors", "RandomForest"]], 
                TypeSystem`Assoc[TypeSystem`AnyType, 
                 TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
                 TypeSystem`AnyLength]}], 
              
              TypeSystem`Struct[{
               "Experiments", "PredictedPerformances", "Index"}, {
                TypeSystem`Vector[
                 
                 TypeSystem`Struct[{
                  "MeanCrossEntropy", "Accuracy", "EvaluationTime", 
                   "TestSize", "ModelMemory", "ModelUtility", "TrainingSize", 
                   "TrainingTime", "TrainingMemory", "ExperimentCount", 
                   "MeanCrossEntropyHistory", "AccuracyHistory"}, {
                  TypeSystem`AnyType, TypeSystem`AnyType, 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Real], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Atom[Integer], 
                   TypeSystem`Vector[TypeSystem`AnyType, 1], 
                   TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
                 TypeSystem`AnyLength], 
                
                TypeSystem`Struct[{
                 "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
                  "TrainingMemory", "TrainingTime"}, {
                  TypeSystem`Atom[Real], TypeSystem`AnyType, 
                  TypeSystem`Atom[Integer], 
                  TypeSystem`Atom[Integer], 
                  TypeSystem`Atom[Real]}], 
                TypeSystem`Atom[Integer]}], 10], 
             Association[]], "MaxTrainingSize" -> 292, 
           "PreprocessorEvaluationTime" -> 0.000012375, "PreprocessorMemory" -> 
           122720, "InputDimension" -> 21, "OutputDimension" -> 1, 
           "BaselineLogProbability" -> -0.46134494420706984`, 
           "VariableBudget" -> True, "CheckpointingInfo" -> 
           Association["Checkpointing" -> False], "UserStop" -> False, 
           "NaturalStop" -> True, "AbortStop" -> False, "LastReportingTime" -> 
           3.8262597634253782`17.33534943995126*^9, "RoundPartitioning" -> 
           Dataset[{
              Association[
              "TrainingSizes" -> 10, "TimeBudgets" -> 0.2479903182223158, 
               "ElapsedTimes" -> 0.6260638, "ExperimentCounts" -> 3], 
              Association[
              "TrainingSizes" -> 50, "TimeBudgets" -> 0.354271883174737, 
               "ElapsedTimes" -> 0.3830251, "ExperimentCounts" -> 4], 
              Association[
              "TrainingSizes" -> 234, "TimeBudgets" -> 0.5061026902496241, 
               "ElapsedTimes" -> 0.3485523, "ExperimentCounts" -> 1]}, 
             TypeSystem`Vector[
              
              TypeSystem`Struct[{
               "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
                "ExperimentCounts"}, {
                TypeSystem`Atom[Integer], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Real], 
                TypeSystem`Atom[Integer]}], 3], 
             Association[]]], "AnomalyDetector" -> None, "Log" -> 
         Association["Example" -> MachineLearning`MLDataset[
             Association[
             "f1" -> Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {9.9}, "ID" -> 
                4525956837581453641], "f2" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {24.4}, "ID" -> 
                9166730886693948270], "f3" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
                990524332453264237], "f4" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {5.8}, "ID" -> 
                232448991201422582], "f5" -> 
              Association[
               "Type" -> "Nominal", "Weight" -> 1, "Values" -> {10.8}, "ID" -> 
                7754382459845470914], "f6" -> 
              Association[
               "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"NE"}, "ID" -> 
                329585617001349521], "f7" -> 
              Association[
               "Type" -> "Nominal", "Weight" -> 1, "Values" -> {28.}, "ID" -> 
                3243215497704270151], "f8" -> 
              Association[
               "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"SE"}, "ID" -> 
                6841301414025814389], "f9" -> 
              Association[
               "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"E"}, "ID" -> 
                2066190972337303861], "f10" -> 
              Association[
               "Type" -> "Nominal", "Weight" -> 1, "Values" -> {7.}, "ID" -> 
                2624762530792798180], "f11" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.}, "ID" -> 
                1753102248525463586], "f12" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {60.}, "ID" -> 
                2618579850348136583], "f13" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {38.}, "ID" -> 
                1361077257524445132], "f14" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1021.6}, 
                "ID" -> 4650329820652959046], "f15" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1019.2}, 
                "ID" -> 4260525428114561835], "f16" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.}, "ID" -> 
                6148215246205187820], "f17" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {4.}, "ID" -> 
                677977307689347416], "f18" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {16.2}, "ID" -> 
                4175785524861886403], "f19" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {22.7}, "ID" -> 
                990122695496599883], "f20" -> 
              Association[
               "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"No"}, "ID" -> 
                4272969664753640397], "f21" -> 
              Association[
               "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
                1961685482141474880]], 
             Association[
             "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 
              0, "RawExample" -> False]], "TrainingTime" -> 2.3983675, 
           "MaxTrainingMemory" -> 972432, "DataMemory" -> 205840, 
           "FunctionMemory" -> 334048, "LanguageVersion" -> {12.2, 0}, "Date" -> 
           DateObject[{2021, 4, 1, 9, 56, 3.7243793`8.323628885163293}, 
             "Instant", "Gregorian", 8.], "ProcessorCount" -> 4, 
           "ProcessorType" -> "x86-64", "OperatingSystem" -> "Windows", 
           "SystemWordLength" -> 64, "Evaluations" -> {}]]], "TestSet" -> 
      Association[
       "Input" -> {{-5.3, 13.1, 0., 2.2, 7.9, "NW", 33., "N", "NNW", 4., 20., 
           94., 47., 1029.6, 1025.6, 6., 6., 0.1, 12.2, "No", 0.}, {-2.9, 9.6,
            0., 1.8, 7.3, "NW", 43., "N", "NW", 6., 24., 76., 70., 1022.4, 
           1019., 1., 6., 5.6, 8.1, "No", 0.4}, {-2.8, 14.1, 0., 2.2, 6.8, 
           "WNW", 48., "NA", "WNW", 0., 26., 81., 38., 1017.3, 1012.9, 1., 7.,
            3., 12.8, "No", 1.}, {-1.8, 11.5, 0., 0.6, 4.7, "NNW", 41., "NA", 
           "NNW", 0., 24., 99., 55., 1019.7, 1013.9, 7., 3., 1.3, 11., "No", 
           0.}, {-1.6, 10.7, 1.4, 0.8, 9.1, "S", 59., "SSW", "S", 28., 37., 
           74., 56., 1014.1, 1014.9, 2., 4., 5.6, 9.6, "Yes", 0.}, {-1.5, 
           14.8, 0., 2.2, 8., "NW", 15., "N", "NW", 6., 9., 90., 41., 1029.1, 
           1026., 4., 3., 2.1, 14.5, "No", 0.}, {-1., 12.2, 0., 1.6, 8.4, 
           "ESE", 30., "SE", "E", 7., 13., 82., 51., 1032.2, 1027.4, 3., 5., 
           3.7, 10.8, "No", 0.}, {-0.9, 16.7, 0., 2.4, 9.3, "NNW", 30., "SW", 
           "NNW", 2., 15., 76., 42., 1022.7, 1018.5, 5., 2., 6.2, 15.4, "No", 
           0.}, {-0.6, 11.1, 0., 3., 5., "NNW", 41., "SE", "N", 7., 26., 89., 
           78., 1018.4, 1015.9, 7., 7., 3.8, 5.7, "No", 1.2}, {-0.2, 16.2, 0.,
            3.4, 5.9, "E", 28., "NA", "ENE", 0., 20., 74., 45., 1027.6, 
           1022.9, 7., 6., 7.3, 14.6, "No", 0.}, {-0.1, 18., 0., 2., 8.6, 
           "NA", "NA", "N", "NNW", 2., 15., 83., 46., 1033.2, 1028.7, 1., 1., 
           5.6, 17.4, "No", 0.}, {
          0., 14., 0., 2.4, 4.7, "WNW", 39., "NNW", "WNW", 13., 24., 60., 36.,
            1027.3, 1024.4, 7., 7., 7.9, 12.4, "No", 0.}, {
          0.1, 21., 0., 2.2, 9.2, "NNW", 17., "WNW", "N", 2., 9., 78., 36., 
           1023.2, 1020.3, 0., 1., 7.6, 20.7, "No", 0.}, {
          0.5, 11., 0., 1., 0.9, "NNW", 31., "NA", "NW", 0., 15., 92., 69., 
           1024.4, 1021.9, 7., 7., 2.8, 10.7, "No", 0.}, {
          2.3, 12.8, 0., 2.2, 9.6, "WNW", 35., "ENE", "WNW", 4., 24., 70., 
           48., 1021.2, 1018.1, 1., 1., 7.8, 11.6, "No", 0.}, {
          2.4, 11.6, 1.2, 2.2, 8.1, "NW", 35., "NNW", "NW", 15., 22., 71., 
           48., 1016.7, 1014.9, 1., 3., 6., 10.7, "Yes", 0.2}, {
          2.4, 20.6, 0., 2.8, 10.1, "E", 30., "SE", "SSE", 9., 7., 77., 34., 
           1024.8, 1021., 1., 2., 10.6, 19.8, "No", 0.}, {
          3., 9.7, 1., 2.6, 0.7, "W", 65., "NW", "NW", 19., 28., 64., 82., 
           1005.1, 1001.3, 8., 7., 9.6, 8.6, "No", 6.6}, {
          3.3, 25.5, 0., 5.2, 10.8, "N", 43., "N", "NNW", 4., 19., 57., 16., 
           1018.8, 1014.6, 0., 3., 12., 24.8, "No", 0.}, {
          3.4, 15., 0.8, 4.8, 11.7, "S", 70., "S", "S", 35., 37., 43., 24., 
           1023.4, 1023.1, 1., 5., 8.3, 14.3, "No", 0.}, {
          4.3, 14.1, 0.8, 1.6, 8.8, "NW", 41., "NNW", "WNW", 13., 26., 71., 
           53., 1008.4, 1008.3, 6., 6., 7.9, 13.3, "No", 0.}, {
          4.4, 11.5, 6.6, 2.2, 9.3, "WNW", 57., "NNW", "WNW", 28., 31., 67., 
           56., 1013.9, 1014.9, 1., 1., 6.9, 10.5, "Yes", 0.}, {
          4.5, 23.9, 0., 4.8, 11.7, "NW", 30., "ENE", "NNW", 4., 11., 67., 
           27., 1025.8, 1021.5, 0., 4., 12.6, 22.3, "No", 0.}, {
          5.3, 23.3, 0., 3.6, 5.6, "NNW", 83., "SSW", "NW", 2., 37., 90., 26.,
            1018., 1010.5, 1., 8., 9.5, 22.5, "No", 2.6}, {
          6.3, 19.3, 0., 3.4, 10.6, "S", 31., "S", "SE", 9., 13., 65., 39., 
           1027.9, 1024.4, 1., 1., 12.6, 18.8, "No", 0.}, {
          6.7, 24.7, 0., 5.4, 8.6, "NW", 43., "N", "NW", 4., 20., 80., 31., 
           1025.7, 1022.2, 1., 7., 12.7, 23.7, "No", 0.}, {
          7., 14.3, 2.6, 9.6, 9.7, "WNW", 63., "NW", "W", 26., 33., 68., 40., 
           1010.3, 1012.7, 1., 3., 9.1, 13.7, "Yes", 0.}, {
          7.5, 20.9, 0., 6.6, 8.7, "ENE", 39., "SE", "E", 13., 20., 61., 43., 
           1020.6, 1018.3, 6., 7., 15.3, 19.8, "No", 0.}, {
          7.8, 16.2, 17.4, 6.4, 7.9, "NW", 50., "NW", "N", 15., 22., 73., 44.,
            1016.7, 1017.8, 7., 1., 8., 14.3, "Yes", 0.}, {
          7.9, 12.3, 1., 1.8, 1.7, "NW", 52., "NNW", "NW", 30., 24., 68., 78.,
            1006.3, 1005.9, 7., 7., 11.3, 7.3, "No", 0.8}, {
          8., 24.3, 0., 3.4, 6.3, "NW", 30., "SW", "NW", 6., 20., 68., 29., 
           1019.7, 1015., 7., 7., 14.4, 23.6, "No", 3.6}, {
          8.1, 20.5, 0., 3.8, 7.8, "ENE", 31., "ESE", "ENE", 11., 11., 66., 
           48., 1027.8, 1024., 1., 5., 14.9, 19.5, "No", 0.}, {
          8.3, 17.4, 0., 2., 1.6, "E", 20., "WSW", "NE", 6., 11., 80., 52., 
           1024.4, 1021.5, 7., 7., 13.5, 17.2, "No", 0.}, {
          8.3, 27.3, 0., 5.6, 10.1, "E", 35., "ESE", "WNW", 6., 9., 78., 28., 
           1025.4, 1020.4, 1., 1., 13.8, 25.5, "No", 0.}, {
          8.4, 16.1, 0., 3., 4.9, "SE", 35., "SE", "ESE", 13., 22., 69., 51., 
           1029.5, 1027.4, 6., 7., 13.6, 15.2, "No", 0.}, {
          8.6, 24.2, 0.2, 2.8, 12.7, "E", 33., "S", "SE", 11., 9., 63., 37., 
           1017.5, 1015.1, 1., 1., 13.7, 22., "No", 0.}, {
          8.7, 19.7, 1.6, 5.2, 8., "NW", 98., "NW", "NNW", 31., 52., 63., 33.,
            1009.1, 1001.5, 3., 6., 15.6, 18.5, "Yes", 3.4}, {
          9., 25.5, 0., 5.6, 10.2, "NW", 50., "N", "NW", 20., 26., 47., 31., 
           1015.3, 1011.4, 3., 1., 17.5, 25.1, "No", 9.8}, {
          9., 30.7, 0., 7.6, 12.1, "NNW", 76., "SSE", "NW", 7., 50., 38., 15.,
            1016.1, 1010.8, 1., 3., 20.4, 30., "No", 0.}, {
          9.2, 20.4, 17.4, 7.8, 10.2, "ENE", 39., "N", "N", 9., 20., 59., 49.,
            1009.5, 1009.1, 1., 7., 14.9, 18.8, "Yes", 0.}, {
          10.1, 28.2, 0., 6., 7.3, "ESE", 39., "SSE", "WNW", 6., 7., 72., 28.,
            1021.1, 1018.2, 1., 7., 15.6, 27., "No", 0.}, {
          10.1, 31.2, 0., 8.8, 13.1, "NW", 41., "S", "W", 6., 20., 45., 16., 
           1018.2, 1013.7, 0., 1., 18.7, 30.4, "No", 0.}, {
          10.2, 15., 4.8, 0.2, 0.5, "NW", 46., "NNW", "NW", 22., 17., 90., 
           65., 1022.9, 1022.1, 7., 7., 12.9, 13.7, "Yes", 0.2}, {
          10.3, 21.3, 3., 4.2, 6.7, "NNW", 43., "ENE", "N", 7., 19., 79., 46.,
            1018.1, 1013.6, 8., 1., 11.7, 19.8, "Yes", 0.}, {
          10.3, 27.8, 0., 6.4, 9.9, "ENE", 35., "SE", "NE", 6., 11., 64., 29.,
            1021.3, 1018.1, 3., 6., 17., 26.3, "No", 0.}, {
          10.4, 20.9, 0., 4., 8.9, "SSE", 33., "S", "S", 15., 17., 65., 51., 
           1007.7, 1006.8, 6., 6., 13.8, 18.7, "No", 0.}, {
          10.6, 15.1, 3.8, 0.2, 2.6, "SSE", 41., "SE", "SE", 9., 20., 78., 
           65., 1028.2, 1025.7, 8., 7., 11.5, 13.3, "Yes", 0.}, {
          10.8, 21.7, 1.4, 2.8, 10.6, "ESE", 48., "SSE", "ESE", 13., 20., 59.,
            40., 1017.6, 1016.8, 1., 4., 15.3, 20.8, "Yes", 0.}, {
          10.8, 25.2, 0., 5.6, 12.6, "ENE", 35., "SE", "E", 7., 7., 69., 32., 
           1020.2, 1016.7, 1., 1., 15., 24.3, "No", 0.}, {
          11.2, 18., 0., 4.8, 8.4, "W", 65., "N", "W", 24., 33., 65., 40., 
           1009.5, 1005.3, 5., 4., 12.8, 16.2, "No", 8.2}, {
          11.7, 30., 1.2, 7.2, 10.1, "S", 52., "SW", "NE", 6., 11., 59., 26., 
           1016.4, 1013., 1., 5., 20.1, 28.6, "Yes", 0.6}, {
          12., 28.9, 0., 7.2, 8.2, "ESE", 39., "SSE", "WNW", 2., 9., 78., 31.,
            1012.2, 1009.1, 2., 7., 17.4, 28.6, "No", 1.8}, {
          12.1, 24.1, 0., 7.4, 10.2, "ENE", 46., "ESE", "NNE", 9., 13., 64., 
           46., 1025.2, 1021.4, 7., 1., 15.4, 22.5, "No", 0.}, {
          12.1, 27.8, 0., 5., 11.5, "E", 41., "SE", "NNE", 7., 11., 66., 33., 
           1024.8, 1023.1, 0., 1., 17.8, 27., "No", 0.}, {
          12.4, 32.3, 0.6, 7.4, 13., "E", 39., "NNE", "W", 4., 17., 60., 25., 
           1017.1, 1013.3, 1., 3., 20.2, 31.2, "No", 0.}, {
          12.6, 18.2, 11., 3.2, 0.4, "ENE", 30., "SSE", "SSE", 13., 15., 81., 
           73., 1010., 1011., 7., 8., 16.3, 16.8, "Yes", 0.2}, {
          12.6, 23.1, 3.4, 1.6, 2.3, "NNW", 30., "N", "NW", 4., 13., 97., 74.,
            1015.8, 1014.1, 8., 7., 15.3, 20.4, "Yes", 6.4}, {
          12.9, 28., 0., 4.4, 10.7, "S", 52., "S", "NNE", 6., 11., 61., 31., 
           1019.2, 1014.8, 5., 7., 18.8, 26.7, "No", 0.}, {
          13.3, 26.5, 6.6, 3.8, 11.8, "NW", 50., "NW", "WNW", 20., 26., 74., 
           40., 1007.3, 1006.3, 5., 2., 18.8, 25.1, "Yes", 0.}, {
          13.6, 24.1, 0.4, 2.6, 0.5, "NNW", 30., "SSW", "S", 6., 6., 83., 49.,
            1017.2, 1013.3, 8., 7., 17.3, 23.2, "No", 22.6}, {
          13.8, 33.5, 0., 11.4, 13.6, "NE", 31., "SSE", "NE", 7., 9., 44., 
           20., 1019.2, 1015.6, 0., 1., 21.9, 32.2, "No", 0.}, {
          14.8, 17.3, 0., 7.6, 0.8, "SSE", 48., "S", "SE", 13., 13., 74., 78.,
            1010., 1009.9, 7., 7., 15.7, 15.3, "No", 10.4}, {
          15., 29.4, 0., 6.6, 11.1, "NW", 43., "N", "W", 9., 24., 78., 24., 
           1010.8, 1008.5, 7., 7., 20.6, 28.6, "No", 0.}, {
          15.4, 33.8, 0., 5.2, 11.1, "W", 35., "E", "NW", 7., 15., 70., 26., 
           1014.2, 1009., 7., 1., 18., 31.7, "No", 0.}, {
          15.5, 21.1, 5.4, 6.4, 0.9, "S", 31., "SSE", "NE", 6., 7., 93., 86., 
           1010.1, 1008.6, 8., 8., 16.6, 20., "Yes", 1.4}, {
          15.5, 22.4, 0.6, 4.8, 1.9, "NW", 28., "SSE", "WNW", 6., 19., 89., 
           68., 1018.7, 1015.4, 8., 7., 17.1, 21.1, "No", 6.4}, {
          16., 22.8, 0., 12.4, 6., "E", 50., "E", "ENE", 13., 19., 70., 57., 
           1012.3, 1012.3, 8., 6., 17., 21.6, "No", 0.}, {
          16., 23.8, 2.2, 5.4, 6.2, "SSE", 30., "SE", "ESE", 11., 11., 73., 
           49., 1018.9, 1017.1, 8., 7., 16.5, 22.9, "Yes", 0.}, {
          16.7, 25.3, 0., 6.2, 12.5, "ESE", 46., "ESE", "ESE", 24., 26., 56., 
           45., 1016.2, 1013., 6., 7., 20.3, 23.9, "No", 0.}, {
          17.2, 24.7, 12.2, 1.4, 8.1, "NW", 50., "NW", "WNW", 19., 28., 80., 
           71., 1004.9, 1004., 7., 8., 19.4, 21.9, "Yes", 0.8}, {
          17.5, 35.8, 0., 9.4, 13.3, "SSE", 57., "NNW", "NW", 6., 19., 56., 
           24., 1011.8, 1006.5, 0., 1., 24.7, 34.5, "No", 0.}, {
          17.9, 33.2, 0., 10.4, 8.4, "N", 59., "N", "NNE", 15., 20., 58., 62.,
            1008.5, 1006.1, 6., 7., 24.5, 23.5, "No", 4.8}, {
          18.2, 22.6, 1.8, 8., 0., "ENE", 33., "SSE", "ENE", 7., 13., 92., 
           76., 1014.4, 1011.5, 8., 8., 18.5, 22.1, "Yes", 9.}, {
          19.9, 22., 11., 4.4, 5.9, "NNW", 76., "N", "WNW", 41., 30., 92., 
           62., 996.5, 996.8, 8., 3., 20.6, 19.6, "Yes", 17.4}}, 
        "Output" -> {
         "No", "No", "No", "No", "No", "No", "No", "No", "Yes", "No", "No", 
          "No", "No", "No", "No", "No", "No", "Yes", "No", "No", "No", "No", 
          "No", "Yes", "No", "No", "No", "No", "No", "No", "Yes", "No", "No", 
          "No", "No", "No", "Yes", "Yes", "No", "No", "No", "No", "No", "No", 
          "No", "No", "No", "No", "No", "Yes", "No", "Yes", "No", "No", "No", 
          "No", "Yes", "No", "No", "Yes", "No", "Yes", "No", "No", "Yes", 
          "Yes", "No", "No", "No", "No", "No", "Yes", "Yes", "Yes"}], 
      "Predictions" -> {
       "No", "No", "No", "No", "No", "No", "No", "No", "Yes", "No", "No", 
        "No", "No", "No", "No", "No", "No", "Yes", "No", "No", "No", "No", 
        "No", "Yes", "No", "No", "No", "No", "No", "No", "Yes", "No", "No", 
        "No", "No", "No", "Yes", "Yes", "No", "No", "No", "No", "No", "No", 
        "No", "No", "No", "No", "No", "Yes", "No", "Yes", "No", "No", "No", 
        "No", "Yes", "No", "No", "Yes", "No", "Yes", "No", "No", "Yes", "Yes",
         "No", "No", "No", "No", "No", "Yes", "Yes", "Yes"}, 
      "LogProbabilities" -> CompressedData["
1:eJxTTMoPSmViYGDwAmIQ/XG2IsOPJy777f4qBy3Okz1Abz7TJCnvqukiB2TT
Si2a7pfvH+7uobd/6e2fwRaf1A4vavuPVPOo7T56xx8h+9D5AJTJReo=
       "], "CountMatrix" -> {{58, 0, 0}, {0, 16, 0}}, 
      "IndicesMatrix" -> {{{1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 
         16, 17, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 
         36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 53, 54, 55, 56, 
         58, 59, 61, 63, 64, 67, 68, 69, 70, 71}, {}, {}}, {{}, {9, 18, 24, 
         31, 37, 38, 50, 52, 57, 60, 62, 65, 66, 72, 73, 74}, {}}}, 
      "ExtendedClasses" -> {"No", "Yes"}, "Weights" -> 
      SparseArray[Automatic, {74}, 1., {1, {{0, 0}, {}}, {}}], 
      "BatchEvaluationTime" -> 0.0004500148648648649, "SingleEvaluationTime" -> 
      0.008715975, "Version" -> {12.2, 0}]]], "[", "\<\"ResidualPlot\"\>", 
   "]"}], "}"}]], "Output",
 CellChangeTimes->{
  3.8207492817295475`*^9, 3.820749312227522*^9, {3.8207494821456895`*^9, 
   3.820749508752392*^9}, {3.820749906806616*^9, 3.820749932800001*^9}, {
   3.8262309752834487`*^9, 3.826230999422779*^9}},
 CellLabel->"Out[26]=",ExpressionUUID->"8d3fd806-0f33-4970-8927-85b5844ec939"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"save", " ", "model"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"SetDirectory", "[", 
     RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DumpSave", "[", 
     RowBox[{"\"\<classify_weather.mx\>\"", ",", "myClassify"}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8207501321316485`*^9, 3.820750217040702*^9}, {
  3.826231211118288*^9, 3.8262312129928565`*^9}, {3.826231291615985*^9, 
  3.826231318268956*^9}, {3.8262313527172275`*^9, 3.826231353886425*^9}},
 CellLabel->"In[31]:=",ExpressionUUID->"d3aac202-b2b8-4c2c-b76b-167a87feb28b"],

Cell[BoxData[""], "Input",ExpressionUUID->"ffd29dc8-5bbe-4136-b198-f3e313afce09"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Get", "[", 
   RowBox[{"\"\<classify_weather.mx\>\"", ",", "myClassify"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"importProductionXLSX", "=", 
   RowBox[{"SystemDialogInput", "[", 
    RowBox[{"\"\<FileOpen\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<data\\\\\>\""}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Data files\>\"", "\[Rule]", 
         RowBox[{"{", "\"\<*.xlsx\>\"", "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BatchSpecimens", "=", 
   RowBox[{
    RowBox[{"Import", "[", 
     RowBox[{"importProductionXLSX", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<Data\>\"", ",", "1"}], "}"}]}], "]"}], " ", "[", 
    RowBox[{"[", 
     RowBox[{"2", ";;"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"pResult", "=", 
  RowBox[{"myClassify", "[", "BatchSpecimens", "]"}]}]}], "Input",
 CellChangeTimes->{{3.826231362648364*^9, 3.826231378069028*^9}, {
  3.826231461953247*^9, 3.826231462373575*^9}, {3.8262315394060726`*^9, 
  3.826231539520381*^9}},
 CellLabel->"In[33]:=",ExpressionUUID->"2f9d765c-a657-412e-baa8-a7c4c917df25"],

Cell[BoxData[
 TemplateBox[{
  "ClassifierFunction", "mlbftlgth2", 
   "\"Example \\!\\(\\*RowBox[{\\\"{\\\", RowBox[{\\\"8.`\\\", \\\",\\\", \
\\\"24.3`\\\", \\\",\\\", \\\"0.`\\\", \\\",\\\", \\\"3.4`\\\", \\\",\\\", \\\
\"6.3`\\\", \\\",\\\", \\\"\\\\\\\"NW\\\\\\\"\\\", \\\",\\\", \\\"30.`\\\", \
\\\",\\\", \\\"\\\\\\\"SW\\\\\\\"\\\", \\\",\\\", \\\"\\\\\\\"NW\\\\\\\"\\\", \
\\\",\\\", \\\"6.`\\\", \\\",\\\", RowBox[{\\\"\[LeftSkeleton]\\\", \
\\\"12\\\", \\\"\[RightSkeleton]\\\"}]}], \\\"}\\\"}]\\) should have \
\\!\\(\\*RowBox[{\\\"21\\\"}]\\) features instead of \
\\!\\(\\*RowBox[{\\\"22\\\"}]\\).\"", 2, 36, 6, 19893325542889681013, "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.82623156806186*^9},
 CellLabel->
  "During evaluation of \
In[33]:=",ExpressionUUID->"2d1e7fe3-2449-4b7d-8e93-d5e6514ce9b7"],

Cell[BoxData[
 RowBox[{
  InterpretationBox[
   RowBox[{
    TagBox["ClassifierFunction",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{
                PointSize[0.13], 
                GrayLevel[0.45], 
                
                PointBox[{{0.9821769431797024, -0.440194219686987}, {
                 1.1339776261519132`, 0.8056918676854272}, {
                 0.5279892326667741, 0.6574306661126254}, {
                 0.022147046479890797`, 1.4937877187998898`}}], 
                GrayLevel[0.7], 
                
                PointBox[{{-0.9815166384819979, 
                 0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                GrayLevel[0.55], 
                AbsoluteThickness[1.5], 
                LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
              Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
              ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
              GrayLevel[0.94]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "21", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Nominal", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"No\"", "\"Yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{{
                PointSize[0.13], 
                GrayLevel[0.45], 
                
                PointBox[{{0.9821769431797024, -0.440194219686987}, {
                 1.1339776261519132`, 0.8056918676854272}, {
                 0.5279892326667741, 0.6574306661126254}, {
                 0.022147046479890797`, 1.4937877187998898`}}], 
                GrayLevel[0.7], 
                
                PointBox[{{-0.9815166384819979, 
                 0.15045697525228735`}, {-0.5923526886966953, \
-0.33441771553094035`}, {-0.005656646679640442, -1.462421365651345}, \
{-1.0734370436522753`, -1.3729645043477454`}}]}, {
                GrayLevel[0.55], 
                AbsoluteThickness[1.5], 
                LineBox[{{-1., 1.5}, {1, -1.6}}]}}, {
              Axes -> {False, False}, AxesLabel -> {None, None}, 
               AxesOrigin -> {0, 0}, BaseStyle -> {FontFamily -> "Arial", 
                 AbsoluteThickness[1.5]}, DisplayFunction -> Identity, 
               Frame -> {{True, True}, {True, True}}, 
               FrameLabel -> {{None, None}, {None, None}}, FrameStyle -> 
               Directive[
                 Thickness[Tiny], 
                 GrayLevel[0.7]], FrameTicks -> {{None, None}, {None, None}}, 
               GridLines -> {None, None}, 
               LabelStyle -> {FontFamily -> "Arial"}, 
               Method -> {"ScalingFunctions" -> None}, 
               PlotRange -> {{-1., 1}, {-1.3, 1.1}}, PlotRangeClipping -> 
               True, PlotRangePadding -> {{0.7, 0.7}, {0.7, 0.7}}, 
               Ticks -> {None, None}}, Axes -> False, AspectRatio -> 1, 
              ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Opacity[0.5], 
                Thickness[Tiny], 
                RGBColor[0.368417, 0.506779, 0.709798]], Background -> 
              GrayLevel[0.94]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Input type: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   TagBox[
                    TooltipBox[
                    TemplateBox[{"\"Mixed\"", 
                    StyleBox[
                    
                    TemplateBox[{"\" (number: \"", "21", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    TagBox[
                    RowBox[{"{", 
                    
                    RowBox[{
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", "\"Nominal\"",
                     ",", "\"Nominal\"", ",", "\"Nominal\"", ",", 
                    "\"Nominal\"", ",", "\"Nominal\"", ",", "\"Nominal\"", 
                    ",", "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Numerical\"", ",", 
                    "\"Numerical\"", ",", "\"Nominal\"", ",", 
                    "\"Numerical\""}], "}"}], Short[#, 10]& ]], Annotation[#, 
                    
                    Short[{"Numerical", "Numerical", "Numerical", "Numerical",
                     "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                    "Nominal", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Numerical", "Numerical", 
                    "Numerical", "Numerical", "Nominal", "Numerical"}, 10], 
                    "Tooltip"]& ], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Classes: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   
                   TemplateBox[{",", "\",\"", "\"No\"", "\"Yes\""}, 
                    "RowWithSeparators"], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Method: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["\"DecisionTree\"", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox[
                  "\"Number of training examples: \"", 
                   "SummaryItemAnnotation"], "\[InvisibleSpace]", 
                  TagBox["292", "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   ClassifierFunction[
    Association[
    "ExampleNumber" -> 292, "ClassNumber" -> 2, "Input" -> 
     Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
         Association[
         "Input" -> Association[
           "f1" -> Association["Type" -> "Numerical"], "f2" -> 
            Association["Type" -> "Numerical"], "f3" -> 
            Association["Type" -> "Numerical"], "f4" -> 
            Association["Type" -> "Numerical"], "f5" -> 
            Association["Type" -> "Nominal"], "f6" -> 
            Association["Type" -> "Nominal"], "f7" -> 
            Association["Type" -> "Nominal"], "f8" -> 
            Association["Type" -> "Nominal"], "f9" -> 
            Association["Type" -> "Nominal"], "f10" -> 
            Association["Type" -> "Nominal"], "f11" -> 
            Association["Type" -> "Numerical"], "f12" -> 
            Association["Type" -> "Numerical"], "f13" -> 
            Association["Type" -> "Numerical"], "f14" -> 
            Association["Type" -> "Numerical"], "f15" -> 
            Association["Type" -> "Numerical"], "f16" -> 
            Association["Type" -> "Numerical"], "f17" -> 
            Association["Type" -> "Numerical"], "f18" -> 
            Association["Type" -> "Numerical"], "f19" -> 
            Association["Type" -> "Numerical"], "f20" -> 
            Association["Type" -> "Nominal"], "f21" -> 
            Association["Type" -> "Numerical"]], "Output" -> 
          Association[
           "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f6" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f7" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f8" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f9" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f10" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f11" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f12" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f13" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f20" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f21" -> 
            Association["Type" -> "Numerical", "Weight" -> 1]], 
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
            Association["Processors" -> {
               MachineLearning`MLProcessor["Transpose", 
                Association["FeatureNumber" -> 21]], 
               MachineLearning`MLProcessor["WrapMLDataset", 
                Association[
                "FeatureTypes" -> {
                  "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Nominal", "Nominal", "Nominal", "Nominal", "Nominal", 
                   "Nominal", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Numerical", "Numerical", 
                   "Numerical", "Numerical", "Nominal", "Numerical"}, 
                 "FeatureKeys" -> {
                  "f1", "f2", "f3", "f4", "f5", "f6", "f7", "f8", "f9", "f10",
                    "f11", "f12", "f13", "f14", "f15", "f16", "f17", "f18", 
                   "f19", "f20", "f21"}, "FeatureWeights" -> Automatic, 
                 "ExampleWeights" -> Automatic, "RawExample" -> 
                 Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                 False]]}]], "ScalarFeature" -> False, "Invertibility" -> 
          "Perfect", "StructurePreserving" -> False, "Missing" -> "Allowed"]],
        "Processor" -> MachineLearning`MLProcessor["Sequence", 
         Association[
         "Input" -> Association[
           "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], "f2" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f3" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f4" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f11" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f12" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f13" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f21" -> 
            Association["Type" -> "Numerical", "Weight" -> 1], "f5" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f6" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f7" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f8" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f9" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f10" -> 
            Association["Type" -> "Nominal", "Weight" -> 1], "f20" -> 
            Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
          Association[
           "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
            Association["Type" -> "NumericalVector", "Weight" -> 14], 
            "(f5f6f7f8f9f10f20)" -> 
            Association["Type" -> "NominalVector", "Weight" -> 7]], 
          "Processors" -> {
            MachineLearning`MLProcessor["Threads", 
             Association[
             "Input" -> Association[
               "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f2" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f3" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f4" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f11" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f12" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f13" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f14" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f15" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f16" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f17" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f18" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f19" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f21" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                "f5" -> Association["Type" -> "Nominal", "Weight" -> 1], "f6" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f7" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f8" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f9" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f10" -> 
                Association["Type" -> "Nominal", "Weight" -> 1], "f20" -> 
                Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
              Association[
               "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                Association["Type" -> "NumericalVector", "Weight" -> 14], 
                "(f5f6f7f8f9f10f20)" -> 
                Association["Type" -> "NominalVector", "Weight" -> 7]], 
              "Processors" -> {
                MachineLearning`MLProcessor["ToVector", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "f1" -> Association["Type" -> "Numerical", "Weight" -> 1], 
                    "f2" -> Association["Type" -> "Numerical", "Weight" -> 1],
                     "f3" -> Association[
                    "Type" -> "Numerical", "Weight" -> 1], "f4" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f11" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f12" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f13" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f14" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f15" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f16" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f17" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f18" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f19" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1], "f21" -> 
                    Association["Type" -> "Numerical", "Weight" -> 1]], 
                  "Output" -> 
                  Association[
                   "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                   "Version" -> {12.2, 0}, "ID" -> 4365890816216361023]], 
                MachineLearning`MLProcessor["ToVector", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "f5" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f6" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f7" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f8" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f9" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f10" -> Association["Type" -> "Nominal", "Weight" -> 1], 
                    "f20" -> Association["Type" -> "Nominal", "Weight" -> 1]],
                   "Output" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7]], 
                  "Version" -> {12.2, 0}, "ID" -> 3089886697020883640]]}, 
              "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
              "Missing" -> "Allowed"]], 
            MachineLearning`MLProcessor["Threads", 
             Association[
             "Input" -> Association[
               "(f5f6f7f8f9f10f20)" -> 
                Association["Type" -> "NominalVector", "Weight" -> 7], 
                "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                Association["Type" -> "NumericalVector", "Weight" -> 14]], 
              "Output" -> 
              Association[
               "(f5f6f7f8f9f10f20)" -> 
                Association["Type" -> "NominalVector", "Weight" -> 7], 
                "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                Association["Type" -> "NumericalVector", "Weight" -> 14]], 
              "Processors" -> {
                MachineLearning`MLProcessor["ImputeMissing", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7]], 
                  "VectorLength" -> 7, "Output" -> 
                  Association[
                   "(f5f6f7f8f9f10f20)" -> 
                    Association["Type" -> "NominalVector", "Weight" -> 7]], 
                  "Type" -> "NominalVector", "Version" -> {12.2, 0}, "ID" -> 
                  2787103142329180041]], 
                MachineLearning`MLProcessor["ImputeMissing", 
                 Association[
                 "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                  "StructurePreserving" -> True, "Input" -> 
                  Association[
                   "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                   "Imputer" -> (DimensionReducerFunction[
                    Association[
                    "ExampleNumber" -> 292, "Imputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Fill" -> {7.033219178082191, 20.44691780821917, 
                    1.3746575342465748`, 4.5301369863013665`, 
                    17.623287671232877`, 72.12328767123287, 
                    44.294520547945204`, 1020.1297945205475`, 
                    1017.2051369863012`, 3.835616438356164, 
                    3.8595890410958904`, 12.174657534246577`, 
                    19.149657534246593`, 1.3801369863013693`}, "Method" -> 
                    "Naive", "VectorLength" -> 14, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "RandomImputer" -> 
                    MachineLearning`MLProcessor["ImputeMissing", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Imputed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {7.033219178082191, 20.44691780821917, 
                    1.3746575342465748`, 4.5301369863013665`, 
                    17.623287671232877`, 72.12328767123287, 
                    44.294520547945204`, 1020.1297945205475`, 
                    1017.2051369863012`, 3.835616438356164, 
                    3.8595890410958904`, 12.174657534246577`, 
                    19.149657534246593`, 1.3801369863013693`}, 
                    "StandardDeviation" -> {5.975861196024612, 
                    6.6873237336973785`, 4.345463886579489, 2.66109385952093, 
                    8.673799637420842, 13.105415805604691`, 
                    16.642562948129548`, 6.445214532447195, 6.312604887157415,
                     2.93310672000912, 2.6658951763688594`, 5.581105743584622,
                     6.624061051516925, 4.281692788129442}, "Method" -> 
                    "NaiveSampler", "VectorLength" -> 14, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Type" -> 
                    "NumericalVector"]], "Preprocessor" -> 
                    MachineLearning`MLProcessor["ToMLDataset", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Length" -> 14]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
                    Association["Processors" -> {
                    MachineLearning`MLProcessor["List"], 
                    MachineLearning`MLProcessor["WrapMLDataset", 
                    Association[
                    "FeatureTypes" -> {"NumericalVector"}, 
                    "FeatureKeys" -> {"f1"}, "FeatureWeights" -> Automatic, 
                    "ExampleWeights" -> Automatic, "RawExample" -> 
                    Missing["KeyAbsent", "RawExample"], "StructurePreserving" -> 
                    False]]}]], "ScalarFeature" -> True, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "Processor" -> 
                    MachineLearning`MLProcessor["Identity"], "Model" -> 
                    Association["Matrix" -> CompressedData["
1:eJwNwws4EwgcAHBKWueRd6iF7qLrgRInvvzJHR/ZKWHTQ/fJkhIKFaUvKcm6
z+TRId0+kovF2jxO4r/Na2PLHh4zZecRk5LUpcR1/b7vZxMRF0RdpqGhof/t
d98akdJ6Dc8NoH9+Q7dLbCdsPGucyxILsf7NZJGHBwuOW+R+7rvTiZsou0qI
HxgwnGIZStWSgOvX7Q6ap1rRn2I+tiZDAoRqBs99Gw3sRwuflPw9iENNZRVT
YRx8Fyuk9AyKcKpFOzsIS+FJeWCAbx4L8qKLk8MfN2OADdFur+VDbDUNO5tq
IkK1RUOnit6C4Z+2F3rPVEO/W/aF83M5GBV4O9k5TQqhJDOzk5IWiDfWTlOR
JsFCTD/ndECMmoLF96LGF+A0ZC33UTfhDRuv6xefPsJXCwf0nLbIcQtRlRLx
sBRsd4hqHBIGUDexaw1Z8QfuS1+BxNB4MDlYTrpYycMXrKHZcjoXDaHdSTrZ
BWt1FTXM5c3gmbtH6nisH3JLfiJuyKzH6KIE+SufKVT3BiTU+THQl/Q9c37r
I9C6HvTxN7txiCX+Q2w5LcUkbtzjZk8ZlhdhiMm6xzh7uLLYWiiB9Z1dFtvY
I/inKcV5VluMo9meE5yN9eiR46KvtUcME8N+PmpFDyTcaqsQ7JZiDwR23CuW
wZ5pnmrpmQy6Sab3k8ueY8sxZ/Hsjx2gw/09WA/7MPKIOyE/VYBTVjGfQhRD
eIH8xW/Bphvi6FXjR/cNQYbyv/D5X+twp0GAc2tEOj64lvxAYs/E22tPFuza
yQfaDNV+rLALjtqcyaHQuEhoTCfpkseB73HIsr60CTXmvKirD0nAICXYeqBR
jurz0W97GxS4P6g38e5TRO9lPl6nrLrwvVv7DC9JBAUJ86lEdiNMcW+NRJ0Q
Y03tVc5lThsmrnpfV0/JwRD6PaoqSwqC4Xz2fIQMY5YK2OzFPrRVfHzNzK3F
yf0D+3nTUlz3nKaMZ8mg6IrI2OpdOzhfLK6/c7kdC5aqIjMZLOyZFggPFbHR
2zyDecCwBm5WaH96sEYJryt9XYwUQmzLDomUyfkYVdxj4uKuxFrq6aSYADke
MZl3/DrSB62uliPVNCVEXrLdJGAOoDLfqI1aJoEQR/5ncVMVEK6rbFvuDkLA
v1YXZnZ04OSHaGtyUx8GlWwtjpp7hhKNVXkp5cchQ6Cl42WgRuXBExrt7zqw
i+Y2sdjJwYUqZihtMw9XnhtLdDdRovl9MnckiQ2uLFn0cg8+mh3Omr6iWYHV
czD8sZePRypX+LWy6qAmtyDreDkbDJtYfIMGAXLaZa1pvQK4nD1KuPumGzxH
9FYvkQeRQLT+ZcHrCe7Ov1Ex1SDG7puuDLPgahAVEsmXfNngXJVnl/KSh/pO
X1ZtUldiRZXOVRcUovJqodPmtjZ0XK+/0MDgwIZ0nYfqiDK8NXDPetvKftAP
81xZ68ZBLt10aVd4P+b7hycrxkfhw+agH/TGVOCw5WdlpqEQhhxfnfEO/gtn
X9LfUpLkuNcfAsPMefA/VehY6g==
                    "], "Processor" -> MachineLearning`MLProcessor["Sequence", 
                    Association[
                    "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Processors" -> {
                    MachineLearning`MLProcessor["Standardize", 
                    Association[
                    "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
                    "StructurePreserving" -> True, "Input" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]], 
                    "Mean" -> {7.033219178082191, 20.44691780821917, 
                    1.3746575342465748`, 4.5301369863013665`, 
                    17.623287671232877`, 72.12328767123287, 
                    44.294520547945204`, 1020.1297945205475`, 
                    1017.2051369863012`, 3.835616438356164, 
                    3.8595890410958904`, 12.174657534246577`, 
                    19.149657534246593`, 1.3801369863013693`}, 
                    "StandardDeviation" -> {5.975861196024612, 
                    6.6873237336973785`, 4.345463886579489, 2.66109385952093, 
                    8.673799637420842, 13.105415805604691`, 
                    16.642562948129548`, 6.445214532447195, 6.312604887157415,
                     2.93310672000912, 2.6658951763688594`, 5.581105743584622,
                     6.624061051516925, 4.281692788129442}, "Output" -> 
                    Association[
                    "f1" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1]]]], 
                    MachineLearning`MLProcessor["FirstValues", 
                    Association[
                    "Info" -> Association[
                    "Type" -> "NumericalVector", "Weight" -> 1], "Key" -> 
                    "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
                    False, "Missing" -> "Allowed"]]}, "Invertibility" -> 
                    "Perfect", "StructurePreserving" -> False, "Missing" -> 
                    "Allowed"]], "FinalDimension" -> 10, "Padder" -> 
                    MachineLearning`MLProcessor["Identity"], "Method" -> 
                    "Linear"], "PerformanceGoal" -> Automatic, 
                    "Invertibility" -> "Approximate", "Log" -> 
                    Association[
                    "TrainingTime" -> 0.0279355, "MaxTrainingMemory" -> 
                    172088, "DataMemory" -> 32880, "FunctionMemory" -> 23424, 
                    "LanguageVersion" -> {12.2, 0}, "Date" -> 
                    DateObject[{
                    2021, 4, 1, 9, 56, 1.4353198`7.909523662346748}, 
                    "Instant", "Gregorian", 8.], "ProcessorCount" -> 4, 
                    "ProcessorType" -> "x86-64", "OperatingSystem" -> 
                    "Windows", "SystemWordLength" -> 64, 
                    "Evaluations" -> {}]]][#, "ImputedVectors", 
                    PerformanceGoal -> "Quality"]& ), "Method" -> 
                  "DimensionReduction", "VectorLength" -> 14, "Output" -> 
                  Association[
                   "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                    Association["Type" -> "NumericalVector", "Weight" -> 14]],
                   "Type" -> "NumericalVector", "Version" -> {12.2, 0}, "ID" -> 
                  3972838121628584863]]}, "Invertibility" -> "Perfect", 
              "StructurePreserving" -> True, "Missing" -> "Imputed"]], 
            MachineLearning`MLProcessor["Standardize", 
             Association[
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, "Input" -> 
              Association[
               "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                Association["Type" -> "NumericalVector", "Weight" -> 14]], 
              "Mean" -> {7.033219178082191, 20.44691780821917, 
               1.3746575342465748`, 4.5301369863013665`, 17.623287671232877`, 
               72.12328767123287, 44.294520547945204`, 1020.1297945205475`, 
               1017.2051369863012`, 3.835616438356164, 3.8595890410958904`, 
               12.174657534246577`, 19.149657534246593`, 1.3801369863013693`},
               "StandardDeviation" -> {5.975861196024612, 6.6873237336973785`,
                4.345463886579489, 2.66109385952093, 8.673799637420842, 
               13.105415805604691`, 16.642562948129548`, 6.445214532447195, 
               6.312604887157415, 2.93310672000912, 2.6658951763688594`, 
               5.581105743584622, 6.624061051516925, 4.281692788129442}, 
              "Output" -> 
              Association[
               "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                Association["Type" -> "NumericalVector", "Weight" -> 14]], 
              "Version" -> {12.2, 0}, "ID" -> 3564137223642712157]], 
            MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
             Association[
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, "Input" -> 
              Association[
               "(f5f6f7f8f9f10f20)" -> 
                Association["Type" -> "NominalVector", "Weight" -> 7]], 
              "Index" -> {
                Association[
                0. -> 1, 0.1 -> 2, 0.2 -> 3, 0.3 -> 4, 0.4 -> 5, 0.6 -> 6, 
                 0.8 -> 7, 1.2 -> 8, 1.6 -> 9, 1.8 -> 10, 1.9 -> 11, 2. -> 12,
                  2.2 -> 13, 2.3 -> 14, 2.4 -> 15, 2.7 -> 16, 2.8 -> 17, 2.9 -> 
                 18, 3. -> 19, 3.3 -> 20, 3.5 -> 21, 3.6 -> 22, 3.8 -> 23, 
                 3.9 -> 24, 4.1 -> 25, 4.2 -> 26, 4.3 -> 27, 4.6 -> 28, 4.7 -> 
                 29, 4.9 -> 30, 5.1 -> 31, 5.2 -> 32, 5.3 -> 33, 5.6 -> 34, 
                 5.8 -> 35, 5.9 -> 36, 6. -> 37, 6.1 -> 38, 6.2 -> 39, 6.3 -> 
                 40, 6.4 -> 41, 6.5 -> 42, 6.7 -> 43, 6.8 -> 44, 6.9 -> 45, 
                 7. -> 46, 7.1 -> 47, 7.2 -> 48, 7.3 -> 49, 7.5 -> 50, 7.6 -> 
                 51, 7.7 -> 52, 7.8 -> 53, 7.9 -> 54, 8. -> 55, 8.1 -> 56, 
                 8.2 -> 57, 8.3 -> 58, 8.4 -> 59, 8.5 -> 60, 8.6 -> 61, 8.7 -> 
                 62, 8.8 -> 63, 8.9 -> 64, 9. -> 65, 9.1 -> 66, 9.2 -> 67, 
                 9.3 -> 68, 9.4 -> 69, 9.5 -> 70, 9.6 -> 71, 9.7 -> 72, 9.8 -> 
                 73, 9.9 -> 74, 10. -> 75, 10.2 -> 76, 10.3 -> 77, 10.4 -> 78,
                  10.5 -> 79, 10.6 -> 80, 10.7 -> 81, 10.8 -> 82, 10.9 -> 83, 
                 11. -> 84, 11.1 -> 85, 11.2 -> 86, 11.3 -> 87, 11.4 -> 88, 
                 11.5 -> 89, 11.6 -> 90, 11.7 -> 91, 11.8 -> 92, 11.9 -> 93, 
                 12. -> 94, 12.1 -> 95, 12.2 -> 96, 12.4 -> 97, 12.5 -> 98, 
                 12.6 -> 99, 12.7 -> 100, 12.8 -> 101, 13. -> 102, 13.2 -> 
                 103, 13.5 -> 104, 13.6 -> 105, "NA" -> 106], 
                Association[
                "E" -> 1, "ENE" -> 2, "ESE" -> 3, "N" -> 4, "NA" -> 5, "NE" -> 
                 6, "NNE" -> 7, "NNW" -> 8, "NW" -> 9, "S" -> 10, "SE" -> 11, 
                 "SSE" -> 12, "SSW" -> 13, "SW" -> 14, "W" -> 15, "WNW" -> 16,
                  "WSW" -> 17], 
                Association[
                13. -> 1, 15. -> 2, 17. -> 3, 20. -> 4, 22. -> 5, 24. -> 6, 
                 26. -> 7, 28. -> 8, 30. -> 9, 31. -> 10, 33. -> 11, 35. -> 
                 12, 39. -> 13, 41. -> 14, 43. -> 15, 44. -> 16, 46. -> 17, 
                 48. -> 18, 50. -> 19, 52. -> 20, 54. -> 21, 57. -> 22, 59. -> 
                 23, 61. -> 24, 63. -> 25, 65. -> 26, 67. -> 27, 69. -> 28, 
                 70. -> 29, 78. -> 30, 80. -> 31, 85. -> 32, "NA" -> 33], 
                Association[
                "E" -> 1, "ENE" -> 2, "ESE" -> 3, "N" -> 4, "NA" -> 5, "NE" -> 
                 6, "NNE" -> 7, "NNW" -> 8, "NW" -> 9, "S" -> 10, "SE" -> 11, 
                 "SSE" -> 12, "SSW" -> 13, "SW" -> 14, "W" -> 15, "WNW" -> 16,
                  "WSW" -> 17], 
                Association[
                "E" -> 1, "ENE" -> 2, "ESE" -> 3, "N" -> 4, "NA" -> 5, "NE" -> 
                 6, "NNE" -> 7, "NNW" -> 8, "NW" -> 9, "S" -> 10, "SE" -> 11, 
                 "SSE" -> 12, "SSW" -> 13, "SW" -> 14, "W" -> 15, "WNW" -> 16,
                  "WSW" -> 17], 
                Association[
                0. -> 1, 2. -> 2, 4. -> 3, 6. -> 4, 7. -> 5, 9. -> 6, 11. -> 
                 7, 13. -> 8, 15. -> 9, 17. -> 10, 19. -> 11, 20. -> 12, 22. -> 
                 13, 24. -> 14, 26. -> 15, 28. -> 16, 30. -> 17, 31. -> 18, 
                 33. -> 19, 39. -> 20, "NA" -> 21], 
                Association["No" -> 1, "Yes" -> 2]}, "MissingCode" -> 0, 
              "Version" -> {12.2, 0}, "ID" -> 6009108333341414470, "Output" -> 
              Association[
               "(f5f6f7f8f9f10f20)" -> 
                Association["Type" -> "NominalVector", "Weight" -> 7]]]]}, 
          "Invertibility" -> "Perfect", "StructurePreserving" -> True, 
          "Missing" -> "Imputed"]]], "Output" -> 
     Association["Preprocessor" -> MachineLearning`MLProcessor["ToMLDataset", 
         Association[
         "Input" -> Association["f1" -> Association["Type" -> "Nominal"]], 
          "Output" -> 
          Association[
           "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
          "Preprocessor" -> MachineLearning`MLProcessor["Sequence", 
            Association["Processors" -> {
               MachineLearning`MLProcessor["List"], 
               MachineLearning`MLProcessor["WrapMLDataset", 
                Association[
                "FeatureTypes" -> {"Nominal"}, "FeatureKeys" -> {"f1"}, 
                 "FeatureWeights" -> Automatic, "ExampleWeights" -> Automatic,
                  "RawExample" -> Missing["KeyAbsent", "RawExample"], 
                 "StructurePreserving" -> False]]}]], "ScalarFeature" -> True,
           "Invertibility" -> "Perfect", "StructurePreserving" -> False, 
          "Missing" -> "Allowed"]], "Processor" -> 
       MachineLearning`MLProcessor["Sequence", 
         Association[
         "Input" -> Association[
           "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], "Output" -> 
          Association[
           "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
          "Processors" -> {
            MachineLearning`MLProcessor["ToVector", 
             Association[
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, "Input" -> 
              Association[
               "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
              "Output" -> 
              Association[
               "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]],
               "Version" -> {12.2, 0}, "ID" -> 1374468457434343602]], 
            MachineLearning`MLProcessor["IntegerEncodeNominalVector", 
             Association[
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, "Input" -> 
              Association[
               "f1" -> Association["Type" -> "NominalVector", "Weight" -> 1]],
               "Index" -> {
                Association["No" -> 1, "Yes" -> 2]}, "MissingCode" -> 0, 
              "Version" -> {12.2, 0}, "ID" -> 8292309200956012400, "Output" -> 
              Association[
               "f1" -> Association[
                 "Type" -> "NominalVector", "Weight" -> 1]]]], 
            MachineLearning`MLProcessor["FromVector", 
             Association[
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, "Input" -> 
              Association[
               "f1" -> Association[
                 "Type" -> "NominalVector", "Weight" -> 1, "SetSize" -> {2}]],
               "Output" -> 
              Association[
               "f1" -> Association["Type" -> "Nominal", "Weight" -> 1]], 
              "Version" -> {12.2, 0}, "ID" -> 3858298161417783371]], 
            MachineLearning`MLProcessor["FirstValues", 
             Association[
             "Info" -> Association[
               "Type" -> "Nominal", "Weight" -> 1, "SetSize" -> 2], "Key" -> 
              "f1", "Invertibility" -> "Perfect", "StructurePreserving" -> 
              False, "Missing" -> "Allowed"]]}, "Invertibility" -> "Perfect", 
          "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
       "ProbabilityPostprocessor" -> Identity, "Name" -> "class", "Marginal" -> 
       Association[
        "No" -> 0.8265306122448979, "Yes" -> 0.17346938775510204`]], 
     "LabelSplitter" -> MachineLearning`MLProcessor["FeatureLabelSplit", 
       Association[
       "Processor" -> MachineLearning`MLProcessor["ListSplit"], 
        "PreferLabeled" -> True, "KeepLabelsFormat" -> False]], "Prior" -> 
     Automatic, "Utility" -> 
     SparseArray[
      Automatic, {2, 3}, 0., {1, {{0, 1, 2}, {{2}, {3}}}, {1., 1.}}], 
     "Threshold" -> 0, "TieBreaker" -> RandomChoice, "PerformanceGoal" -> 
     Automatic, "BatchProcessing" -> Automatic, "Model" -> 
     Association["Tree" -> MachineLearning`DecisionTree[
         Association[
         "FeatureIndices" -> RawArray["Integer16",{55}], 
          "NumericalThresholds" -> {-0.08089266198139153}, 
          "NominalSplits" -> {}, "Children" -> 
          RawArray["Integer16",{{-1, -2}}], "LeafValues" -> 
          RawArray["UnsignedInteger8",{{196, 1}, {1, 40}}], "RootIndex" -> 1, 
          "NominalDimension" -> 0]], "Processor" -> 
       MachineLearning`MLProcessor["Sequence", 
         Association[
         "Input" -> Association[
           "(f5f6f7f8f9f10f20)" -> 
            Association[
             "Type" -> "NominalVector", "Weight" -> 7, 
              "SetSize" -> {106, 17, 33, 17, 17, 21, 2}], 
            "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
            Association["Type" -> "NumericalVector", "Weight" -> 14]], 
          "Output" -> 
          Association[
           "((f5f6f7f8f9f10f20)(f1f2f3f4f11f12f13f14f15f16f17f18f19f21))" -> 
            Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+LbU1fEdt46aj9KU0YzgMEHutEAPIfZsA==
               "], "Type" -> "NumericalVector"]], "Processors" -> {
            MachineLearning`MLProcessor["EmbedNominalVector", 
             Association[
             "Invertibility" -> "Impossible", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, "Input" -> 
              Association[
               "(f5f6f7f8f9f10f20)" -> 
                Association[
                 "Type" -> "NominalVector", "Weight" -> 7, 
                  "SetSize" -> {106, 17, 33, 17, 17, 21, 2}]], "Index" -> {
                Association[
                1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                 8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 
                 15 -> 15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20, 
                 21 -> 21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 26, 
                 27 -> 27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 32, 
                 33 -> 33, 34 -> 34, 35 -> 35, 36 -> 36, 37 -> 37, 38 -> 38, 
                 39 -> 39, 40 -> 40, 41 -> 41, 42 -> 42, 43 -> 43, 44 -> 44, 
                 45 -> 45, 46 -> 46, 47 -> 47, 48 -> 48, 49 -> 49, 50 -> 50, 
                 51 -> 51, 52 -> 52, 53 -> 53, 54 -> 54, 55 -> 55, 56 -> 56, 
                 57 -> 57, 58 -> 58, 59 -> 59, 60 -> 60, 61 -> 61, 62 -> 62, 
                 63 -> 63, 64 -> 64, 65 -> 65, 66 -> 66, 67 -> 67, 68 -> 68, 
                 69 -> 69, 70 -> 70, 71 -> 71, 72 -> 72, 73 -> 73, 74 -> 74, 
                 75 -> 75, 76 -> 76, 77 -> 77, 78 -> 78, 79 -> 79, 80 -> 80, 
                 81 -> 81, 82 -> 82, 83 -> 83, 84 -> 84, 85 -> 85, 86 -> 86, 
                 87 -> 87, 88 -> 88, 89 -> 89, 90 -> 90, 91 -> 91, 92 -> 92, 
                 93 -> 93, 94 -> 94, 95 -> 95, 96 -> 96, 97 -> 97, 98 -> 98, 
                 99 -> 99, 100 -> 100, 101 -> 101, 102 -> 102, 103 -> 103, 
                 104 -> 104, 105 -> 105, 106 -> 106], 
                Association[
                1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                 8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 
                 15 -> 15, 16 -> 16, 17 -> 17], 
                Association[
                1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                 8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 
                 15 -> 15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20, 
                 21 -> 21, 22 -> 22, 23 -> 23, 24 -> 24, 25 -> 25, 26 -> 26, 
                 27 -> 27, 28 -> 28, 29 -> 29, 30 -> 30, 31 -> 31, 32 -> 32, 
                 33 -> 33], 
                Association[
                1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                 8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 
                 15 -> 15, 16 -> 16, 17 -> 17], 
                Association[
                1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                 8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 
                 15 -> 15, 16 -> 16, 17 -> 17], 
                Association[
                1 -> 1, 2 -> 2, 3 -> 3, 4 -> 4, 5 -> 5, 6 -> 6, 7 -> 7, 8 -> 
                 8, 9 -> 9, 10 -> 10, 11 -> 11, 12 -> 12, 13 -> 13, 14 -> 14, 
                 15 -> 15, 16 -> 16, 17 -> 17, 18 -> 18, 19 -> 19, 20 -> 20, 
                 21 -> 21], 
                Association[1 -> 1, 2 -> 2]}, "Output" -> 
              Association[
               "(f5f6f7f8f9f10f20)" -> 
                Association["Weight" -> 7, "Type" -> "NumericalVector"]], 
              "EmbeddingVectors" -> {CompressedData["
1:eJxVVnlUzmvU7UVp0CAqpfSWiAZRuqL3OT8N0qAQSTJUSlGkhMs1lIpKA42U
NKgrpRQvofc5j0ZjFIVSoskUMpfI113r++P7zlr7nHXWPn/utc/W8gp03jRK
TExsh+RIc/bcbREc7LlnhcR/i49ngIlxwH+k/wj+4/+3Qv/P/H9QlR/CTwM8
7ueWGHjY4I2+x2ugp7Od9odO5WZnTaG2SzZD27pOVMpMhe0FHdANZiytqQ8L
DHbB74duLPjIcRgMSobCwCfm9cIZrF62H3fy18Kyggaq6R4Pjg358Hp7GnlY
eQIOVeVi4zpj/EdmObu4JlPg0s3BfeyEGMMe1LTJgMQDDhhpO4/wJyZAzzkx
9BzugMrmJaxo2j2UdBnPletJwsUhW4ozJenCpfPwpMN9vBESSsaGe7IKZ2Vc
KGlAVS4bo+YsDSZcY8W9COvB1eo7YFt5OXEvNaIJadfwn0Ip+memHnj9SYMx
zgF0wL0NP06S5t4k/o07FiiTCTWG3L6wx5ig3gy971ZyIUfFuM4GL/wRfwHa
ffS4v3/VQ41NATZnRaFs+HxYX92P3vmx0Nt4jrSO3Fi8+wYX11lCu+krTDxd
B7H6iaQ15jG67tflPKvVOXuXh3CJz0eXyxHEHsbSpQPyuMYsGUSoi88+GdLn
W4CeEVZBxrIA/NijKNJy1kEZu0Pwc5EVk68tpy/fCOCOpRUtUojDHw6m4OFz
F2tPXMSvg85k+esU2t+oA4HafMGdimToXfUHwwK3Iv+GSLTCYJg0KkSS07HT
WGL9Odh4nuCLX9Pw0/pBWuJtCf9eWo9hG8eATfw1QXPZVTr73i+qVyTH7Vu+
D5ovb8XuLW+QDSeg9IUGkBwWwo0QH+ow1h1KFs2gcyqM0K44DjZJ/KKS3Y/J
tkWnkbH1XF3IXbLzrDhdl9NMfRL64FZPLKhezBIJPUKI3js5tvhlB+as3YbN
my+ARlkSnFPOxhXhUiTwTyEtTJgCaTQU/aYmQlGULDe4V0fUlThIaj0kwW3z
GDRX+w2Gwwvp15pwQWb8TPxOqwFsEnH5r30kZasPmZ8bQaSvPyRfZRvNDwfn
kiqZNVjvdRb//uKO2UIJTFU5jcHfH1DPY0fIqYh7xO/RWFoel0z3cqNYT/1b
2jVaiGlqfJbtnQTxDtthRIHM4f1VKAt7BpV1elCs/xKL43lc0zEKe38UgIxH
OFVQbsOz1dWC2+bXQBitxFbNTKHDejV4xyIDjhfmE/MNIrzU74BHD6ix/Qem
o6/ke5F6/we67Ukg2CXx2MCPHNxjo8b+8FbDri/6XItjEpyWVcS1WjaYVqMA
Wrqy3OyTKvTIaSP4/cWFC1r/HerS8knVng4y1ayG/HmUBcffi9GvzXGocLoA
e55cJvrxq7DMqEW0NqUUdPWHqNKRUBhsGhBlFgjgijAUGr8mkIYEKbzv3UtJ
ywbY8VkEiw7uxeeKd0nG3hAItjmLYr7aoNsoQqf2VHpgUSzqlClRh7bxqN7Z
RVMembKDK/NxetcJMm+7O6ew1o/UjvhF3e1JnMxlJ3pjzQIsyHcH42oTtjpM
gztgpwi63RpEbX4MTeIbc+G/4kRlYR1wZ4+fyKL7K3mX7QGPDULhh/ML5NX3
Q6p1C+Y3h8HW48XgNU6BWyCehgfrZ3C3YxWJlnUa3usooXMCWYXtwE9B+hot
JrbGjvs+zgXbf40mJj75mDZOmmn7v8cAK457OuoGJuW00Rllnxb0zvaFt9Wq
ePJ7lEhcx4bl2XzDb+YIWc+6oPSNGH1GfYji80y0mZoPYgPAxH3W0Yq6c5Cz
aDH0LcjFB+Z1EMWlUn7l3/h5Rjzcj5rP7f4dBw551pibYUVbE8O5tziJxjaL
sWXilxa4OQajbfkOWP+cYlTIM3hi8lrg5J5OrvS9oSW2BpSc3APTJhpi4K5f
pJxocm++5EBdbA54XdRhSfYIrs29xHeXBvfg2PgR3c3mWqaoM4cmaU76uiMG
+z6mBTm5VCO+ryK7UZJZdvuSZsd8VPLLRuP9l6mK2SZwfbWPmny8JTin/Uyw
ei6FpYo7wcl1icDiygZ4fvYUhsasRz1mxfm/y0ZFaznc2H0MPJe6g569CX5z
dIR98i9p8fkYkK0U5171TmfxXv2i8YvngueZMFz2QxyMyl9RraMmoHvzNFyO
iUba/hnq5BK5jBU8KJ0uhLvWJtCppANGsh3Qk6MAfCMtxks7xrnsSoXWLH2u
dVIFpP6cKBr0EuJkxy6BxGwn2mjiiWWT1eFy9gk4ofsY0zMUaK7835A8KQ6z
VQ7jlMY/17s8DtOtsuO4Un1GRr+sBc3N/rDafwpeGPyA8R3yZAP/Iwy/uEZs
cz6BkpgBCEUTOJ6TFEvvl4co40bUkNaFmnl1cKm5E208LlLL5SP+/jSdhe+9
ghH8PtrxcQdncWxY9Hb3CjgpZ4tdE+vh3vEbdGbvGVBumszOvYvFUmJEkzc8
xbFFR3DIUJMTn/GdzjVLh0MXprEIlRqy6EQisd/Nw8nBGmxTirHghu0EMHxV
hP+oZ9Pi+LminVldYJ8Sjp3jlwhUvlrg/pJNeCRSnqwMSAe3VCHIDU0lfOXl
wB+KEjX1zcFHa2WYz/id2BHahFJfAnDI+wXN4W3AII090NmWSWInlULC8Tc0
vWs0aT8TSvaqXILORapgRUJxTJ0s4WbqsOR5x8DpQh5GTtoKBVbuTM3iFW7X
2SAqOlWBH1J4yL27gWCng2OKedwRs4swJSSa8FzNYOntPNEK+f1k0TwBtguP
4cMPetiwNQ9MI7aAfbov5PXJs4iGpRBaGcT5befgRI4Z+CwTmRdlaqDddjd8
2+KHPb3pVEJlOVrwdUnXq5f0MG8e2hxQ5hK9JNidkrnsgvs2OO9ylNqNqoGp
eYFg2epLbW+6ieqDUgimdKPY9Kf4874AFy4soPUZdmheXArztytzFWNmo5O0
kYC3SwacjVbRSu4QHLJzIQ8izTAgdxxa+nzE84HvyKz2u9d7f/TT52MSsUBf
CmbMXG6u8rsMHOTEucuaEVS9VhMunFBC1ZYSfLZqLrNtjQGLqkzU5EsypcpZ
WJN6Akrsn+FPNiAaDldlr1XcYOWtlUTm7SR238gV2o9HwJdUSXaPiTCTP4cz
cLZmrU+TYGj/cwgsFmMaS7XZxn2d1LY7B04Jd8CCZDX2Nu4nJhbegPbTXnBJ
LBrMzf7Czwu+4Ev2HN0mjGh36ijm8PofckRZilWPE4qMHiShUOE9PV8WQaeb
KWDteCX2+SSPTHzrC1KFd9G36BtxLJOmhXti8M/CPrwy9gcmR7TTyjpNzq44
Fz4+umiuZ9JGawvEObEzlpArmY2zDs4HkbcG6XvyF3rp8MAseBCy3X9g1Rxt
iC8gsFhsKui8HM9yZimhWrY8Cz56G8zXZUAzhpGrbfEQfTuAGG4y4MSVz5PP
+SM/k+dKa6yWoL1OCDzwHyRzq57gyV0r8Im4Kludnw+HvMTxsHwf/nQJwvWv
zLgFhjlgejAT8lZXQ8t9VSYVNh7Sqlcwg7ABgeV+hET3JyQzyAENppVg5NM8
tJK8CSoqM+iSjZ9xi+tDEMZFgRP/N24ZYKg9fQneXrcZcyMrsHayKZfgt4F9
iBIzLxdNYX5aOpijkA6O+qNJyPoWkE5yFbSOasPbCWtxfrQkBIQWkuyOU/DV
zQgLE/tBfHY5RMuZ4akYHSpX3i6QUhaB6c43GDXoj5ERPBHukeCq5a5hSlwp
jvMohpydfLLkKEX3QTmWZabMRbxPhrYiC4jfliyQdY7EmPQ/xJRpwLKN1nDP
+yrIxMTDi1E3yfv52TRwsoiWq0tj/gYTOEczSdIzd7SQ2I5pY47SFP6/EGT1
mbzfrMRVBU2heM8bRa1F1B/60PaAPaemnY0z/ipBrvcAmDR9w+5r9mhuPpKl
yx5RNf/JuA9kwDXrXxKUvgXdtesFD7vz6P6+xSAlOZNF5TuSxL3GbMtACtYx
4NaEDtCXbh4YVd8meto2hxtQVeC+vEuFccvSYayMGlwbyeJNBh4oqleDufGq
LEO4nMzkzyFjhYfwXosUSDhGw5rdvzHcWhn8uAY4JgiCWzJDWPrYmul3fjcv
Xz2R2xU9Ea1P3iIBm9KhSrEK+kMO46fuz1T/6gGMPZqFdvyzNJV2i65eGstp
Lv6JcZWPSexda+qvZU0+hiqhjMlkCD3YhhOvG8MqPVnOcriR8IcmcBtvprPq
4izsnHAKH3wfoN4uFmTx0mrBpo+l2KnrBzkrlmITmjIlx4fgFFBOz29WZZ82
SrDETadAPmsI93e1VJQZPsbI6+5w/UE0Yb3JglZbbdg8v5a+P+SMNuLZqGuq
AokNiux/APtGkUI=
                "], CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIIiEFCUNAAxXB+
Y+sSuz/i7bb2ug/3bZtdY8e4eeu+C1mF+5qzmew3p6+ym7h+2+7tMYv2uiRH
7bP57LrvUKX7/gZt9X0bKqXtLrBO26uX8dZ2obaCff2pc/vubmu3M7UQ27Nx
7fF9c/59sV0zbbEdx/2fthtmztv3eNWhfWz7mPdZ5Wywm/a+3ZYhfLLtCm7T
/bd4LOxFHu3ax31J2T5Y0NiO68FcG9Fi6X3bdp3cd+f7RrsFqXr7Zthq7Huv
x2JXxbhgX2ih8H4974h9lc5Z+55rzbHmujzBfo3eKjtWx3g7Dx+e/YlprXbv
qzv2rZKauu/4igq7y1u377uRxrNvr9wSO/v00n1uPFvsPsVJ2OZuvrFPWdfS
jmeh8v457lz792gl71vY6m03+2javqszOu1za/v2nyrYb/vf5o6damWH7eyQ
PXbl9Xvs8hkK9537pL5PgnPVnp9Fq+yU1UL3Mwgy2r/bv8Zuf9MBOy52M3tl
thW2Bub77dbsyLXbqtayzzp2/145ZTb7X372dgsX3bAT9mPbd7Hq6T7eD6v2
eV21tHfJe2/Hx+VoP2Pnn31cv7fv+yYcuBcAjPTK5g==
                "], CompressedData["
1:eJxtj31Q03Ucx+dmbImbgpyBGwTUXRjVgcypG9/Pz93s6HhQhEVAXblx7gox
CUQOj2BtRCHjodgpeE1IHi0Tc8DJtt/nq2AcJIUcRRwgyYHyJDswuBMQCPu7
1937ffe6919vP+2pGB2Xw+GkCzYqRpOpTEvTZMW6PJfjmpSQPSnPR/+N8Dn/
oef8P/pO3j0MX4+E7hlwtE29iW4WPjWs9EF29AreVMYTbqCZ5XSHkYFBOeUr
NSTj2ATbFzeAv+q+YwOk02RZcpktdt9GZ67zqOsTC4Tqy+3jX1nRQ6jCgw0G
zHxShvvSpxyrcSLmbKQ7U+/DJ84lQq3jVeiIqsTxFh2MhaUAv/B9NDrSUPH4
Z3v06yFg/KCUbDXJ8HBeKZncC+h5VELv5AUxq8mlmBtrxENnNhHxUxupLHuG
lfE/QMLCTpQuXWZHo5oxtb0Htd8kwAlFEF1z7SKCsCbUuW5mUlOMZP5cH7Za
eVT0p5MIPrKBPMkOGp/PUdWuZf8uucZOnh7Ci9+L8etoE6gXkzHbe47ceDQL
hvogyGiUMwZigtXhXZBoKMOwjW+jm87D02FOKEddwuTHetJhyToUB+hofm0f
zNUOQhNeQ5x5B7ibLWQmpBnibwUy93mDGCBzkodJWmYxSw+miDjmkv0WzoTz
mTdCn2G4RwyWW6sxRl2CrbFq7PyrFpu5YVCB2cDFakWN9FM4Pv0t+NUEkpdy
/sBetYB5RayH0EExZUo9KeqHHB2iCnae+wB7Jr+gY+/FM/k+t7FlzB8kZXqM
+InD7Nzfji7aNpD4roLv6jIOLZkUWW4j2Bb7G8y32OFKvoKtE9rAnizE7X6B
NCdeBy8knsUm3nnU6wJo9XgJSTFPw8GWFTZb9Amcdj+JC6L9kK77GJzXPUlq
RA906eRMY68R/ORCqnHxgbXObgwIHoLhxwhWlRt5zfcEBt1IwAtdt3FX4RaI
fvAIhcdG2M8yHeTUzS9JiEyJy8xJstVwmHn5boNjLuKMI1H5I8xaVKwosoCU
TxdBUS2XXl1YZwsaBdR7nxl+6TyCh+pepSWSJtLPOwoqkRQHHxYAf2KNNFyY
xtykWshXvQtp9XkQ3HsAfvc6gldyRnE+QYt4jwt+d+xQ7Jyy2dgMLPISUK8m
LVTwgxnL3Q5QW2349ltXsarGDFG5H+IexRYK/xhpXFUdZPnLmB0rwcyOfhku
vljK9tcLSZHjACvdG4Uxu/tBWmdBZaE32+WUodzqhgOXzkHf/RF0czowsHsO
jOY66FjYTj1mxTBf3Yq2id30X0If00k=
                "], CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIIiEFCUNCAjuMe
Lrc72BJu1/zCyvbwQUl7B8bcvfdm/LMrVS2waV3fbLfdw8VmYd2iveKtfvsU
Ou3sVgl+3LdvebFdnVbY/vhlsvvV9M7ZCT7Msdtk77+vd+L7fX5CqfuamHv2
2TQes71xN8veYTOTvWiDrP3CuoJ90nZP973f37evd43O/obr9vusLsjY9yw+
aXsywdH2fVGz3cuWn/ssP2nsLxKP3Het88y+Bn9ZO/Yb0/etND2577Hru30t
x7tsXm7NtZuf9mbvx8zmfXMub7Xjrjy/V9vLbe/PtpfWzzeX2m3vm7sv70WG
naMWu12lirydUk7q/rSU5Xt3SwTa+ypP2mfkeMIm2fCk7UNuAbubTWl2k5gK
7OSXWe8799RrP+MPPrv/x+buc97JayfWLrXf6txyu/oNcvZrTl3ZGy/Zt2/S
CfN9OlIHbCcc2bNvta6crefOd/tOz55id1T6px2bNIs9h4Oz/c/KQpuj5Ufs
vrtU256tSdlbqtlnL1+na+djw2lfajhx/8oFPfuF95ze9+cel91tSYf9x9tF
9gvP27G3uPDivmNrMvbp3vizV+v1HBsA3eDRRA==
                "], CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSFIIiEFCSKABGe9m
rNr3va7PLnLXsn2rp4XZ6+Ra2nLHi+79Zy67T3z2Sru/MzL2H7g815a3ImAv
13f5fac32tlvbNO2VZ3OZndhyf69u08+s1vEamw33V/c+otl+T6VnHm2bKnB
dtPP/bNjt2jdN4Wn17ZsT4Xd2ZbifT+FFtvPCJ1iu5z34943Jc9s96d62F2T
19o3MT1rn8hW0f3TPzPsS5qoubuuMcWWQYHN3qzl1+7EE8x7y3432broVe+p
Y/DdbxF3xHbHLSVbJVZjW9Gyv3ayiY/2chU92Pe764Ndf//OfTOYltrOueVt
w3B3097dF5jsbxWeslt1v9f+fKPevgWmovY8jV/2rtkeZufMMsfqv4SBXfjP
WbYT6qfYMl+cse+6o8n+VJ8i24RFgXaaHlH7PaWr7SuOi9nPPSRt7y+/3Y5Z
9Izd630M+9eZMtquNnW3sXObZCcuXGHntW+P3eLmN/vYHu/d51G5YO+OCic7
FbEV++o2Lts9/9PqfdsMz9p5vplp++3eHls1m222u1+02D3OuW4nY6a5T+Pd
XztVBn7bsA2n9sw+d3avr8otG9k13XsBhgHI4w==
                "], CompressedData["
1:eJxNiWtIE1AYhtfENS0vSQuhvBUkiUm6MUR3vlNpGpqZWloJ4Waaom00FbMs
h5dJCgqBGopD0oLKaall4s53QrPCVvshWs4bzJVCNJjSH12QRj964Xl5LyEq
TXq+UCAQlIi3LF1ZfkKrVVZkiLZLnrJYGlW8fe7bYnv6T7p//M2jV6ZQOB9I
3RTupruNakxo9+a6YwFw0JaBpupFcPhTpl+LpE5JMLKhBrKUuIySiFL2scTJ
ys6aYOW2Hk8mHaDO0EvMsCuedfnaSWHaRaxTWaBnsYumaD2BFihB4qR0+lM0
fyNvhDrnOfL71mlQmQmddllwtFxDvdU++NloZfctg2BK3iTB8gC20uEHruUB
XM8+z5qWejDmux8P1A8r/MMX8NSO/dyy8ApnD3XDblcViuffxxqHm3BIb8b2
HHfeGjcDIXwT9kTIIa5eh6uPWqBx8R3UyHQY1v8FwzsVvEKYRUubz/C8r2by
rT8fuXoDx94+hZ+hkdQedZklVnixa4WTTFU4DnNSB1SpRHykXszXXk5AsDEL
bJkPIWhEwiWvm0FT+4yRqjHW56pmUmsB1XrLeO9GKm0ps5DKtmLmuBqJ614+
KEhuQJlzlRV1H0FiP0wh6QJ50WYjuTMJXF07QHJTJlHvW0M6PETwoeE5uPFe
MF7/AZvWaDI39QRnb1QyyHPjkqNK3JDfQcwUceoRRGNoPN37K4wOagwkJ83C
im72Qeq4Z2y4wYvea32ME/KdVGh+YIovO06zpTL6B4pNAE8=
                "], 
                RawArray["Real32",{{0., 0.}, {-0.29040566086769104`, 
                 0.037538956850767136`}, {
                 1.102798342704773, -0.7911755442619324}}]}, 
              "Version" -> {12.2, 0}, "ID" -> 1443557437972528300]], 
            MachineLearning`MLProcessor["MergeVectors", 
             Association[
             "Invertibility" -> "Perfect", "Missing" -> "Allowed", 
              "StructurePreserving" -> True, "Input" -> 
              Association[
               "(f5f6f7f8f9f10f20)" -> 
                Association["Weight" -> 7, "Type" -> "NumericalVector"], 
                "(f1f2f3f4f11f12f13f14f15f16f17f18f19f21)" -> 
                Association["Type" -> "NumericalVector", "Weight" -> 14]], 
              "Spans" -> {
                Span[1, 41], 
                Span[42, 55]}, "Wrappers" -> {Identity, Identity}, "Output" -> 
              Association[
               "((f5f6f7f8f9f10f20)(f1f2f3f4f11f12f13f14f15f16f17f18f19f21))" -> 
                Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+LbU1fEdt46aj9KU0YzgMEHutEAPIfZsA==
                   "], "Type" -> "NumericalVector"]], "Version" -> {12.2, 0}, 
              "ID" -> 5244572383990249557]], 
            MachineLearning`MLProcessor["Values", 
             Association[
             "Info" -> Association[
               "((f5f6f7f8f9f10f20)(f1f2f3f4f11f12f13f14f15f16f17f18f19f21))" -> 
                Association["Weight" -> CompressedData["
1:eJxTTMoPSmVkYGAwB+LbU1fEdt46aj9KU0YzgMEHutEAPIfZsA==
                   "], "Type" -> "NumericalVector"]], "Invertibility" -> 
              "Perfect", "StructurePreserving" -> False, "Missing" -> 
              "Allowed"]]}, "Invertibility" -> "Impossible", 
          "StructurePreserving" -> False, "Missing" -> "Allowed"]], 
       "Calibrator" -> 
       MachineLearning`CalibratorFunction["TemperatureScaling", 
         Association["Theta" -> 1.3939460816776243`]], "Method" -> 
       "DecisionTree", "PostProcessor" -> 
       MachineLearning`MLProcessor["Identity"], "Options" -> 
       Association[
        "DistributionSmoothing" -> 
         Association["Value" -> 1, "Options" -> Association[]], 
         "FeatureFraction" -> 
         Association["Value" -> 1, "Options" -> Association[]]]], 
     "TrainingInformation" -> 
     Association[
      "PanelCell" -> CellObject[68769], "TrainingFunction" -> Classify, 
       "EMIterations" -> Missing["KeyAbsent", "EMIterations"], 
       "ProcessorEntropyShift" -> 0, "PreprocessingTime" -> 
       0.3180334`6.954017725662748, "LossName" -> "MeanCrossEntropy", 
       "BestModelInformation" -> Dataset[
         Association[
         "MeanCrossEntropy" -> 
          Around[0.0344849400423992, 0.023469670341369604`], "Accuracy" -> 
          Around[0.9937361894055189, 0.02541299817322734], "EvaluationTime" -> 
          0.00010878574904830915`, "TestSize" -> 58, "ModelMemory" -> 59568, 
          "ModelUtility" -> 2.5464278592534675`, "TrainingSize" -> 234, 
          "TrainingTime" -> 0.03981071705534971, "TrainingMemory" -> 355152, 
          "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
            Around[0.0344849400423992, 0.01659556305059524]}, 
          "AccuracyHistory" -> {
            Around[0.9937361894055189, 0.017969703338570397`]}, 
          "Configuration" -> {
           "DecisionTree", "DistributionSmoothing" -> 1, "FeatureFraction" -> 
            1}, "FinalTrainingSize" -> 292], 
         TypeSystem`Struct[{
          "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
           "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
           "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory", 
           "AccuracyHistory", "Configuration", "FinalTrainingSize"}, {
          TypeSystem`AnyType, TypeSystem`AnyType, 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Real], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Atom[Integer], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Vector[TypeSystem`AnyType, 1], 
           TypeSystem`Tuple[{
             TypeSystem`Atom[String], TypeSystem`AnyType, 
             TypeSystem`AnyType}], 
           TypeSystem`Atom[Integer]}], 
         Association[]], "Configurations" -> Dataset[
         Association[
         Association[
           "Value" -> "LogisticRegression", "Options" -> 
            Association[
             "L1Regularization" -> Association["Value" -> 0], 
              "L2Regularization" -> Association["Value" -> 0.0001], 
              "OptimizationMethod" -> Association["Value" -> Automatic], 
              MaxIterations -> Association["Value" -> 30]]] -> 
          Association["Experiments" -> {
              Association[
              "MeanCrossEntropy" -> 
               Around[0.3896496711500608, 0.10599384596246139`], "Accuracy" -> 
               Around[0.8905272351903457, 0.027010880355545858`], 
               "EvaluationTime" -> 0.00007291641573349885, "TestSize" -> 282, 
               "ModelMemory" -> 35016, "ModelUtility" -> 0.1963468991588172, 
               "TrainingSize" -> 10, "TrainingTime" -> 0.07943282347242814, 
               "TrainingMemory" -> 132304, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.3896496711500608, 0.0749489672440988]}, 
               "AccuracyHistory" -> {
                 Around[0.8905272351903457, 0.01909957666522498]}], 
              Association[
              "MeanCrossEntropy" -> 
               Around[0.37654751966686784`, 0.13980376154075957`], "Accuracy" -> 
               Around[0.9185748478079111, 0.0259623231847476], 
               "EvaluationTime" -> 0.000057871142058183503`, "TestSize" -> 
               242, "ModelMemory" -> 48456, "ModelUtility" -> 
               0.2118959869919017, "TrainingSize" -> 50, "TrainingTime" -> 
               0.0630957344480193, "TrainingMemory" -> 191720, 
               "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.37654751966686784`, 0.09885618782085814]}, 
               "AccuracyHistory" -> {
                 Around[0.9185748478079111, 0.01835813477929175]}]}, 
            "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 0.000057871142058183503`, "MeanCrossEntropy" -> 
              Around[0.37654751966686784`, 0.13980376154075957`], 
              "ModelMemory" -> 48456, "TrainingMemory" -> 191720, 
              "TrainingTime" -> 0.26367236806064454`], "Index" -> 1], 
          Association[
           "Value" -> "NaiveBayes", "Options" -> 
            Association["SmoothingParameter" -> Association["Value" -> 0.2]]] -> 
          Association["Experiments" -> {
              Association[
              "MeanCrossEntropy" -> 
               Around[1.9964257626573056`, 0.49072031840785174`], "Accuracy" -> 
               Around[0.809706017644556, 0.03972423745063834], 
               "EvaluationTime" -> 0.0007550570274725627, "TestSize" -> 200, 
               "ModelMemory" -> 54320, "ModelUtility" -> -1.4325373671296227`,
                "TrainingSize" -> 10, "TrainingTime" -> 0.03981071705534971, 
               "TrainingMemory" -> 79152, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.9964257626573056`, 0.3469916648122137]}, 
               "AccuracyHistory" -> {
                 Around[0.809706017644556, 0.02808927767881098]}], 
              Association[
              "MeanCrossEntropy" -> 
               Around[1.5672056115068984`, 0.6094099238778635], "Accuracy" -> 
               Around[0.8379251007418386, 0.052984824309552314`], 
               "EvaluationTime" -> 0.0005011872336272722, "TestSize" -> 100, 
               "ModelMemory" -> 68656, "ModelUtility" -> -1.2173807516081303`,
                "TrainingSize" -> 50, "TrainingTime" -> 0.05011872336272722, 
               "TrainingMemory" -> 147552, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[1.5672056115068984`, 0.430917889696415]}, 
               "AccuracyHistory" -> {
                 Around[0.8379251007418386, 0.03746592856926227]}]}, 
            "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 0.0005011872336272722, "MeanCrossEntropy" -> 
              Around[1.5672056115068984`, 0.6094099238778635], "ModelMemory" -> 
              68656, "TrainingMemory" -> 147552, "TrainingTime" -> 
              0.1861573892745132], "Index" -> 2], 
          Association[
           "Value" -> "DecisionTree", "Options" -> 
            Association[
             "DistributionSmoothing" -> Association["Value" -> 1], 
              "FeatureFraction" -> Association["Value" -> 1]]] -> 
          Association["Experiments" -> {
              Association[
              "MeanCrossEntropy" -> 
               Around[0.130782391388455, 0.034565184863459074`], "Accuracy" -> 
               Around[0.963163060797362, 0.019003606667962972`], 
               "EvaluationTime" -> 0.0000632335433330976, "TestSize" -> 242, 
               "ModelMemory" -> 45232, "ModelUtility" -> 1.28952471324958, 
               "TrainingSize" -> 50, "TrainingTime" -> 0.03162277660168379, 
               "TrainingMemory" -> 142696, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.130782391388455, 0.024441276609918516`]}, 
               "AccuracyHistory" -> {
                 Around[0.963163060797362, 0.013437579141918508`]}], 
              Association[
              "MeanCrossEntropy" -> 
               Around[0.0344849400423992, 0.023469670341369604`], "Accuracy" -> 
               Around[0.9937361894055189, 0.02541299817322734], 
               "EvaluationTime" -> 0.00010878574904830915`, "TestSize" -> 58, 
               "ModelMemory" -> 59568, "ModelUtility" -> 2.5464278592534675`, 
               "TrainingSize" -> 234, "TrainingTime" -> 0.03981071705534971, 
               "TrainingMemory" -> 355152, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.0344849400423992, 0.01659556305059524]}, 
               "AccuracyHistory" -> {
                 Around[0.9937361894055189, 0.017969703338570397`]}], 
              Association[
              "MeanCrossEntropy" -> 
               Around[0.5834718754014929, 0.0685649571893801], "Accuracy" -> 
               Around[0.7401131640482883, 0.03723699076495959], 
               "EvaluationTime" -> 0.0000683146387528988, "TestSize" -> 282, 
               "ModelMemory" -> 31920, 
               "ModelUtility" -> -0.17765471235355024`, "TrainingSize" -> 10, 
               "TrainingTime" -> 0.03162277660168379, "TrainingMemory" -> 
               96112, "ExperimentCount" -> 1, "MeanCrossEntropyHistory" -> {
                 Around[0.5834718754014929, 0.04848274618037599]}, 
               "AccuracyHistory" -> {
                 Around[0.7401131640482883, 0.026330528680883772`]}]}, 
            "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 0.0000683146387528988, "MeanCrossEntropy" -> 
              Around[0.5834718754014929, 0.0685649571893801], "ModelMemory" -> 
              31920, "TrainingMemory" -> 96112, "TrainingTime" -> 
              0.12396128427860047`], "Index" -> 3], 
          Association[
           "Value" -> "RandomForest", "Options" -> 
            Association[
             "FeatureFraction" -> Association["Value" -> Automatic], 
              "LeafSize" -> Association["Value" -> Automatic], "TreeNumber" -> 
              Association["Value" -> Automatic], "DistributionSmoothing" -> 
              Association["Value" -> 0.5], "Implementation" -> 
              Association["Value" -> Automatic]]] -> 
          Association["Experiments" -> {
              Association[
              "MeanCrossEntropy" -> 
               Around[0.425879787554919, 0.032563483595444566`], "Accuracy" -> 
               Around[0.823176593354348, 0.03871104145148135], 
               "EvaluationTime" -> 0.00017900777537149963`, "TestSize" -> 200,
                "ModelMemory" -> 136784, "ModelUtility" -> 0.1452137823620342,
                "TrainingSize" -> 50, "TrainingTime" -> 0.05011872336272722, 
               "TrainingMemory" -> 224680, "ExperimentCount" -> 1, 
               "MeanCrossEntropyHistory" -> {
                 Around[0.425879787554919, 0.023025860069395748`]}, 
               "AccuracyHistory" -> {
                 Around[0.823176593354348, 0.027372839917135988`]}]}, 
            "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 0.00017900777537149963`, "MeanCrossEntropy" -> 
              Around[0.425879787554919, 0.032563483595444566`], "ModelMemory" -> 
              136784, "TrainingMemory" -> 224680, "TrainingTime" -> 
              0.1964653955818907], "Index" -> 4], 
          Association[
           "Value" -> "NearestNeighbors", "Options" -> 
            Association[
             "NeighborsNumber" -> Association["Value" -> Automatic], 
              "DistributionSmoothing" -> Association["Value" -> 0.5], 
              "NearestMethod" -> Association["Value" -> Automatic]]] -> 
          Association[
           "Experiments" -> {}, "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
              1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 5], 
          Association[
           "Value" -> "LogisticRegression", "Options" -> 
            Association[
             "L1Regularization" -> Association["Value" -> 0], 
              "L2Regularization" -> Association["Value" -> 1.*^6], 
              "OptimizationMethod" -> Association["Value" -> Automatic], 
              MaxIterations -> Association["Value" -> 30]]] -> 
          Association[
           "Experiments" -> {}, "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
              1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 6], 
          Association[
           "Value" -> "LogisticRegression", "Options" -> 
            Association[
             "L1Regularization" -> Association["Value" -> 0], 
              "L2Regularization" -> Association["Value" -> 1.], 
              "OptimizationMethod" -> Association["Value" -> Automatic], 
              MaxIterations -> Association["Value" -> 30]]] -> 
          Association[
           "Experiments" -> {}, "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
              1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 7], 
          Association[
           "Value" -> "LogisticRegression", "Options" -> 
            Association[
             "L1Regularization" -> Association["Value" -> 0], 
              "L2Regularization" -> Association["Value" -> 10000.], 
              "OptimizationMethod" -> Association["Value" -> Automatic], 
              MaxIterations -> Association["Value" -> 30]]] -> 
          Association[
           "Experiments" -> {}, "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
              1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 8], 
          Association[
           "Value" -> "LogisticRegression", "Options" -> 
            Association[
             "L1Regularization" -> Association["Value" -> 0], 
              "L2Regularization" -> Association["Value" -> 100.], 
              "OptimizationMethod" -> Association["Value" -> Automatic], 
              MaxIterations -> Association["Value" -> 30]]] -> 
          Association[
           "Experiments" -> {}, "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
              1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 9], 
          Association[
           "Value" -> "LogisticRegression", "Options" -> 
            Association[
             "L1Regularization" -> Association["Value" -> 0], 
              "L2Regularization" -> Association["Value" -> 100000.], 
              "OptimizationMethod" -> Association["Value" -> Automatic], 
              MaxIterations -> Association["Value" -> 30]]] -> 
          Association[
           "Experiments" -> {}, "PredictedPerformances" -> 
            Association[
             "EvaluationTime" -> 1, "MeanCrossEntropy" -> 1, "ModelMemory" -> 
              1, "TrainingMemory" -> 1, "TrainingTime" -> 1], "Index" -> 10]], 
         TypeSystem`Assoc[
          TypeSystem`Struct[{"Value", "Options"}, {
            TypeSystem`Atom[
             TypeSystem`Enumeration[
             "DecisionTree", "LogisticRegression", "NaiveBayes", 
              "NearestNeighbors", "RandomForest"]], 
            TypeSystem`Assoc[TypeSystem`AnyType, 
             TypeSystem`Struct[{"Value"}, {TypeSystem`AnyType}], 
             TypeSystem`AnyLength]}], 
          
          TypeSystem`Struct[{
           "Experiments", "PredictedPerformances", "Index"}, {
            TypeSystem`Vector[
             
             TypeSystem`Struct[{
              "MeanCrossEntropy", "Accuracy", "EvaluationTime", "TestSize", 
               "ModelMemory", "ModelUtility", "TrainingSize", "TrainingTime", 
               "TrainingMemory", "ExperimentCount", "MeanCrossEntropyHistory",
                "AccuracyHistory"}, {TypeSystem`AnyType, TypeSystem`AnyType, 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Real], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Atom[Integer], 
               TypeSystem`Vector[TypeSystem`AnyType, 1], 
               TypeSystem`Vector[TypeSystem`AnyType, 1]}], 
             TypeSystem`AnyLength], 
            
            TypeSystem`Struct[{
             "EvaluationTime", "MeanCrossEntropy", "ModelMemory", 
              "TrainingMemory", "TrainingTime"}, {
              TypeSystem`Atom[Real], TypeSystem`AnyType, 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Integer], 
              TypeSystem`Atom[Real]}], 
            TypeSystem`Atom[Integer]}], 10], 
         Association[]], "MaxTrainingSize" -> 292, 
       "PreprocessorEvaluationTime" -> 0.000012375, "PreprocessorMemory" -> 
       122720, "InputDimension" -> 21, "OutputDimension" -> 1, 
       "BaselineLogProbability" -> -0.46134494420706984`, "VariableBudget" -> 
       True, "CheckpointingInfo" -> Association["Checkpointing" -> False], 
       "UserStop" -> False, "NaturalStop" -> True, "AbortStop" -> False, 
       "LastReportingTime" -> 3.8262597634253782`17.33534943995126*^9, 
       "RoundPartitioning" -> Dataset[{
          Association[
          "TrainingSizes" -> 10, "TimeBudgets" -> 0.2479903182223158, 
           "ElapsedTimes" -> 0.6260638, "ExperimentCounts" -> 3], 
          Association[
          "TrainingSizes" -> 50, "TimeBudgets" -> 0.354271883174737, 
           "ElapsedTimes" -> 0.3830251, "ExperimentCounts" -> 4], 
          Association[
          "TrainingSizes" -> 234, "TimeBudgets" -> 0.5061026902496241, 
           "ElapsedTimes" -> 0.3485523, "ExperimentCounts" -> 1]}, 
         TypeSystem`Vector[
          
          TypeSystem`Struct[{
           "TrainingSizes", "TimeBudgets", "ElapsedTimes", 
            "ExperimentCounts"}, {
            TypeSystem`Atom[Integer], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Real], 
            TypeSystem`Atom[Integer]}], 3], 
         Association[]]], "AnomalyDetector" -> None, "Log" -> 
     Association["Example" -> MachineLearning`MLDataset[
         Association[
         "f1" -> Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {9.9}, "ID" -> 
            4525956837581453641], "f2" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {24.4}, "ID" -> 
            9166730886693948270], "f3" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
            990524332453264237], "f4" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {5.8}, "ID" -> 
            232448991201422582], "f5" -> 
          Association[
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {10.8}, "ID" -> 
            7754382459845470914], "f6" -> 
          Association[
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"NE"}, "ID" -> 
            329585617001349521], "f7" -> 
          Association[
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {28.}, "ID" -> 
            3243215497704270151], "f8" -> 
          Association[
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"SE"}, "ID" -> 
            6841301414025814389], "f9" -> 
          Association[
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"E"}, "ID" -> 
            2066190972337303861], "f10" -> 
          Association[
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {7.}, "ID" -> 
            2624762530792798180], "f11" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {7.}, "ID" -> 
            1753102248525463586], "f12" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {60.}, "ID" -> 
            2618579850348136583], "f13" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {38.}, "ID" -> 
            1361077257524445132], "f14" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1021.6}, "ID" -> 
            4650329820652959046], "f15" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1019.2}, "ID" -> 
            4260525428114561835], "f16" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {1.}, "ID" -> 
            6148215246205187820], "f17" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {4.}, "ID" -> 
            677977307689347416], "f18" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {16.2}, "ID" -> 
            4175785524861886403], "f19" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {22.7}, "ID" -> 
            990122695496599883], "f20" -> 
          Association[
           "Type" -> "Nominal", "Weight" -> 1, "Values" -> {"No"}, "ID" -> 
            4272969664753640397], "f21" -> 
          Association[
           "Type" -> "Numerical", "Weight" -> 1, "Values" -> {0.}, "ID" -> 
            1961685482141474880]], 
         Association[
         "ExampleNumber" -> 1, "ExampleWeights" -> 1, "LogDensityRatios" -> 0,
           "RawExample" -> False]], "TrainingTime" -> 2.3983675, 
       "MaxTrainingMemory" -> 972432, "DataMemory" -> 205840, 
       "FunctionMemory" -> 334048, "LanguageVersion" -> {12.2, 0}, "Date" -> 
       DateObject[{2021, 4, 1, 9, 56, 3.7243793`8.323628885163293}, "Instant",
          "Gregorian", 8.], "ProcessorCount" -> 4, "ProcessorType" -> 
       "x86-64", "OperatingSystem" -> "Windows", "SystemWordLength" -> 64, 
       "Evaluations" -> {}]]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "8.`", ",", "24.3`", ",", "0.`", ",", "3.4`", ",", "6.3`", 
      ",", "\<\"NW\"\>", ",", "30.`", ",", "\<\"SW\"\>", ",", "\<\"NW\"\>", 
      ",", "6.`", ",", "20.`", ",", "68.`", ",", "29.`", ",", "1019.7`", ",", 
      "1015.`", ",", "7.`", ",", "7.`", ",", "14.4`", ",", "23.6`", 
      ",", "\<\"No\"\>", ",", "3.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.`", ",", "26.9`", ",", "3.6`", ",", "4.4`", ",", "9.7`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"E\"\>", ",", "\<\"W\"\>", 
      ",", "4.`", ",", "17.`", ",", "80.`", ",", "36.`", ",", "1012.4`", ",", 
      "1008.4`", ",", "5.`", ",", "3.`", ",", "17.5`", ",", "25.7`", 
      ",", "\<\"Yes\"\>", ",", "3.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.7`", ",", "23.4`", ",", "3.6`", ",", "5.8`", ",", "3.3`", 
      ",", "\<\"NW\"\>", ",", "85.`", ",", "\<\"N\"\>", ",", "\<\"NNE\"\>", 
      ",", "6.`", ",", "6.`", ",", "82.`", ",", "69.`", ",", "1009.5`", ",", 
      "1007.2`", ",", "8.`", ",", "7.`", ",", "15.4`", ",", "20.2`", 
      ",", "\<\"Yes\"\>", ",", "39.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.3`", ",", "15.5`", ",", "39.8`", ",", "7.2`", ",", "9.1`", 
      ",", "\<\"NW\"\>", ",", "54.`", ",", "\<\"WNW\"\>", ",", "\<\"W\"\>", 
      ",", "30.`", ",", "24.`", ",", "62.`", ",", "56.`", ",", "1005.5`", ",",
       "1007.`", ",", "2.`", ",", "7.`", ",", "13.5`", ",", "14.1`", 
      ",", "\<\"Yes\"\>", ",", "2.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.6`", ",", "16.1`", ",", "2.8`", ",", "5.6`", ",", "10.6`", 
      ",", "\<\"SSE\"\>", ",", "50.`", ",", "\<\"SSE\"\>", ",", "\<\"ESE\"\>",
       ",", "20.`", ",", "28.`", ",", "68.`", ",", "49.`", ",", "1018.3`", 
      ",", "1018.5`", ",", "7.`", ",", "7.`", ",", "11.1`", ",", "15.4`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.2`", ",", "16.9`", ",", "0.`", ",", "5.8`", ",", "8.2`", 
      ",", "\<\"SE\"\>", ",", "44.`", ",", "\<\"SE\"\>", ",", "\<\"E\"\>", 
      ",", "20.`", ",", "24.`", ",", "70.`", ",", "57.`", ",", "1023.8`", ",",
       "1021.7`", ",", "7.`", ",", "5.`", ",", "10.9`", ",", "14.8`", 
      ",", "\<\"No\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.1`", ",", "18.2`", ",", "0.2`", ",", "4.2`", ",", "8.4`", 
      ",", "\<\"SE\"\>", ",", "43.`", ",", "\<\"SE\"\>", ",", "\<\"ESE\"\>", 
      ",", "19.`", ",", "26.`", ",", "63.`", ",", "47.`", ",", "1024.6`", ",",
       "1022.2`", ",", "4.`", ",", "6.`", ",", "12.4`", ",", "17.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.3`", ",", "17.`", ",", "0.`", ",", "5.6`", ",", "4.6`", 
      ",", "\<\"E\"\>", ",", "41.`", ",", "\<\"SE\"\>", ",", "\<\"E\"\>", ",",
       "11.`", ",", "24.`", ",", "65.`", ",", "57.`", ",", "1026.2`", ",", 
      "1024.2`", ",", "6.`", ",", "7.`", ",", "12.1`", ",", "15.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.8`", ",", "19.5`", ",", "0.`", ",", "4.`", ",", "4.1`", 
      ",", "\<\"S\"\>", ",", "48.`", ",", "\<\"E\"\>", ",", "\<\"ENE\"\>", 
      ",", "19.`", ",", "17.`", ",", "70.`", ",", "48.`", ",", "1026.1`", ",",
       "1022.7`", ",", "7.`", ",", "7.`", ",", "14.1`", ",", "18.9`", 
      ",", "\<\"No\"\>", ",", "16.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.4`", ",", "22.8`", ",", "16.2`", ",", "5.4`", ",", "7.7`", 
      ",", "\<\"E\"\>", ",", "31.`", ",", "\<\"S\"\>", ",", "\<\"ESE\"\>", 
      ",", "7.`", ",", "6.`", ",", "82.`", ",", "32.`", ",", "1024.1`", ",", 
      "1020.7`", ",", "7.`", ",", "1.`", ",", "13.3`", ",", "21.7`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.1`", ",", "25.2`", ",", "0.`", ",", "4.2`", ",", "11.9`", 
      ",", "\<\"N\"\>", ",", "30.`", ",", "\<\"SE\"\>", ",", "\<\"NW\"\>", 
      ",", "6.`", ",", "9.`", ",", "74.`", ",", "34.`", ",", "1024.4`", ",", 
      "1021.1`", ",", "1.`", ",", "2.`", ",", "14.6`", ",", "24.`", 
      ",", "\<\"No\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.5`", ",", "27.3`", ",", "0.2`", ",", "7.2`", ",", "12.5`", 
      ",", "\<\"E\"\>", ",", "41.`", ",", "\<\"E\"\>", ",", "\<\"NW\"\>", ",",
       "2.`", ",", "15.`", ",", "54.`", ",", "35.`", ",", "1023.8`", ",", 
      "1019.9`", ",", "0.`", ",", "3.`", ",", "16.8`", ",", "26.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.1`", ",", "27.9`", ",", "0.`", ",", "7.2`", ",", "13.`", 
      ",", "\<\"WNW\"\>", ",", "30.`", ",", "\<\"S\"\>", ",", "\<\"NW\"\>", 
      ",", "6.`", ",", "7.`", ",", "62.`", ",", "29.`", ",", "1022.`", ",", 
      "1017.1`", ",", "0.`", ",", "1.`", ",", "17.`", ",", "27.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.1`", ",", "30.9`", ",", "0.`", ",", "6.2`", ",", "12.4`", 
      ",", "\<\"NW\"\>", ",", "44.`", ",", "\<\"WNW\"\>", ",", "\<\"W\"\>", 
      ",", "7.`", ",", "20.`", ",", "67.`", ",", "20.`", ",", "1017.3`", ",", 
      "1013.1`", ",", "1.`", ",", "4.`", ",", "19.7`", ",", "30.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.1`", ",", "31.2`", ",", "0.`", ",", "8.8`", ",", "13.1`", 
      ",", "\<\"NW\"\>", ",", "41.`", ",", "\<\"S\"\>", ",", "\<\"W\"\>", ",",
       "6.`", ",", "20.`", ",", "45.`", ",", "16.`", ",", "1018.2`", ",", 
      "1013.7`", ",", "0.`", ",", "1.`", ",", "18.7`", ",", "30.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.4`", ",", "32.1`", ",", "0.`", ",", "8.4`", ",", "11.1`", 
      ",", "\<\"E\"\>", ",", "46.`", ",", "\<\"SE\"\>", ",", "\<\"WSW\"\>", 
      ",", "7.`", ",", "9.`", ",", "70.`", ",", "22.`", ",", "1017.9`", ",", 
      "1012.8`", ",", "0.`", ",", "3.`", ",", "19.1`", ",", "30.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.8`", ",", "31.2`", ",", "0.`", ",", "7.2`", ",", "8.4`", 
      ",", "\<\"ESE\"\>", ",", "44.`", ",", "\<\"WSW\"\>", ",", "\<\"W\"\>", 
      ",", "6.`", ",", "19.`", ",", "72.`", ",", "23.`", ",", "1014.4`", ",", 
      "1009.8`", ",", "7.`", ",", "6.`", ",", "20.2`", ",", "29.8`", 
      ",", "\<\"No\"\>", ",", "1.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.7`", ",", "30.`", ",", "1.2`", ",", "7.2`", ",", "10.1`", 
      ",", "\<\"S\"\>", ",", "52.`", ",", "\<\"SW\"\>", ",", "\<\"NE\"\>", 
      ",", "6.`", ",", "11.`", ",", "59.`", ",", "26.`", ",", "1016.4`", ",", 
      "1013.`", ",", "1.`", ",", "5.`", ",", "20.1`", ",", "28.6`", 
      ",", "\<\"Yes\"\>", ",", "0.6`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.4`", ",", "32.3`", ",", "0.6`", ",", "7.4`", ",", "13.`", 
      ",", "\<\"E\"\>", ",", "39.`", ",", "\<\"NNE\"\>", ",", "\<\"W\"\>", 
      ",", "4.`", ",", "17.`", ",", "60.`", ",", "25.`", ",", "1017.1`", ",", 
      "1013.3`", ",", "1.`", ",", "3.`", ",", "20.2`", ",", "31.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.6`", ",", "33.4`", ",", "0.`", ",", "8.`", ",", "10.4`", 
      ",", "\<\"NE\"\>", ",", "33.`", ",", "\<\"NNW\"\>", ",", "\<\"NNW\"\>", 
      ",", "2.`", ",", "13.`", ",", "61.`", ",", "27.`", ",", "1018.5`", ",", 
      "1013.7`", ",", "0.`", ",", "1.`", ",", "22.8`", ",", "32.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.3`", ",", "33.4`", ",", "0.`", ",", "8.8`", ",", "9.5`", 
      ",", "\<\"WNW\"\>", ",", "59.`", ",", "\<\"N\"\>", ",", "\<\"NW\"\>", 
      ",", "2.`", ",", "31.`", ",", "60.`", ",", "26.`", ",", "1012.4`", ",", 
      "1006.5`", ",", "1.`", ",", "5.`", ",", "22.2`", ",", "32.8`", 
      ",", "\<\"No\"\>", ",", "0.4`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.4`", ",", "19.4`", ",", "0.4`", ",", "9.2`", ",", "0.`", 
      ",", "\<\"E\"\>", ",", "26.`", ",", "\<\"ENE\"\>", ",", "\<\"E\"\>", 
      ",", "6.`", ",", "11.`", ",", "88.`", ",", "72.`", ",", "1010.7`", ",", 
      "1008.9`", ",", "8.`", ",", "8.`", ",", "16.5`", ",", "18.3`", 
      ",", "\<\"No\"\>", ",", "25.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.8`", ",", "18.5`", ",", "25.8`", ",", "2.8`", ",", "0.6`", 
      ",", "\<\"ESE\"\>", ",", "28.`", ",", "\<\"S\"\>", ",", "\<\"SE\"\>", 
      ",", "13.`", ",", "13.`", ",", "91.`", ",", "79.`", ",", "1014.`", ",", 
      "1014.9`", ",", "8.`", ",", "8.`", ",", "14.`", ",", "16.8`", 
      ",", "\<\"Yes\"\>", ",", "0.4`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.`", ",", "24.3`", ",", "0.4`", ",", "1.2`", ",", "7.5`", 
      ",", "\<\"NNE\"\>", ",", "26.`", ",", "\<\"WSW\"\>", ",", "\<\"NE\"\>", 
      ",", "6.`", ",", "9.`", ",", "74.`", ",", "57.`", ",", "1020.7`", ",", 
      "1019.2`", ",", "7.`", ",", "5.`", ",", "17.8`", ",", "22.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.4`", ",", "28.4`", ",", "0.`", ",", "4.4`", ",", "8.1`", 
      ",", "\<\"ENE\"\>", ",", "33.`", ",", "\<\"SSE\"\>", ",", "\<\"NE\"\>", 
      ",", "9.`", ",", "15.`", ",", "85.`", ",", "31.`", ",", "1022.4`", ",", 
      "1018.6`", ",", "8.`", ",", "2.`", ",", "16.8`", ",", "27.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.6`", ",", "26.9`", ",", "0.`", ",", "6.8`", ",", "8.9`", 
      ",", "\<\"E\"\>", ",", "41.`", ",", "\<\"E\"\>", ",", "\<\"E\"\>", ",", 
      "6.`", ",", "22.`", ",", "65.`", ",", "48.`", ",", "1019.7`", ",", 
      "1016.5`", ",", "2.`", ",", "4.`", ",", "19.8`", ",", "25.1`", 
      ",", "\<\"No\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.3`", ",", "22.2`", ",", "0.2`", ",", "6.6`", ",", "2.3`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"E\"\>", ",", "\<\"E\"\>", 
      ",", "20.`", ",", "17.`", ",", "70.`", ",", "55.`", ",", "1021.`", ",", 
      "1018.6`", ",", "7.`", ",", "7.`", ",", "16.5`", ",", "21.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.9`", ",", "28.`", ",", "0.`", ",", "4.4`", ",", "10.7`", 
      ",", "\<\"S\"\>", ",", "52.`", ",", "\<\"S\"\>", ",", "\<\"NNE\"\>", 
      ",", "6.`", ",", "11.`", ",", "61.`", ",", "31.`", ",", "1019.2`", ",", 
      "1014.8`", ",", "5.`", ",", "7.`", ",", "18.8`", ",", "26.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.1`", ",", "24.3`", ",", "0.`", ",", "7.`", ",", "0.4`", 
      ",", "\<\"SE\"\>", ",", "39.`", ",", "\<\"SE\"\>", ",", "\<\"SE\"\>", 
      ",", "7.`", ",", "17.`", ",", "69.`", ",", "80.`", ",", "1019.`", ",", 
      "1017.1`", ",", "7.`", ",", "7.`", ",", "18.9`", ",", "19.7`", 
      ",", "\<\"No\"\>", ",", "0.4`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.6`", ",", "24.1`", ",", "0.4`", ",", "2.6`", ",", "0.5`", 
      ",", "\<\"NNW\"\>", ",", "30.`", ",", "\<\"SSW\"\>", ",", "\<\"S\"\>", 
      ",", "6.`", ",", "6.`", ",", "83.`", ",", "49.`", ",", "1017.2`", ",", 
      "1013.3`", ",", "8.`", ",", "7.`", ",", "17.3`", ",", "23.2`", 
      ",", "\<\"No\"\>", ",", "22.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.1`", ",", "20.4`", ",", "22.6`", ",", "2.4`", ",", "0.2`", 
      ",", "\<\"SSE\"\>", ",", "41.`", ",", "\<\"E\"\>", ",", "\<\"S\"\>", 
      ",", "6.`", ",", "20.`", ",", "82.`", ",", "90.`", ",", "1015.`", ",", 
      "1014.1`", ",", "8.`", ",", "8.`", ",", "17.`", ",", "16.3`", 
      ",", "\<\"Yes\"\>", ",", "4.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.6`", ",", "26.3`", ",", "4.2`", ",", "1.6`", ",", "12.`", 
      ",", "\<\"NNE\"\>", ",", "41.`", ",", "\<\"E\"\>", ",", "\<\"SW\"\>", 
      ",", "6.`", ",", "9.`", ",", "66.`", ",", "46.`", ",", "1013.9`", ",", 
      "1009.5`", ",", "2.`", ",", "2.`", ",", "16.7`", ",", "25.2`", 
      ",", "\<\"Yes\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.6`", ",", "24.2`", ",", "0.2`", ",", "6.6`", ",", "4.7`", 
      ",", "\<\"NW\"\>", ",", "50.`", ",", "\<\"WNW\"\>", ",", "\<\"NW\"\>", 
      ",", "13.`", ",", "35.`", ",", "72.`", ",", "60.`", ",", "1007.9`", ",",
       "1004.6`", ",", "7.`", ",", "7.`", ",", "20.5`", ",", "19.9`", 
      ",", "\<\"No\"\>", ",", "6.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.3`", ",", "26.5`", ",", "6.6`", ",", "3.8`", ",", "11.8`", 
      ",", "\<\"NW\"\>", ",", "50.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "20.`", ",", "26.`", ",", "74.`", ",", "40.`", ",", "1007.3`", ",",
       "1006.3`", ",", "5.`", ",", "2.`", ",", "18.8`", ",", "25.1`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.5`", ",", "21.8`", ",", "0.`", ",", "8.4`", ",", "9.8`", 
      ",", "\<\"ENE\"\>", ",", "43.`", ",", "\<\"ESE\"\>", ",", "\<\"E\"\>", 
      ",", "11.`", ",", "30.`", ",", "69.`", ",", "63.`", ",", "1015.`", ",", 
      "1015.3`", ",", "7.`", ",", "1.`", ",", "18.6`", ",", "20.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.3`", ",", "26.8`", ",", "0.`", ",", "6.`", ",", "6.3`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"ESE\"\>", ",", "\<\"ESE\"\>",
       ",", "13.`", ",", "9.`", ",", "78.`", ",", "54.`", ",", "1018.8`", ",",
       "1016.1`", ",", "8.`", ",", "7.`", ",", "18.6`", ",", "24.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17.2`", ",", "25.8`", ",", "0.`", ",", "4.2`", ",", "8.8`", 
      ",", "\<\"SW\"\>", ",", "41.`", ",", "\<\"NW\"\>", ",", "\<\"N\"\>", 
      ",", "6.`", ",", "6.`", ",", "70.`", ",", "74.`", ",", "1014.5`", ",", 
      "1011.5`", ",", "6.`", ",", "7.`", ",", "21.5`", ",", "22.6`", 
      ",", "\<\"No\"\>", ",", "4.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.5`", ",", "28.2`", ",", "4.`", ",", "4.2`", ",", "8.8`", 
      ",", "\<\"NE\"\>", ",", "39.`", ",", "\<\"E\"\>", ",", "\<\"N\"\>", ",",
       "7.`", ",", "13.`", ",", "76.`", ",", "42.`", ",", "1014.8`", ",", 
      "1011.4`", ",", "8.`", ",", "1.`", ",", "18.`", ",", "26.3`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.`", ",", "29.4`", ",", "0.`", ",", "6.6`", ",", "11.1`", 
      ",", "\<\"NW\"\>", ",", "43.`", ",", "\<\"N\"\>", ",", "\<\"W\"\>", ",",
       "9.`", ",", "24.`", ",", "78.`", ",", "24.`", ",", "1010.8`", ",", 
      "1008.5`", ",", "7.`", ",", "7.`", ",", "20.6`", ",", "28.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.9`", ",", "24.8`", ",", "0.`", ",", "10.4`", ",", "10.`", 
      ",", "\<\"NNW\"\>", ",", "35.`", ",", "\<\"NNE\"\>", ",", "\<\"WNW\"\>",
       ",", "11.`", ",", "6.`", ",", "58.`", ",", "37.`", ",", "1011.7`", ",",
       "1010.4`", ",", "7.`", ",", "7.`", ",", "19.3`", ",", "22.9`", 
      ",", "\<\"No\"\>", ",", "0.6`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.8`", ",", "18.5`", ",", "0.6`", ",", "4.8`", ",", "2.3`", 
      ",", "\<\"ENE\"\>", ",", "35.`", ",", "\<\"ESE\"\>", ",", "\<\"E\"\>", 
      ",", "9.`", ",", "15.`", ",", "60.`", ",", "63.`", ",", "1018.`", ",", 
      "1017.4`", ",", "8.`", ",", "6.`", ",", "13.8`", ",", "16.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.7`", ",", "21.5`", ",", "0.`", ",", "4.2`", ",", "7.3`", 
      ",", "\<\"ENE\"\>", ",", "41.`", ",", "\<\"ESE\"\>", ",", "\<\"E\"\>", 
      ",", "15.`", ",", "24.`", ",", "66.`", ",", "51.`", ",", "1021.1`", ",",
       "1019.6`", ",", "7.`", ",", "5.`", ",", "15.7`", ",", "19.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.6`", ",", "20.3`", ",", "0.`", ",", "5.`", ",", "3.6`", 
      ",", "\<\"SE\"\>", ",", "39.`", ",", "\<\"ESE\"\>", ",", "\<\"E\"\>", 
      ",", "22.`", ",", "20.`", ",", "70.`", ",", "49.`", ",", "1021.9`", ",",
       "1019.3`", ",", "7.`", ",", "7.`", ",", "15.8`", ",", "19.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.9`", ",", "27.1`", ",", "0.`", ",", "4.4`", ",", "12.7`", 
      ",", "\<\"E\"\>", ",", "35.`", ",", "\<\"NNW\"\>", ",", "\<\"N\"\>", 
      ",", "6.`", ",", "11.`", ",", "63.`", ",", "37.`", ",", "1018.1`", ",", 
      "1012.5`", ",", "1.`", ",", "2.`", ",", "15.8`", ",", "25.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.1`", ",", "29.9`", ",", "0.`", ",", "6.8`", ",", "8.8`", 
      ",", "\<\"E\"\>", ",", "41.`", ",", "\<\"SE\"\>", ",", "\<\"WNW\"\>", 
      ",", "2.`", ",", "13.`", ",", "63.`", ",", "36.`", ",", "1012.6`", ",", 
      "1010.2`", ",", "1.`", ",", "8.`", ",", "17.4`", ",", "29.1`", 
      ",", "\<\"No\"\>", ",", "5.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.5`", ",", "21.1`", ",", "5.4`", ",", "6.4`", ",", "0.9`", 
      ",", "\<\"S\"\>", ",", "31.`", ",", "\<\"SSE\"\>", ",", "\<\"NE\"\>", 
      ",", "6.`", ",", "7.`", ",", "93.`", ",", "86.`", ",", "1010.1`", ",", 
      "1008.6`", ",", "8.`", ",", "8.`", ",", "16.6`", ",", "20.`", 
      ",", "\<\"Yes\"\>", ",", "1.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.8`", ",", "21.7`", ",", "1.4`", ",", "2.8`", ",", "10.6`", 
      ",", "\<\"ESE\"\>", ",", "48.`", ",", "\<\"SSE\"\>", ",", "\<\"ESE\"\>",
       ",", "13.`", ",", "20.`", ",", "59.`", ",", "40.`", ",", "1017.6`", 
      ",", "1016.8`", ",", "1.`", ",", "4.`", ",", "15.3`", ",", "20.8`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.5`", ",", "20.9`", ",", "0.`", ",", "6.6`", ",", "8.7`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"SE\"\>", ",", "\<\"E\"\>", 
      ",", "13.`", ",", "20.`", ",", "61.`", ",", "43.`", ",", "1020.6`", ",",
       "1018.3`", ",", "6.`", ",", "7.`", ",", "15.3`", ",", "19.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.8`", ",", "21.`", ",", "0.`", ",", "6.4`", ",", "0.8`", 
      ",", "\<\"NE\"\>", ",", "22.`", ",", "\<\"NE\"\>", ",", "\<\"ENE\"\>", 
      ",", "7.`", ",", "6.`", ",", "72.`", ",", "54.`", ",", "1018.`", ",", 
      "1015.6`", ",", "8.`", ",", "8.`", ",", "16.1`", ",", "20.`", 
      ",", "\<\"No\"\>", ",", "3.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.6`", ",", "23.1`", ",", "3.4`", ",", "1.6`", ",", "2.3`", 
      ",", "\<\"NNW\"\>", ",", "30.`", ",", "\<\"N\"\>", ",", "\<\"NW\"\>", 
      ",", "4.`", ",", "13.`", ",", "97.`", ",", "74.`", ",", "1015.8`", ",", 
      "1014.1`", ",", "8.`", ",", "7.`", ",", "15.3`", ",", "20.4`", 
      ",", "\<\"Yes\"\>", ",", "6.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.8`", ",", "29.5`", ",", "6.4`", ",", "1.8`", ",", "8.1`", 
      ",", "\<\"N\"\>", ",", "41.`", ",", "\<\"NW\"\>", ",", "\<\"NW\"\>", 
      ",", "6.`", ",", "22.`", ",", "81.`", ",", "48.`", ",", "1012.9`", ",", 
      "1008.3`", ",", "2.`", ",", "7.`", ",", "21.`", ",", "28.2`", 
      ",", "\<\"Yes\"\>", ",", "11.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "19.9`", ",", "22.`", ",", "11.`", ",", "4.4`", ",", "5.9`", 
      ",", "\<\"NNW\"\>", ",", "76.`", ",", "\<\"N\"\>", ",", "\<\"WNW\"\>", 
      ",", "41.`", ",", "30.`", ",", "92.`", ",", "62.`", ",", "996.5`", ",", 
      "996.8`", ",", "8.`", ",", "3.`", ",", "20.6`", ",", "19.6`", 
      ",", "\<\"Yes\"\>", ",", "17.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.2`", ",", "20.4`", ",", "17.4`", ",", "7.8`", ",", "10.2`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"N\"\>", ",", "\<\"N\"\>", 
      ",", "9.`", ",", "20.`", ",", "59.`", ",", "49.`", ",", "1009.5`", ",", 
      "1009.1`", ",", "1.`", ",", "7.`", ",", "14.9`", ",", "18.8`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.4`", ",", "24.4`", ",", "0.`", ",", "6.2`", ",", "12.1`", 
      ",", "\<\"NW\"\>", ",", "44.`", ",", "\<\"NNW\"\>", ",", "\<\"WNW\"\>", 
      ",", "7.`", ",", "13.`", ",", "69.`", ",", "43.`", ",", "1012.8`", ",", 
      "1009.7`", ",", "6.`", ",", "4.`", ",", "15.`", ",", "22.5`", 
      ",", "\<\"No\"\>", ",", "3.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.3`", ",", "21.7`", ",", "3.4`", ",", "8.2`", ",", "5.6`", 
      ",", "\<\"E\"\>", ",", "41.`", ",", "\<\"SE\"\>", ",", "\<\"NE\"\>", 
      ",", "11.`", ",", "11.`", ",", "67.`", ",", "52.`", ",", "1020.4`", ",",
       "1019.1`", ",", "8.`", ",", "3.`", ",", "12.4`", ",", "21.`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.8`", ",", "26.3`", ",", "0.`", ",", "5.2`", ",", "13.`", 
      ",", "\<\"NNW\"\>", ",", "41.`", ",", "\<\"W\"\>", ",", "\<\"NNW\"\>", 
      ",", "6.`", ",", "19.`", ",", "63.`", ",", "35.`", ",", "1023.2`", ",", 
      "1018.`", ",", "1.`", ",", "1.`", ",", "15.3`", ",", "23.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.3`", ",", "26.7`", ",", "0.`", ",", "7.2`", ",", "7.1`", 
      ",", "\<\"NNW\"\>", ",", "65.`", ",", "\<\"N\"\>", ",", "\<\"NNW\"\>", 
      ",", "7.`", ",", "48.`", ",", "68.`", ",", "64.`", ",", "1017.3`", ",", 
      "1014.3`", ",", "7.`", ",", "7.`", ",", "19.8`", ",", "19.`", 
      ",", "\<\"No\"\>", ",", "14.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.1`", ",", "28.3`", ",", "14.4`", ",", "8.8`", ",", "13.2`", 
      ",", "\<\"NNW\"\>", ",", "28.`", ",", "\<\"NNW\"\>", ",", "\<\"NW\"\>", 
      ",", "6.`", ",", "13.`", ",", "73.`", ",", "44.`", ",", "1016.8`", ",", 
      "1013.4`", ",", "1.`", ",", "5.`", ",", "18.3`", ",", "27.4`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.4`", ",", "31.6`", ",", "0.`", ",", "6.6`", ",", "13.6`", 
      ",", "\<\"NNW\"\>", ",", "30.`", ",", "\<\"NW\"\>", ",", "\<\"N\"\>", 
      ",", "6.`", ",", "7.`", ",", "65.`", ",", "30.`", ",", "1017.1`", ",", 
      "1014.2`", ",", "0.`", ",", "2.`", ",", "21.5`", ",", "30.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.4`", ",", "35.`", ",", "0.`", ",", "9.6`", ",", "13.`", 
      ",", "\<\"E\"\>", ",", "39.`", ",", "\<\"SSW\"\>", ",", "\<\"ESE\"\>", 
      ",", "6.`", ",", "22.`", ",", "55.`", ",", "18.`", ",", "1017.4`", ",", 
      "1015.`", ",", "1.`", ",", "1.`", ",", "23.4`", ",", "34.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.8`", ",", "33.5`", ",", "0.`", ",", "11.4`", ",", "13.6`", 
      ",", "\<\"NE\"\>", ",", "31.`", ",", "\<\"SSE\"\>", ",", "\<\"NE\"\>", 
      ",", "7.`", ",", "9.`", ",", "44.`", ",", "20.`", ",", "1019.2`", ",", 
      "1015.6`", ",", "0.`", ",", "1.`", ",", "21.9`", ",", "32.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.6`", ",", "34.2`", ",", "0.`", ",", "8.8`", ",", "12.8`", 
      ",", "\<\"NNE\"\>", ",", "35.`", ",", "\<\"ESE\"\>", ",", "\<\"W\"\>", 
      ",", "2.`", ",", "11.`", ",", "50.`", ",", "20.`", ",", "1015.8`", ",", 
      "1011.6`", ",", "7.`", ",", "6.`", ",", "21.9`", ",", "31.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.3`", ",", "35.`", ",", "0.`", ",", "7.6`", ",", "10.5`", 
      ",", "\<\"ESE\"\>", ",", "41.`", ",", "\<\"ESE\"\>", ",", "\<\"WSW\"\>",
       ",", "2.`", ",", "9.`", ",", "43.`", ",", "14.`", ",", "1012.6`", ",", 
      "1008.7`", ",", "0.`", ",", "1.`", ",", "23.`", ",", "33.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.9`", ",", "23.4`", ",", "0.`", ",", "12.6`", ",", "2.2`", 
      ",", "\<\"ESE\"\>", ",", "50.`", ",", "\<\"ESE\"\>", ",", "\<\"ESE\"\>",
       ",", "20.`", ",", "24.`", ",", "69.`", ",", "55.`", ",", "1016.8`", 
      ",", "1016.3`", ",", "8.`", ",", "7.`", ",", "19.2`", ",", "22.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.7`", ",", "25.3`", ",", "0.`", ",", "6.2`", ",", "12.5`", 
      ",", "\<\"ESE\"\>", ",", "46.`", ",", "\<\"ESE\"\>", ",", "\<\"ESE\"\>",
       ",", "24.`", ",", "26.`", ",", "56.`", ",", "45.`", ",", "1016.2`", 
      ",", "1013.`", ",", "6.`", ",", "7.`", ",", "20.3`", ",", "23.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.1`", ",", "27.5`", ",", "0.`", ",", "7.4`", ",", "11.7`", 
      ",", "\<\"NE\"\>", ",", "35.`", ",", "\<\"SSE\"\>", ",", "\<\"E\"\>", 
      ",", "7.`", ",", "15.`", ",", "69.`", ",", "40.`", ",", "1011.8`", ",", 
      "1007.4`", ",", "7.`", ",", "2.`", ",", "18.6`", ",", "26.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.3`", ",", "34.1`", ",", "0.`", ",", "6.6`", ",", "10.5`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"W\"\>", ",", "\<\"NNW\"\>", 
      ",", "6.`", ",", "19.`", ",", "77.`", ",", "34.`", ",", "1006.6`", ",", 
      "1003.3`", ",", "1.`", ",", "1.`", ",", "18.9`", ",", "31.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.5`", ",", "33.9`", ",", "0.`", ",", "9.`", ",", "12.6`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"E\"\>", ",", "\<\"NW\"\>", 
      ",", "11.`", ",", "11.`", ",", "60.`", ",", "36.`", ",", "1012.3`", ",",
       "1009.5`", ",", "1.`", ",", "1.`", ",", "20.8`", ",", "31.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.5`", ",", "30.3`", ",", "0.`", ",", "10.`", ",", "8.1`", 
      ",", "\<\"E\"\>", ",", "46.`", ",", "\<\"E\"\>", ",", "\<\"N\"\>", ",", 
      "7.`", ",", "9.`", ",", "77.`", ",", "44.`", ",", "1015.7`", ",", 
      "1013.4`", ",", "7.`", ",", "1.`", ",", "18.1`", ",", "28.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17.5`", ",", "29.9`", ",", "0.`", ",", "6.6`", ",", "8.8`", 
      ",", "\<\"E\"\>", ",", "43.`", ",", "\<\"E\"\>", ",", "\<\"ENE\"\>", 
      ",", "13.`", ",", "11.`", ",", "74.`", ",", "45.`", ",", "1018.5`", ",",
       "1015.9`", ",", "8.`", ",", "1.`", ",", "19.3`", ",", "27.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.7`", ",", "34.2`", ",", "0.`", ",", "6.6`", ",", "12.8`", 
      ",", "\<\"NE\"\>", ",", "33.`", ",", "\<\"WNW\"\>", ",", "\<\"NW\"\>", 
      ",", "6.`", ",", "11.`", ",", "64.`", ",", "25.`", ",", "1017.8`", ",", 
      "1013.3`", ",", "1.`", ",", "1.`", ",", "21.3`", ",", "32.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17.5`", ",", "35.8`", ",", "0.`", ",", "9.4`", ",", "13.3`", 
      ",", "\<\"SSE\"\>", ",", "57.`", ",", "\<\"NNW\"\>", ",", "\<\"NW\"\>", 
      ",", "6.`", ",", "19.`", ",", "56.`", ",", "24.`", ",", "1011.8`", ",", 
      "1006.5`", ",", "0.`", ",", "1.`", ",", "24.7`", ",", "34.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "20.9`", ",", "35.7`", ",", "0.`", ",", "13.8`", ",", "6.9`", 
      ",", "\<\"SW\"\>", ",", "50.`", ",", "\<\"E\"\>", ",", "\<\"WNW\"\>", 
      ",", "4.`", ",", "17.`", ",", "61.`", ",", "28.`", ",", "1007.6`", ",", 
      "1003.`", ",", "7.`", ",", "2.`", ",", "23.6`", ",", "34.`", 
      ",", "\<\"No\"\>", ",", "2.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17.`", ",", "33.8`", ",", "2.`", ",", "9.`", ",", "13.5`", 
      ",", "\<\"WNW\"\>", ",", "52.`", ",", "\<\"NNW\"\>", ",", "\<\"W\"\>", 
      ",", "6.`", ",", "24.`", ",", "65.`", ",", "35.`", ",", "1004.`", ",", 
      "1001.8`", ",", "2.`", ",", "3.`", ",", "23.`", ",", "31.8`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.`", ",", "22.8`", ",", "0.`", ",", "12.4`", ",", "6.`", 
      ",", "\<\"E\"\>", ",", "50.`", ",", "\<\"E\"\>", ",", "\<\"ENE\"\>", 
      ",", "13.`", ",", "19.`", ",", "70.`", ",", "57.`", ",", "1012.3`", ",",
       "1012.3`", ",", "8.`", ",", "6.`", ",", "17.`", ",", "21.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.4`", ",", "33.8`", ",", "0.`", ",", "5.2`", ",", "11.1`", 
      ",", "\<\"W\"\>", ",", "35.`", ",", "\<\"E\"\>", ",", "\<\"NW\"\>", ",",
       "7.`", ",", "15.`", ",", "70.`", ",", "26.`", ",", "1014.2`", ",", 
      "1009.`", ",", "7.`", ",", "1.`", ",", "18.`", ",", "31.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17.9`", ",", "33.2`", ",", "0.`", ",", "10.4`", ",", "8.4`", 
      ",", "\<\"N\"\>", ",", "59.`", ",", "\<\"N\"\>", ",", "\<\"NNE\"\>", 
      ",", "15.`", ",", "20.`", ",", "58.`", ",", "62.`", ",", "1008.5`", ",",
       "1006.1`", ",", "6.`", ",", "7.`", ",", "24.5`", ",", "23.5`", 
      ",", "\<\"No\"\>", ",", "4.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.2`", ",", "25.1`", ",", "4.8`", ",", "6.4`", ",", "11.6`", 
      ",", "\<\"E\"\>", ",", "46.`", ",", "\<\"ESE\"\>", ",", "\<\"ESE\"\>", 
      ",", "20.`", ",", "28.`", ",", "62.`", ",", "42.`", ",", "1016.8`", ",",
       "1015.`", ",", "1.`", ",", "1.`", ",", "17.1`", ",", "23.9`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.1`", ",", "20.4`", ",", "0.`", ",", "9.6`", ",", "0.1`", 
      ",", "\<\"ESE\"\>", ",", "39.`", ",", "\<\"ESE\"\>", ",", "\<\"ESE\"\>",
       ",", "17.`", ",", "19.`", ",", "63.`", ",", "55.`", ",", "1017.5`", 
      ",", "1015.8`", ",", "8.`", ",", "8.`", ",", "17.8`", ",", "19.4`", 
      ",", "\<\"No\"\>", ",", "18.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.3`", ",", "19.6`", ",", "18.8`", ",", "5.`", ",", "0.`", 
      ",", "\<\"NE\"\>", ",", "33.`", ",", "\<\"SSE\"\>", ",", "\<\"NNE\"\>", 
      ",", "9.`", ",", "13.`", ",", "92.`", ",", "88.`", ",", "1008.7`", ",", 
      "1006.`", ",", "8.`", ",", "8.`", ",", "18.`", ",", "18.6`", 
      ",", "\<\"Yes\"\>", ",", "12.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17.2`", ",", "24.7`", ",", "12.2`", ",", "1.4`", ",", "8.1`", 
      ",", "\<\"NW\"\>", ",", "50.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "19.`", ",", "28.`", ",", "80.`", ",", "71.`", ",", "1004.9`", ",",
       "1004.`", ",", "7.`", ",", "8.`", ",", "19.4`", ",", "21.9`", 
      ",", "\<\"Yes\"\>", ",", "0.8`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.9`", ",", "19.9`", ",", "0.8`", ",", "5.6`", ",", "1.6`", 
      ",", "\<\"E\"\>", ",", "48.`", ",", "\<\"SSE\"\>", ",", "\<\"ESE\"\>", 
      ",", "17.`", ",", "22.`", ",", "73.`", ",", "58.`", ",", "1011.4`", ",",
       "1012.1`", ",", "8.`", ",", "7.`", ",", "17.4`", ",", "18.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.`", ",", "22.5`", ",", "0.`", ",", "4.4`", ",", "11.6`", 
      ",", "\<\"E\"\>", ",", "33.`", ",", "\<\"SE\"\>", ",", "\<\"S\"\>", ",",
       "11.`", ",", "7.`", ",", "55.`", ",", "46.`", ",", "1018.7`", ",", 
      "1016.8`", ",", "1.`", ",", "2.`", ",", "14.7`", ",", "22.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.9`", ",", "24.4`", ",", "0.`", ",", "5.8`", ",", "10.8`", 
      ",", "\<\"NE\"\>", ",", "28.`", ",", "\<\"SE\"\>", ",", "\<\"E\"\>", 
      ",", "7.`", ",", "7.`", ",", "60.`", ",", "38.`", ",", "1021.6`", ",", 
      "1019.2`", ",", "1.`", ",", "4.`", ",", "16.2`", ",", "22.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.3`", ",", "27.8`", ",", "0.`", ",", "6.4`", ",", "9.9`", 
      ",", "\<\"ENE\"\>", ",", "35.`", ",", "\<\"SE\"\>", ",", "\<\"NE\"\>", 
      ",", "6.`", ",", "11.`", ",", "64.`", ",", "29.`", ",", "1021.3`", ",", 
      "1018.1`", ",", "3.`", ",", "6.`", ",", "17.`", ",", "26.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.4`", ",", "25.7`", ",", "0.`", ",", "6.8`", ",", "8.2`", 
      ",", "\<\"E\"\>", ",", "41.`", ",", "\<\"E\"\>", ",", "\<\"NE\"\>", ",",
       "9.`", ",", "17.`", ",", "67.`", ",", "32.`", ",", "1020.1`", ",", 
      "1016.9`", ",", "7.`", ",", "7.`", ",", "17.6`", ",", "24.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.7`", ",", "28.8`", ",", "0.`", ",", "7.4`", ",", "9.`", 
      ",", "\<\"NNE\"\>", ",", "28.`", ",", "\<\"NW\"\>", ",", "\<\"SSW\"\>", 
      ",", "4.`", ",", "7.`", ",", "70.`", ",", "28.`", ",", "1016.5`", ",", 
      "1012.4`", ",", "1.`", ",", "5.`", ",", "18.3`", ",", "28.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.2`", ",", "31.3`", ",", "0.`", ",", "6.6`", ",", "11.6`", 
      ",", "\<\"WSW\"\>", ",", "46.`", ",", "\<\"N\"\>", ",", "\<\"WNW\"\>", 
      ",", "4.`", ",", "26.`", ",", "71.`", ",", "28.`", ",", "1013.1`", ",", 
      "1009.5`", ",", "1.`", ",", "4.`", ",", "19.7`", ",", "30.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.3`", ",", "33.2`", ",", "0.`", ",", "9.4`", ",", "13.2`", 
      ",", "\<\"NNW\"\>", ",", "44.`", ",", "\<\"NNE\"\>", ",", "\<\"NW\"\>", 
      ",", "4.`", ",", "24.`", ",", "60.`", ",", "18.`", ",", "1013.9`", ",", 
      "1012.`", ",", "0.`", ",", "1.`", ",", "22.4`", ",", "32.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17.9`", ",", "33.9`", ",", "0.`", ",", "10.4`", ",", "11.8`", 
      ",", "\<\"ENE\"\>", ",", "46.`", ",", "\<\"S\"\>", ",", "\<\"W\"\>", 
      ",", "6.`", ",", "11.`", ",", "72.`", ",", "22.`", ",", "1017.4`", ",", 
      "1014.6`", ",", "1.`", ",", "1.`", ",", "19.8`", ",", "32.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "18.`", ",", "34.9`", ",", "0.`", ",", "9.2`", ",", "9.9`", 
      ",", "\<\"NW\"\>", ",", "69.`", ",", "\<\"N\"\>", ",", "\<\"W\"\>", ",",
       "6.`", ",", "13.`", ",", "68.`", ",", "29.`", ",", "1018.`", ",", 
      "1013.7`", ",", "1.`", ",", "6.`", ",", "22.2`", ",", "33.1`", 
      ",", "\<\"No\"\>", ",", "5.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17.6`", ",", "27.8`", ",", "5.2`", ",", "10.2`", ",", "3.6`", 
      ",", "\<\"ESE\"\>", ",", "39.`", ",", "\<\"N\"\>", ",", "\<\"NNW\"\>", 
      ",", "13.`", ",", "13.`", ",", "66.`", ",", "49.`", ",", "1014.6`", ",",
       "1012.8`", ",", "7.`", ",", "8.`", ",", "21.4`", ",", "26.3`", 
      ",", "\<\"Yes\"\>", ",", "2.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.`", ",", "23.8`", ",", "2.2`", ",", "5.4`", ",", "6.2`", 
      ",", "\<\"SSE\"\>", ",", "30.`", ",", "\<\"SE\"\>", ",", "\<\"ESE\"\>", 
      ",", "11.`", ",", "11.`", ",", "73.`", ",", "49.`", ",", "1018.9`", ",",
       "1017.1`", ",", "8.`", ",", "7.`", ",", "16.5`", ",", "22.9`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.9`", ",", "28.8`", ",", "0.`", ",", "5.8`", ",", "8.1`", 
      ",", "\<\"NNE\"\>", ",", "30.`", ",", "\<\"SSE\"\>", ",", "\<\"NNE\"\>",
       ",", "7.`", ",", "11.`", ",", "71.`", ",", "44.`", ",", "1018.2`", ",",
       "1014.5`", ",", "7.`", ",", "2.`", ",", "19.1`", ",", "27.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "17.1`", ",", "29.6`", ",", "0.`", ",", "5.8`", ",", "9.2`", 
      ",", "\<\"E\"\>", ",", "48.`", ",", "\<\"SE\"\>", ",", "\<\"ESE\"\>", 
      ",", "9.`", ",", "17.`", ",", "67.`", ",", "38.`", ",", "1016.7`", ",", 
      "1012.8`", ",", "6.`", ",", "7.`", ",", "21.7`", ",", "29.1`", 
      ",", "\<\"No\"\>", ",", "1.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "18.2`", ",", "22.6`", ",", "1.8`", ",", "8.`", ",", "0.`", 
      ",", "\<\"ENE\"\>", ",", "33.`", ",", "\<\"SSE\"\>", ",", "\<\"ENE\"\>",
       ",", "7.`", ",", "13.`", ",", "92.`", ",", "76.`", ",", "1014.4`", ",",
       "1011.5`", ",", "8.`", ",", "8.`", ",", "18.5`", ",", "22.1`", 
      ",", "\<\"Yes\"\>", ",", "9.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.8`", ",", "22.8`", ",", "9.`", ",", "2.8`", ",", "0.3`", 
      ",", "\<\"ESE\"\>", ",", "30.`", ",", "\<\"S\"\>", ",", "\<\"SSE\"\>", 
      ",", "7.`", ",", "11.`", ",", "88.`", ",", "71.`", ",", "1010.`", ",", 
      "1007.8`", ",", "8.`", ",", "8.`", ",", "18.4`", ",", "21.5`", 
      ",", "\<\"Yes\"\>", ",", "1.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.6`", ",", "27.4`", ",", "1.`", ",", "2.8`", ",", "8.`", 
      ",", "\<\"W\"\>", ",", "52.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "6.`", ",", "24.`", ",", "77.`", ",", "41.`", ",", "1002.1`", ",", 
      "997.5`", ",", "4.`", ",", "7.`", ",", "18.7`", ",", "26.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.5`", ",", "24.2`", ",", "0.`", ",", "6.8`", ",", "5.9`", 
      ",", "\<\"SSW\"\>", ",", "61.`", ",", "\<\"N\"\>", ",", "\<\"NNW\"\>", 
      ",", "11.`", ",", "20.`", ",", "76.`", ",", "76.`", ",", "999.4`", ",", 
      "998.9`", ",", "7.`", ",", "7.`", ",", "17.9`", ",", "20.3`", 
      ",", "\<\"No\"\>", ",", "16.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.4`", ",", "19.9`", ",", "16.2`", ",", "5.4`", ",", "5.6`", 
      ",", "\<\"ENE\"\>", ",", "41.`", ",", "\<\"ESE\"\>", ",", "\<\"ESE\"\>",
       ",", "7.`", ",", "20.`", ",", "75.`", ",", "58.`", ",", "1007.6`", ",",
       "1005.`", ",", "7.`", ",", "7.`", ",", "13.6`", ",", "18.7`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.4`", ",", "20.9`", ",", "0.`", ",", "4.`", ",", "8.9`", 
      ",", "\<\"SSE\"\>", ",", "33.`", ",", "\<\"S\"\>", ",", "\<\"S\"\>", 
      ",", "15.`", ",", "17.`", ",", "65.`", ",", "51.`", ",", "1007.7`", ",",
       "1006.8`", ",", "6.`", ",", "6.`", ",", "13.8`", ",", "18.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.1`", ",", "23.1`", ",", "0.`", ",", "5.8`", ",", "9.6`", 
      ",", "\<\"ENE\"\>", ",", "41.`", ",", "\<\"SSE\"\>", ",", "\<\"W\"\>", 
      ",", "17.`", ",", "13.`", ",", "66.`", ",", "37.`", ",", "1013.6`", ",",
       "1011.4`", ",", "1.`", ",", "7.`", ",", "14.`", ",", "21.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.9`", ",", "26.`", ",", "0.`", ",", "5.`", ",", "10.7`", 
      ",", "\<\"NE\"\>", ",", "31.`", ",", "\<\"SE\"\>", ",", "\<\"NE\"\>", 
      ",", "7.`", ",", "13.`", ",", "74.`", ",", "34.`", ",", "1016.1`", ",", 
      "1011.7`", ",", "1.`", ",", "5.`", ",", "14.6`", ",", "24.2`", 
      ",", "\<\"No\"\>", ",", "4.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.5`", ",", "24.2`", ",", "4.4`", ",", "6.6`", ",", "5.9`", 
      ",", "\<\"W\"\>", ",", "48.`", ",", "\<\"NNW\"\>", ",", "\<\"WNW\"\>", 
      ",", "9.`", ",", "17.`", ",", "95.`", ",", "60.`", ",", "1010.8`", ",", 
      "1006.8`", ",", "8.`", ",", "5.`", ",", "15.8`", ",", "22.6`", 
      ",", "\<\"Yes\"\>", ",", "11.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.6`", ",", "18.2`", ",", "11.`", ",", "3.2`", ",", "0.4`", 
      ",", "\<\"ENE\"\>", ",", "30.`", ",", "\<\"SSE\"\>", ",", "\<\"SSE\"\>",
       ",", "13.`", ",", "15.`", ",", "81.`", ",", "73.`", ",", "1010.`", ",",
       "1011.`", ",", "7.`", ",", "8.`", ",", "16.3`", ",", "16.8`", 
      ",", "\<\"Yes\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.6`", ",", "24.2`", ",", "0.2`", ",", "2.8`", ",", "12.7`", 
      ",", "\<\"E\"\>", ",", "33.`", ",", "\<\"S\"\>", ",", "\<\"SE\"\>", ",",
       "11.`", ",", "9.`", ",", "63.`", ",", "37.`", ",", "1017.5`", ",", 
      "1015.1`", ",", "1.`", ",", "1.`", ",", "13.7`", ",", "22.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.8`", ",", "25.2`", ",", "0.`", ",", "5.6`", ",", "12.6`", 
      ",", "\<\"ENE\"\>", ",", "35.`", ",", "\<\"SE\"\>", ",", "\<\"E\"\>", 
      ",", "7.`", ",", "7.`", ",", "69.`", ",", "32.`", ",", "1020.2`", ",", 
      "1016.7`", ",", "1.`", ",", "1.`", ",", "15.`", ",", "24.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.2`", ",", "26.1`", ",", "0.`", ",", "7.2`", ",", "12.6`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"SE\"\>", ",", "\<\"E\"\>", 
      ",", "7.`", ",", "19.`", ",", "71.`", ",", "40.`", ",", "1022.9`", ",", 
      "1020.`", ",", "1.`", ",", "1.`", ",", "15.3`", ",", "24.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.1`", ",", "24.1`", ",", "0.`", ",", "7.4`", ",", "10.2`", 
      ",", "\<\"ENE\"\>", ",", "46.`", ",", "\<\"ESE\"\>", ",", "\<\"NNE\"\>",
       ",", "9.`", ",", "13.`", ",", "64.`", ",", "46.`", ",", "1025.2`", ",",
       "1021.4`", ",", "7.`", ",", "1.`", ",", "15.4`", ",", "22.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.8`", ",", "25.8`", ",", "0.`", ",", "6.8`", ",", "11.7`", 
      ",", "\<\"E\"\>", ",", "31.`", ",", "\<\"S\"\>", ",", "\<\"NNE\"\>", 
      ",", "7.`", ",", "11.`", ",", "72.`", ",", "42.`", ",", "1021.3`", ",", 
      "1017.4`", ",", "5.`", ",", "4.`", ",", "17.2`", ",", "24.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.4`", ",", "27.1`", ",", "0.`", ",", "5.6`", ",", "12.1`", 
      ",", "\<\"NE\"\>", ",", "33.`", ",", "\<\"ESE\"\>", ",", "\<\"SE\"\>", 
      ",", "6.`", ",", "15.`", ",", "69.`", ",", "38.`", ",", "1017.6`", ",", 
      "1012.8`", ",", "1.`", ",", "2.`", ",", "16.9`", ",", "26.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.`", ",", "28.9`", ",", "0.`", ",", "7.2`", ",", "8.2`", 
      ",", "\<\"ESE\"\>", ",", "39.`", ",", "\<\"SSE\"\>", ",", "\<\"WNW\"\>",
       ",", "2.`", ",", "9.`", ",", "78.`", ",", "31.`", ",", "1012.2`", ",", 
      "1009.1`", ",", "2.`", ",", "7.`", ",", "17.4`", ",", "28.6`", 
      ",", "\<\"No\"\>", ",", "1.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.3`", ",", "24.8`", ",", "1.8`", ",", "7.8`", ",", "3.8`", 
      ",", "\<\"S\"\>", ",", "50.`", ",", "\<\"NNW\"\>", ",", "\<\"N\"\>", 
      ",", "4.`", ",", "7.`", ",", "88.`", ",", "56.`", ",", "1011.8`", ",", 
      "1008.4`", ",", "7.`", ",", "7.`", ",", "17.5`", ",", "24.`", 
      ",", "\<\"Yes\"\>", ",", "6.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.7`", ",", "28.6`", ",", "6.6`", ",", "3.2`", ",", "8.6`", 
      ",", "\<\"W\"\>", ",", "50.`", ",", "\<\"NA\"\>", ",", "\<\"W\"\>", 
      ",", "\<\"NA\"\>", ",", "28.`", ",", "78.`", ",", "42.`", ",", 
      "1008.3`", ",", "1002.3`", ",", "5.`", ",", "5.`", ",", "16.5`", ",", 
      "27.4`", ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "12.7`", ",", "25.1`", ",", "0.`", ",", "7.8`", ",", "12.4`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"WNW\"\>", ",", "\<\"WNW\"\>", 
      ",", "20.`", ",", "26.`", ",", "57.`", ",", "32.`", ",", "1007.4`", ",",
       "1005.4`", ",", "1.`", ",", "1.`", ",", "15.7`", ",", "24.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.`", ",", "23.8`", ",", "0.`", ",", "10.4`", ",", "12.4`", 
      ",", "\<\"NW\"\>", ",", "44.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "15.`", ",", "30.`", ",", "54.`", ",", "34.`", ",", "1007.9`", ",",
       "1007.2`", ",", "0.`", ",", "1.`", ",", "15.1`", ",", "22.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.5`", ",", "25.9`", ",", "0.`", ",", "5.2`", ",", "10.2`", 
      ",", "\<\"ENE\"\>", ",", "44.`", ",", "\<\"ENE\"\>", ",", "\<\"WSW\"\>",
       ",", "9.`", ",", "7.`", ",", "70.`", ",", "35.`", ",", "1016.4`", ",", 
      "1014.3`", ",", "6.`", ",", "2.`", ",", "15.8`", ",", "24.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.`", ",", "28.2`", ",", "0.`", ",", "5.`", ",", "11.6`", 
      ",", "\<\"NW\"\>", ",", "44.`", ",", "\<\"WSW\"\>", ",", "\<\"NW\"\>", 
      ",", "4.`", ",", "17.`", ",", "74.`", ",", "27.`", ",", "1017.6`", ",", 
      "1014.4`", ",", "3.`", ",", "6.`", ",", "17.4`", ",", "27.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.7`", ",", "27.6`", ",", "0.`", ",", "7.8`", ",", "8.1`", 
      ",", "\<\"W\"\>", ",", "48.`", ",", "\<\"NA\"\>", ",", "\<\"W\"\>", 
      ",", "\<\"NA\"\>", ",", "30.`", ",", "74.`", ",", "25.`", ",", 
      "1013.6`", ",", "1009.1`", ",", "2.`", ",", "6.`", ",", "17.6`", ",", 
      "26.8`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.8`", ",", "17.3`", ",", "0.`", ",", "7.6`", ",", "0.8`", 
      ",", "\<\"SSE\"\>", ",", "48.`", ",", "\<\"S\"\>", ",", "\<\"SE\"\>", 
      ",", "13.`", ",", "13.`", ",", "74.`", ",", "78.`", ",", "1010.`", ",", 
      "1009.9`", ",", "7.`", ",", "7.`", ",", "15.7`", ",", "15.3`", 
      ",", "\<\"No\"\>", ",", "10.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.7`", ",", "18.4`", ",", "10.4`", ",", "5.2`", ",", "12.`", 
      ",", "\<\"S\"\>", ",", "48.`", ",", "\<\"S\"\>", ",", "\<\"S\"\>", ",", 
      "24.`", ",", "17.`", ",", "58.`", ",", "34.`", ",", "1015.5`", ",", 
      "1014.5`", ",", "5.`", ",", "1.`", ",", "10.6`", ",", "16.8`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.4`", ",", "21.8`", ",", "0.`", ",", "6.2`", ",", "12.1`", 
      ",", "\<\"S\"\>", ",", "35.`", ",", "\<\"SSE\"\>", ",", "\<\"SSE\"\>", 
      ",", "15.`", ",", "15.`", ",", "60.`", ",", "31.`", ",", "1020.8`", ",",
       "1019.3`", ",", "1.`", ",", "1.`", ",", "11.7`", ",", "20.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.4`", ",", "24.4`", ",", "0.`", ",", "6.2`", ",", "11.6`", 
      ",", "\<\"E\"\>", ",", "35.`", ",", "\<\"ESE\"\>", ",", "\<\"WNW\"\>", 
      ",", "7.`", ",", "11.`", ",", "65.`", ",", "37.`", ",", "1026.3`", ",", 
      "1023.2`", ",", "0.`", ",", "2.`", ",", "12.2`", ",", "22.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.3`", ",", "27.3`", ",", "0.`", ",", "5.6`", ",", "10.1`", 
      ",", "\<\"E\"\>", ",", "35.`", ",", "\<\"ESE\"\>", ",", "\<\"WNW\"\>", 
      ",", "6.`", ",", "9.`", ",", "78.`", ",", "28.`", ",", "1025.4`", ",", 
      "1020.4`", ",", "1.`", ",", "1.`", ",", "13.8`", ",", "25.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.1`", ",", "28.2`", ",", "0.`", ",", "6.`", ",", "7.3`", 
      ",", "\<\"ESE\"\>", ",", "39.`", ",", "\<\"SSE\"\>", ",", "\<\"WNW\"\>",
       ",", "6.`", ",", "7.`", ",", "72.`", ",", "28.`", ",", "1021.1`", ",", 
      "1018.2`", ",", "1.`", ",", "7.`", ",", "15.6`", ",", "27.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.`", ",", "27.6`", ",", "0.`", ",", "6.`", ",", "11.`", 
      ",", "\<\"E\"\>", ",", "46.`", ",", "\<\"SSE\"\>", ",", "\<\"WSW\"\>", 
      ",", "7.`", ",", "6.`", ",", "69.`", ",", "35.`", ",", "1025.5`", ",", 
      "1022.2`", ",", "1.`", ",", "1.`", ",", "15.7`", ",", "26.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.9`", ",", "31.8`", ",", "0.`", ",", "6.`", ",", "11.3`", 
      ",", "\<\"WSW\"\>", ",", "41.`", ",", "\<\"NNW\"\>", ",", "\<\"NNE\"\>",
       ",", "6.`", ",", "9.`", ",", "76.`", ",", "24.`", ",", "1023.9`", ",", 
      "1019.3`", ",", "2.`", ",", "3.`", ",", "17.4`", ",", "30.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.8`", ",", "29.2`", ",", "0.`", ",", "8.4`", ",", "7.5`", 
      ",", "\<\"E\"\>", ",", "50.`", ",", "\<\"NA\"\>", ",", "\<\"ENE\"\>", 
      ",", "\<\"NA\"\>", ",", "9.`", ",", "56.`", ",", "34.`", ",", "1021.6`",
       ",", "1017.7`", ",", "0.`", ",", "7.`", ",", "17.5`", ",", "27.7`", 
      ",", "\<\"No\"\>", ",", "3.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.5`", ",", "27.4`", ",", "3.`", ",", "4.8`", ",", "11.5`", 
      ",", "\<\"NNW\"\>", ",", "24.`", ",", "\<\"SSE\"\>", ",", "\<\"NNW\"\>",
       ",", "6.`", ",", "9.`", ",", "79.`", ",", "39.`", ",", "1024.7`", ",", 
      "1020.7`", ",", "1.`", ",", "7.`", ",", "14.`", ",", "24.9`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.1`", ",", "27.8`", ",", "0.`", ",", "5.`", ",", "11.5`", 
      ",", "\<\"E\"\>", ",", "41.`", ",", "\<\"SE\"\>", ",", "\<\"NNE\"\>", 
      ",", "7.`", ",", "11.`", ",", "66.`", ",", "33.`", ",", "1024.8`", ",", 
      "1023.1`", ",", "0.`", ",", "1.`", ",", "17.8`", ",", "27.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.5`", ",", "31.7`", ",", "0.`", ",", "6.6`", ",", "11.2`", 
      ",", "\<\"WNW\"\>", ",", "24.`", ",", "\<\"ENE\"\>", ",", "\<\"W\"\>", 
      ",", "6.`", ",", "9.`", ",", "74.`", ",", "28.`", ",", "1024.9`", ",", 
      "1020.4`", ",", "1.`", ",", "1.`", ",", "17.2`", ",", "30.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.9`", ",", "34.7`", ",", "0.`", ",", "6.4`", ",", "8.5`", 
      ",", "\<\"SSW\"\>", ",", "46.`", ",", "\<\"SE\"\>", ",", "\<\"ENE\"\>", 
      ",", "11.`", ",", "7.`", ",", "50.`", ",", "18.`", ",", "1022.8`", ",", 
      "1019.3`", ",", "0.`", ",", "3.`", ",", "20.2`", ",", "32.7`", 
      ",", "\<\"No\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.3`", ",", "31.7`", ",", "0.2`", ",", "7.8`", ",", "11.`", 
      ",", "\<\"WNW\"\>", ",", "44.`", ",", "\<\"ESE\"\>", ",", "\<\"WSW\"\>",
       ",", "6.`", ",", "28.`", ",", "80.`", ",", "23.`", ",", "1021.6`", ",",
       "1017.6`", ",", "2.`", ",", "5.`", ",", "17.5`", ",", "30.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.2`", ",", "33.1`", ",", "0.`", ",", "8.6`", ",", "9.7`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"SE\"\>", ",", "\<\"NNW\"\>", 
      ",", "7.`", ",", "7.`", ",", "91.`", ",", "18.`", ",", "1020.9`", ",", 
      "1017.7`", ",", "7.`", ",", "1.`", ",", "16.1`", ",", "31.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.3`", ",", "33.8`", ",", "0.`", ",", "7.2`", ",", "11.3`", 
      ",", "\<\"W\"\>", ",", "22.`", ",", "\<\"SE\"\>", ",", "\<\"W\"\>", ",",
       "9.`", ",", "13.`", ",", "57.`", ",", "15.`", ",", "1022.6`", ",", 
      "1019.1`", ",", "0.`", ",", "1.`", ",", "17.9`", ",", "32.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.8`", ",", "35.2`", ",", "0.`", ",", "6.4`", ",", "11.2`", 
      ",", "\<\"SE\"\>", ",", "48.`", ",", "\<\"SE\"\>", ",", "\<\"ESE\"\>", 
      ",", "7.`", ",", "4.`", ",", "47.`", ",", "15.`", ",", "1022.5`", ",", 
      "1019.3`", ",", "5.`", ",", "2.`", ",", "21.4`", ",", "34.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.3`", ",", "32.3`", ",", "0.`", ",", "9.4`", ",", "11.4`", 
      ",", "\<\"NE\"\>", ",", "28.`", ",", "\<\"ENE\"\>", ",", "\<\"WNW\"\>", 
      ",", "4.`", ",", "6.`", ",", "44.`", ",", "17.`", ",", "1024.3`", ",", 
      "1020.7`", ",", "5.`", ",", "2.`", ",", "18.2`", ",", "30.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.7`", ",", "30.2`", ",", "0.`", ",", "7.8`", ",", "11.2`", 
      ",", "\<\"NE\"\>", ",", "33.`", ",", "\<\"ESE\"\>", ",", "\<\"NNW\"\>", 
      ",", "9.`", ",", "13.`", ",", "73.`", ",", "22.`", ",", "1024.3`", ",", 
      "1020.6`", ",", "1.`", ",", "0.`", ",", "17.7`", ",", "28.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.5`", ",", "29.9`", ",", "0.`", ",", "5.8`", ",", "10.7`", 
      ",", "\<\"NW\"\>", ",", "43.`", ",", "\<\"NA\"\>", ",", "\<\"WNW\"\>", 
      ",", "0.`", ",", "19.`", ",", "76.`", ",", "30.`", ",", "1022.7`", ",", 
      "1018.8`", ",", "0.`", ",", "1.`", ",", "16.8`", ",", "29.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.1`", ",", "26.2`", ",", "0.`", ",", "9.`", ",", "9.8`", 
      ",", "\<\"NE\"\>", ",", "31.`", ",", "\<\"SE\"\>", ",", "\<\"NNE\"\>", 
      ",", "4.`", ",", "15.`", ",", "59.`", ",", "48.`", ",", "1022.1`", ",", 
      "1018.7`", ",", "1.`", ",", "4.`", ",", "19.7`", ",", "24.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.5`", ",", "29.3`", ",", "0.`", ",", "5.2`", ",", "8.`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"NA\"\>", ",", "\<\"WSW\"\>", 
      ",", "0.`", ",", "26.`", ",", "76.`", ",", "35.`", ",", "1013.8`", ",", 
      "1009.4`", ",", "7.`", ",", "7.`", ",", "17.1`", ",", "27.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.`", ",", "14.8`", ",", "0.`", ",", "8.2`", ",", "0.`", 
      ",", "\<\"SE\"\>", ",", "30.`", ",", "\<\"ESE\"\>", ",", "\<\"ESE\"\>", 
      ",", "9.`", ",", "17.`", ",", "77.`", ",", "62.`", ",", "1017.4`", ",", 
      "1019.3`", ",", "7.`", ",", "8.`", ",", "13.3`", ",", "13.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.6`", ",", "19.6`", ",", "0.`", ",", "2.8`", ",", "1.6`", 
      ",", "\<\"E\"\>", ",", "33.`", ",", "\<\"SE\"\>", ",", "\<\"ESE\"\>", 
      ",", "6.`", ",", "17.`", ",", "71.`", ",", "64.`", ",", "1023.6`", ",", 
      "1021.8`", ",", "7.`", ",", "8.`", ",", "14.`", ",", "17.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.8`", ",", "24.9`", ",", "0.`", ",", "2.4`", ",", "6.2`", 
      ",", "\<\"ENE\"\>", ",", "30.`", ",", "\<\"NNW\"\>", ",", "\<\"SW\"\>", 
      ",", "6.`", ",", "7.`", ",", "76.`", ",", "44.`", ",", "1023.2`", ",", 
      "1019.3`", ",", "7.`", ",", "6.`", ",", "15.5`", ",", "24.2`", 
      ",", "\<\"No\"\>", ",", "0.6`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "15.5`", ",", "22.4`", ",", "0.6`", ",", "4.8`", ",", "1.9`", 
      ",", "\<\"NW\"\>", ",", "28.`", ",", "\<\"SSE\"\>", ",", "\<\"WNW\"\>", 
      ",", "6.`", ",", "19.`", ",", "89.`", ",", "68.`", ",", "1018.7`", ",", 
      "1015.4`", ",", "8.`", ",", "7.`", ",", "17.1`", ",", "21.1`", 
      ",", "\<\"No\"\>", ",", "6.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.1`", ",", "17.4`", ",", "6.4`", ",", "2.8`", ",", "0.`", 
      ",", "\<\"NNW\"\>", ",", "43.`", ",", "\<\"N\"\>", ",", "\<\"N\"\>", 
      ",", "11.`", ",", "20.`", ",", "94.`", ",", "93.`", ",", "1010.2`", ",",
       "1006.5`", ",", "8.`", ",", "8.`", ",", "16.4`", ",", "16.6`", 
      ",", "\<\"Yes\"\>", ",", "19.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.6`", ",", "20.2`", ",", "19.8`", ",", "2.6`", ",", "9.1`", 
      ",", "\<\"W\"\>", ",", "46.`", ",", "\<\"NNW\"\>", ",", "\<\"W\"\>", 
      ",", "17.`", ",", "20.`", ",", "76.`", ",", "50.`", ",", "1007.9`", ",",
       "1008.4`", ",", "5.`", ",", "4.`", ",", "15.1`", ",", "17.4`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.4`", ",", "18.3`", ",", "0.`", ",", "4.6`", ",", "9.6`", 
      ",", "\<\"N\"\>", ",", "33.`", ",", "\<\"SE\"\>", ",", "\<\"N\"\>", ",",
       "7.`", ",", "17.`", ",", "80.`", ",", "36.`", ",", "1014.8`", ",", 
      "1012.6`", ",", "1.`", ",", "2.`", ",", "8.4`", ",", "17.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.4`", ",", "18.2`", ",", "0.`", ",", "3.6`", ",", "11.`", 
      ",", "\<\"W\"\>", ",", "31.`", ",", "\<\"SE\"\>", ",", "\<\"WNW\"\>", 
      ",", "7.`", ",", "19.`", ",", "78.`", ",", "35.`", ",", "1017.4`", ",", 
      "1015.`", ",", "1.`", ",", "3.`", ",", "9.2`", ",", "17.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.1`", ",", "18.5`", ",", "0.`", ",", "3.4`", ",", "10.`", 
      ",", "\<\"NW\"\>", ",", "57.`", ",", "\<\"N\"\>", ",", "\<\"NW\"\>", 
      ",", "9.`", ",", "22.`", ",", "90.`", ",", "30.`", ",", "1015.1`", ",", 
      "1011.3`", ",", "6.`", ",", "6.`", ",", "8.8`", ",", "18.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.2`", ",", "18.9`", ",", "0.`", ",", "6.4`", ",", "10.8`", 
      ",", "\<\"WNW\"\>", ",", "50.`", ",", "\<\"WSW\"\>", ",", "\<\"WNW\"\>",
       ",", "6.`", ",", "31.`", ",", "60.`", ",", "34.`", ",", "1011.2`", ",",
       "1009.3`", ",", "3.`", ",", "2.`", ",", "11.2`", ",", "18.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.6`", ",", "18.8`", ",", "0.`", ",", "6.4`", ",", "10.`", 
      ",", "\<\"WNW\"\>", ",", "57.`", ",", "\<\"NW\"\>", ",", "\<\"W\"\>", 
      ",", "19.`", ",", "26.`", ",", "54.`", ",", "42.`", ",", "1012.7`", ",",
       "1013.`", ",", "2.`", ",", "5.`", ",", "13.1`", ",", "16.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.5`", ",", "21.8`", ",", "0.`", ",", "6.`", ",", "10.3`", 
      ",", "\<\"NNW\"\>", ",", "22.`", ",", "\<\"ESE\"\>", ",", "\<\"WNW\"\>",
       ",", "7.`", ",", "11.`", ",", "72.`", ",", "34.`", ",", "1023.9`", ",",
       "1021.2`", ",", "0.`", ",", "1.`", ",", "8.7`", ",", "21.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.3`", ",", "23.3`", ",", "0.`", ",", "3.6`", ",", "5.6`", 
      ",", "\<\"NNW\"\>", ",", "83.`", ",", "\<\"SSW\"\>", ",", "\<\"NW\"\>", 
      ",", "2.`", ",", "37.`", ",", "90.`", ",", "26.`", ",", "1018.`", ",", 
      "1010.5`", ",", "1.`", ",", "8.`", ",", "9.5`", ",", "22.5`", 
      ",", "\<\"No\"\>", ",", "2.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.`", ",", "14.3`", ",", "2.6`", ",", "9.6`", ",", "9.7`", 
      ",", "\<\"WNW\"\>", ",", "63.`", ",", "\<\"NW\"\>", ",", "\<\"W\"\>", 
      ",", "26.`", ",", "33.`", ",", "68.`", ",", "40.`", ",", "1010.3`", ",",
       "1012.7`", ",", "1.`", ",", "3.`", ",", "9.1`", ",", "13.7`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.4`", ",", "18.9`", ",", "0.`", ",", "4.8`", ",", "9.6`", 
      ",", "\<\"N\"\>", ",", "22.`", ",", "\<\"NW\"\>", ",", "\<\"WSW\"\>", 
      ",", "6.`", ",", "7.`", ",", "77.`", ",", "33.`", ",", "1021.2`", ",", 
      "1019.1`", ",", "0.`", ",", "1.`", ",", "5.2`", ",", "17.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.2`", ",", "21.4`", ",", "0.`", ",", "3.2`", ",", "10.6`", 
      ",", "\<\"E\"\>", ",", "26.`", ",", "\<\"SE\"\>", ",", "\<\"NNW\"\>", 
      ",", "7.`", ",", "7.`", ",", "76.`", ",", "27.`", ",", "1025.2`", ",", 
      "1022.3`", ",", "0.`", ",", "1.`", ",", "8.2`", ",", "20.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.9`", ",", "21.8`", ",", "0.`", ",", "2.8`", ",", "9.3`", 
      ",", "\<\"E\"\>", ",", "35.`", ",", "\<\"SSW\"\>", ",", "\<\"NNW\"\>", 
      ",", "7.`", ",", "11.`", ",", "70.`", ",", "35.`", ",", "1028.`", ",", 
      "1024.1`", ",", "1.`", ",", "5.`", ",", "12.9`", ",", "20.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.1`", ",", "20.5`", ",", "0.`", ",", "3.8`", ",", "7.8`", 
      ",", "\<\"ENE\"\>", ",", "31.`", ",", "\<\"ESE\"\>", ",", "\<\"ENE\"\>",
       ",", "11.`", ",", "11.`", ",", "66.`", ",", "48.`", ",", "1027.8`", 
      ",", "1024.`", ",", "1.`", ",", "5.`", ",", "14.9`", ",", "19.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.9`", ",", "18.9`", ",", "0.`", ",", "4.2`", ",", "4.1`", 
      ",", "\<\"ESE\"\>", ",", "39.`", ",", "\<\"SSE\"\>", ",", "\<\"SE\"\>", 
      ",", "15.`", ",", "9.`", ",", "68.`", ",", "45.`", ",", "1028.2`", ",", 
      "1025.4`", ",", "5.`", ",", "4.`", ",", "13.8`", ",", "17.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.6`", ",", "19.5`", ",", "0.`", ",", "2.8`", ",", "6.8`", 
      ",", "\<\"SW\"\>", ",", "17.`", ",", "\<\"S\"\>", ",", "\<\"WNW\"\>", 
      ",", "9.`", ",", "6.`", ",", "69.`", ",", "49.`", ",", "1025.7`", ",", 
      "1021.8`", ",", "6.`", ",", "4.`", ",", "14.3`", ",", "18.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.2`", ",", "22.9`", ",", "0.`", ",", "2.2`", ",", "9.5`", 
      ",", "\<\"E\"\>", ",", "26.`", ",", "\<\"NNW\"\>", ",", "\<\"N\"\>", 
      ",", "4.`", ",", "6.`", ",", "82.`", ",", "28.`", ",", "1023.1`", ",", 
      "1019.2`", ",", "1.`", ",", "1.`", ",", "14.`", ",", "22.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.1`", ",", "23.4`", ",", "0.`", ",", "3.4`", ",", "10.2`", 
      ",", "\<\"ESE\"\>", ",", "39.`", ",", "\<\"SE\"\>", ",", "\<\"WSW\"\>", 
      ",", "2.`", ",", "7.`", ",", "72.`", ",", "29.`", ",", "1021.`", ",", 
      "1016.9`", ",", "0.`", ",", "1.`", ",", "12.7`", ",", "22.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.1`", ",", "24.1`", ",", "0.`", ",", "4.6`", ",", "6.1`", 
      ",", "\<\"WNW\"\>", ",", "35.`", ",", "\<\"SSW\"\>", ",", "\<\"WNW\"\>",
       ",", "6.`", ",", "11.`", ",", "75.`", ",", "32.`", ",", "1019.2`", ",",
       "1015.8`", ",", "7.`", ",", "3.`", ",", "11.5`", ",", "23.7`", 
      ",", "\<\"No\"\>", ",", "2.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.1`", ",", "19.8`", ",", "2.`", ",", "3.2`", ",", "7.7`", 
      ",", "\<\"W\"\>", ",", "39.`", ",", "\<\"SSE\"\>", ",", "\<\"NW\"\>", 
      ",", "13.`", ",", "15.`", ",", "96.`", ",", "56.`", ",", "1018.4`", ",",
       "1013.8`", ",", "5.`", ",", "2.`", ",", "10.7`", ",", "19.1`", 
      ",", "\<\"Yes\"\>", ",", "5.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.6`", ",", "18.`", ",", "5.2`", ",", "3.8`", ",", "9.3`", 
      ",", "\<\"S\"\>", ",", "31.`", ",", "\<\"SSE\"\>", ",", "\<\"SSE\"\>", 
      ",", "9.`", ",", "20.`", ",", "70.`", ",", "40.`", ",", "1020.8`", ",", 
      "1019.6`", ",", "1.`", ",", "1.`", ",", "12.4`", ",", "17.9`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.4`", ",", "20.7`", ",", "0.`", ",", "3.2`", ",", "10.8`", 
      ",", "\<\"SSE\"\>", ",", "28.`", ",", "\<\"SSE\"\>", ",", "\<\"S\"\>", 
      ",", "7.`", ",", "9.`", ",", "66.`", ",", "36.`", ",", "1027.2`", ",", 
      "1023.9`", ",", "1.`", ",", "2.`", ",", "12.3`", ",", "20.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.3`", ",", "19.3`", ",", "0.`", ",", "3.4`", ",", "10.6`", 
      ",", "\<\"S\"\>", ",", "31.`", ",", "\<\"S\"\>", ",", "\<\"SE\"\>", ",",
       "9.`", ",", "13.`", ",", "65.`", ",", "39.`", ",", "1027.9`", ",", 
      "1024.4`", ",", "1.`", ",", "1.`", ",", "12.6`", ",", "18.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.3`", ",", "21.`", ",", "0.`", ",", "4.6`", ",", "6.3`", 
      ",", "\<\"WNW\"\>", ",", "26.`", ",", "\<\"SSW\"\>", ",", "\<\"NW\"\>", 
      ",", "7.`", ",", "7.`", ",", "77.`", ",", "44.`", ",", "1027.2`", ",", 
      "1023.3`", ",", "7.`", ",", "2.`", ",", "12.`", ",", "20.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.9`", ",", "19.7`", ",", "0.`", ",", "3.2`", ",", "8.3`", 
      ",", "\<\"ESE\"\>", ",", "48.`", ",", "\<\"SSE\"\>", ",", "\<\"ENE\"\>",
       ",", "17.`", ",", "11.`", ",", "58.`", ",", "43.`", ",", "1027.3`", 
      ",", "1024.1`", ",", "3.`", ",", "6.`", ",", "14.`", ",", "19.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.4`", ",", "16.1`", ",", "0.`", ",", "3.`", ",", "4.9`", 
      ",", "\<\"SE\"\>", ",", "35.`", ",", "\<\"SE\"\>", ",", "\<\"ESE\"\>", 
      ",", "13.`", ",", "22.`", ",", "69.`", ",", "51.`", ",", "1029.5`", ",",
       "1027.4`", ",", "6.`", ",", "7.`", ",", "13.6`", ",", "15.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.1`", ",", "18.7`", ",", "0.`", ",", "4.4`", ",", "7.1`", 
      ",", "\<\"ESE\"\>", ",", "33.`", ",", "\<\"SSE\"\>", ",", "\<\"ESE\"\>",
       ",", "11.`", ",", "30.`", ",", "66.`", ",", "65.`", ",", "1028.2`", 
      ",", "1024.2`", ",", "4.`", ",", "7.`", ",", "13.5`", ",", "15.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.4`", ",", "20.6`", ",", "0.`", ",", "2.8`", ",", "10.1`", 
      ",", "\<\"E\"\>", ",", "30.`", ",", "\<\"SE\"\>", ",", "\<\"SSE\"\>", 
      ",", "9.`", ",", "7.`", ",", "77.`", ",", "34.`", ",", "1024.8`", ",", 
      "1021.`", ",", "1.`", ",", "2.`", ",", "10.6`", ",", "19.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.6`", ",", "18.9`", ",", "0.`", ",", "3.8`", ",", "8.`", 
      ",", "\<\"SE\"\>", ",", "33.`", ",", "\<\"SSE\"\>", ",", "\<\"E\"\>", 
      ",", "13.`", ",", "22.`", ",", "79.`", ",", "49.`", ",", "1025.8`", ",",
       "1023.5`", ",", "7.`", ",", "6.`", ",", "12.5`", ",", "17.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.5`", ",", "19.`", ",", "0.`", ",", "4.`", ",", "6.8`", 
      ",", "\<\"ENE\"\>", ",", "26.`", ",", "\<\"NA\"\>", ",", "\<\"ESE\"\>", 
      ",", "0.`", ",", "7.`", ",", "74.`", ",", "43.`", ",", "1025.5`", ",", 
      "1022.2`", ",", "6.`", ",", "5.`", ",", "12.6`", ",", "18.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.5`", ",", "21.2`", ",", "0.`", ",", "2.`", ",", "7.9`", 
      ",", "\<\"NE\"\>", ",", "28.`", ",", "\<\"ESE\"\>", ",", "\<\"NE\"\>", 
      ",", "7.`", ",", "9.`", ",", "82.`", ",", "55.`", ",", "1023.7`", ",", 
      "1019.8`", ",", "4.`", ",", "4.`", ",", "9.2`", ",", "17.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.`", ",", "20.9`", ",", "0.`", ",", "2.`", ",", "8.9`", 
      ",", "\<\"WNW\"\>", ",", "22.`", ",", "\<\"NA\"\>", ",", "\<\"NW\"\>", 
      ",", "0.`", ",", "7.`", ",", "84.`", ",", "42.`", ",", "1019.9`", ",", 
      "1014.3`", ",", "7.`", ",", "6.`", ",", "10.1`", ",", "20.6`", 
      ",", "\<\"No\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.8`", ",", "21.7`", ",", "0.2`", ",", "2.8`", ",", "6.5`", 
      ",", "\<\"NW\"\>", ",", "44.`", ",", "\<\"ESE\"\>", ",", "\<\"WNW\"\>", 
      ",", "2.`", ",", "20.`", ",", "99.`", ",", "34.`", ",", "1011.9`", ",", 
      "1006.7`", ",", "7.`", ",", "7.`", ",", "7.9`", ",", "20.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.9`", ",", "18.7`", ",", "0.`", ",", "5.8`", ",", "5.8`", 
      ",", "\<\"NW\"\>", ",", "59.`", ",", "\<\"NNW\"\>", ",", "\<\"NW\"\>", 
      ",", "26.`", ",", "31.`", ",", "68.`", ",", "51.`", ",", "1003.2`", ",",
       "997.7`", ",", "6.`", ",", "6.`", ",", "14.4`", ",", "16.6`", 
      ",", "\<\"No\"\>", ",", "7.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.3`", ",", "11.3`", ",", "7.2`", ",", "4.4`", ",", "5.6`", 
      ",", "\<\"W\"\>", ",", "57.`", ",", "\<\"WNW\"\>", ",", "\<\"WNW\"\>", 
      ",", "26.`", ",", "22.`", ",", "75.`", ",", "60.`", ",", "1006.3`", ",",
       "1008.1`", ",", "3.`", ",", "6.`", ",", "7.1`", ",", "8.8`", 
      ",", "\<\"Yes\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.1`"}], ",", "13.8`", ",", "0.2`", ",", "1.8`", ",", 
      "9.5`", ",", "\<\"NNW\"\>", ",", "22.`", ",", "\<\"NA\"\>", 
      ",", "\<\"NNW\"\>", ",", "0.`", ",", "9.`", ",", "69.`", ",", "40.`", 
      ",", "1020.6`", ",", "1019.6`", ",", "0.`", ",", "1.`", ",", "6.3`", 
      ",", "13.2`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.8`"}], ",", "14.8`", ",", "0.`", ",", "1.4`", ",", 
      "7.`", ",", "\<\"N\"\>", ",", "28.`", ",", "\<\"E\"\>", 
      ",", "\<\"N\"\>", ",", "2.`", ",", "19.`", ",", "80.`", ",", "40.`", 
      ",", "1024.2`", ",", "1020.5`", ",", "1.`", ",", "7.`", ",", "5.3`", 
      ",", "13.9`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "3.8`", ",", "13.8`", ",", "0.`", ",", "2.8`", ",", "0.8`", 
      ",", "\<\"WNW\"\>", ",", "31.`", ",", "\<\"W\"\>", ",", "\<\"NNW\"\>", 
      ",", "6.`", ",", "26.`", ",", "67.`", ",", "54.`", ",", "1020.6`", ",", 
      "1018.5`", ",", "7.`", ",", "7.`", ",", "10.5`", ",", "12.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.1`", ",", "17.3`", ",", "0.`", ",", "1.6`", ",", "9.2`", 
      ",", "\<\"W\"\>", ",", "43.`", ",", "\<\"SSW\"\>", ",", "\<\"WNW\"\>", 
      ",", "6.`", ",", "28.`", ",", "81.`", ",", "38.`", ",", "1020.`", ",", 
      "1017.3`", ",", "1.`", ",", "2.`", ",", "8.7`", ",", "15.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.5`", ",", "17.1`", ",", "0.`", ",", "4.`", ",", "9.4`", 
      ",", "\<\"NW\"\>", ",", "31.`", ",", "\<\"ESE\"\>", ",", "\<\"W\"\>", 
      ",", "6.`", ",", "13.`", ",", "74.`", ",", "42.`", ",", "1020.8`", ",", 
      "1017.4`", ",", "1.`", ",", "1.`", ",", "7.4`", ",", "16.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.9`"}], ",", "16.7`", ",", "0.`", ",", "2.4`", ",", 
      "9.3`", ",", "\<\"NNW\"\>", ",", "30.`", ",", "\<\"SW\"\>", 
      ",", "\<\"NNW\"\>", ",", "2.`", ",", "15.`", ",", "76.`", ",", "42.`", 
      ",", "1022.7`", ",", "1018.5`", ",", "5.`", ",", "2.`", ",", "6.2`", 
      ",", "15.4`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "0.4`", ",", "19.`", ",", "0.`", ",", "3.4`", ",", "8.3`", 
      ",", "\<\"NW\"\>", ",", "39.`", ",", "\<\"NE\"\>", ",", "\<\"WNW\"\>", 
      ",", "2.`", ",", "19.`", ",", "76.`", ",", "41.`", ",", "1019.8`", ",", 
      "1015.8`", ",", "6.`", ",", "5.`", ",", "7.7`", ",", "18.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.5`", ",", "16.8`", ",", "0.`", ",", "2.8`", ",", "3.`", 
      ",", "\<\"NW\"\>", ",", "41.`", ",", "\<\"W\"\>", ",", "\<\"NW\"\>", 
      ",", "7.`", ",", "26.`", ",", "70.`", ",", "53.`", ",", "1018.`", ",", 
      "1013.8`", ",", "7.`", ",", "7.`", ",", "12.5`", ",", "15.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.3`", ",", "17.6`", ",", "0.`", ",", "3.4`", ",", "9.4`", 
      ",", "\<\"WNW\"\>", ",", "43.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "17.`", ",", "30.`", ",", "73.`", ",", "43.`", ",", "1015.8`", ",",
       "1013.5`", ",", "1.`", ",", "1.`", ",", "12.4`", ",", "16.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2`"}], ",", "18.1`", ",", "0.`", ",", "4.4`", ",", 
      "9.4`", ",", "\<\"NW\"\>", ",", "24.`", ",", "\<\"NA\"\>", 
      ",", "\<\"NW\"\>", ",", "0.`", ",", "9.`", ",", "80.`", ",", "44.`", 
      ",", "1021.4`", ",", "1018.9`", ",", "1.`", ",", "1.`", ",", "6.7`", 
      ",", "16.9`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "0.1`", ",", "21.`", ",", "0.`", ",", "2.2`", ",", "9.2`", 
      ",", "\<\"NNW\"\>", ",", "17.`", ",", "\<\"WNW\"\>", ",", "\<\"N\"\>", 
      ",", "2.`", ",", "9.`", ",", "78.`", ",", "36.`", ",", "1023.2`", ",", 
      "1020.3`", ",", "0.`", ",", "1.`", ",", "7.6`", ",", "20.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.5`", ",", "20.9`", ",", "0.`", ",", "2.4`", ",", "9.3`", 
      ",", "\<\"NW\"\>", ",", "20.`", ",", "\<\"NW\"\>", ",", "\<\"NNW\"\>", 
      ",", "2.`", ",", "9.`", ",", "80.`", ",", "41.`", ",", "1023.2`", ",", 
      "1020.`", ",", "1.`", ",", "1.`", ",", "8.4`", ",", "20.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.3`", ",", "17.4`", ",", "0.`", ",", "2.`", ",", "1.6`", 
      ",", "\<\"E\"\>", ",", "20.`", ",", "\<\"WSW\"\>", ",", "\<\"NE\"\>", 
      ",", "6.`", ",", "11.`", ",", "80.`", ",", "52.`", ",", "1024.4`", ",", 
      "1021.5`", ",", "7.`", ",", "7.`", ",", "13.5`", ",", "17.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.4`", ",", "19.2`", ",", "0.`", ",", "2.2`", ",", "7.7`", 
      ",", "\<\"NA\"\>", ",", "24.`", ",", "\<\"E\"\>", ",", "\<\"NNW\"\>", 
      ",", "4.`", ",", "15.`", ",", "73.`", ",", "47.`", ",", "1024.2`", ",", 
      "1020.3`", ",", "7.`", ",", "1.`", ",", "12.1`", ",", "18.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.3`", ",", "19.`", ",", "0.`", ",", "2.2`", ",", "9.4`", 
      ",", "\<\"NNW\"\>", ",", "30.`", ",", "\<\"SE\"\>", ",", "\<\"NW\"\>", 
      ",", "7.`", ",", "15.`", ",", "87.`", ",", "34.`", ",", "1024.7`", ",", 
      "1021.4`", ",", "1.`", ",", "2.`", ",", "7.9`", ",", "18.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.2`", ",", "18.6`", ",", "0.`", ",", "2.`", ",", "9.2`", 
      ",", "\<\"NNW\"\>", ",", "31.`", ",", "\<\"NA\"\>", ",", "\<\"NNW\"\>", 
      ",", "\<\"NA\"\>", ",", "20.`", ",", "84.`", ",", "44.`", ",", 
      "1024.4`", ",", "1021.`", ",", "1.`", ",", "3.`", ",", "8.5`", ",", 
      "17.8`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.4`"}], ",", "17.9`", ",", "0.`", ",", "2.4`", ",", 
      "8.7`", ",", "\<\"NW\"\>", ",", "33.`", ",", "\<\"NNE\"\>", 
      ",", "\<\"NW\"\>", ",", "2.`", ",", "20.`", ",", "80.`", ",", "40.`", 
      ",", "1023.5`", ",", "1018.7`", ",", "1.`", ",", "2.`", ",", "6.8`", 
      ",", "17.7`", ",", "\<\"No\"\>", ",", "1.8`", ",", "\<\"Yes\"\>"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.5`", ",", "16.`", ",", "1.8`", ",", "3.`", ",", "4.3`", 
      ",", "\<\"NW\"\>", ",", "35.`", ",", "\<\"W\"\>", ",", "\<\"NW\"\>", 
      ",", "9.`", ",", "15.`", ",", "88.`", ",", "69.`", ",", "1017.7`", ",", 
      "1013.7`", ",", "7.`", ",", "7.`", ",", "10.`", ",", "15.2`", 
      ",", "\<\"Yes\"\>", ",", "1.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.9`", ",", "12.3`", ",", "1.`", ",", "1.8`", ",", "1.7`", 
      ",", "\<\"NW\"\>", ",", "52.`", ",", "\<\"NNW\"\>", ",", "\<\"NW\"\>", 
      ",", "30.`", ",", "24.`", ",", "68.`", ",", "78.`", ",", "1006.3`", ",",
       "1005.9`", ",", "7.`", ",", "7.`", ",", "11.3`", ",", "7.3`", 
      ",", "\<\"No\"\>", ",", "0.8`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.3`", ",", "14.1`", ",", "0.8`", ",", "1.6`", ",", "8.8`", 
      ",", "\<\"NW\"\>", ",", "41.`", ",", "\<\"NNW\"\>", ",", "\<\"WNW\"\>", 
      ",", "13.`", ",", "26.`", ",", "71.`", ",", "53.`", ",", "1008.4`", ",",
       "1008.3`", ",", "6.`", ",", "6.`", ",", "7.9`", ",", "13.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.7`"}], ",", "18.1`", ",", "0.`", ",", "2.2`", ",", 
      "9.3`", ",", "\<\"W\"\>", ",", "52.`", ",", "\<\"NA\"\>", 
      ",", "\<\"WNW\"\>", ",", "0.`", ",", "24.`", ",", "85.`", ",", "36.`", 
      ",", "1017.8`", ",", "1014.3`", ",", "1.`", ",", "1.`", ",", "3.5`", 
      ",", "16.7`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "0.3`", ",", "17.`", ",", "0.`", ",", "2.2`", ",", "5.6`", 
      ",", "\<\"WNW\"\>", ",", "31.`", ",", "\<\"S\"\>", ",", "\<\"WNW\"\>", 
      ",", "6.`", ",", "24.`", ",", "99.`", ",", "52.`", ",", "1021.9`", ",", 
      "1018.6`", ",", "8.`", ",", "1.`", ",", "3.8`", ",", "16.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.8`", ",", "17.4`", ",", "0.`", ",", "2.6`", ",", "7.3`", 
      ",", "\<\"E\"\>", ",", "24.`", ",", "\<\"ESE\"\>", ",", "\<\"W\"\>", 
      ",", "2.`", ",", "7.`", ",", "81.`", ",", "47.`", ",", "1024.5`", ",", 
      "1022.9`", ",", "6.`", ",", "2.`", ",", "8.`", ",", "16.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.4`", ",", "14.7`", ",", "0.`", ",", "2.6`", ",", "9.2`", 
      ",", "\<\"ESE\"\>", ",", "20.`", ",", "\<\"SSE\"\>", ",", "\<\"E\"\>", 
      ",", "7.`", ",", "6.`", ",", "74.`", ",", "43.`", ",", "1030.4`", ",", 
      "1026.`", ",", "1.`", ",", "1.`", ",", "5.9`", ",", "13.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.2`", ",", "14.8`", ",", "0.`", ",", "2.4`", ",", "6.7`", 
      ",", "\<\"SE\"\>", ",", "17.`", ",", "\<\"SE\"\>", ",", "\<\"SSW\"\>", 
      ",", "11.`", ",", "6.`", ",", "81.`", ",", "49.`", ",", "1028.5`", ",", 
      "1024.8`", ",", "7.`", ",", "1.`", ",", "5.3`", ",", "14.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.2`", ",", "14.5`", ",", "0.`", ",", "1.2`", ",", "8.9`", 
      ",", "\<\"SE\"\>", ",", "17.`", ",", "\<\"SE\"\>", ",", "\<\"SSW\"\>", 
      ",", "6.`", ",", "6.`", ",", "74.`", ",", "43.`", ",", "1026.7`", ",", 
      "1023.5`", ",", "0.`", ",", "1.`", ",", "6.5`", ",", "13.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.3`"}], ",", "17.5`", ",", "0.`", ",", "1.6`", ",", 
      "8.4`", ",", "\<\"W\"\>", ",", "39.`", ",", "\<\"SE\"\>", 
      ",", "\<\"NNW\"\>", ",", "6.`", ",", "15.`", ",", "81.`", ",", "48.`", 
      ",", "1025.5`", ",", "1021.8`", ",", "1.`", ",", "5.`", ",", "6.2`", 
      ",", "17.2`", ",", "\<\"No\"\>", ",", "3.8`", ",", "\<\"Yes\"\>"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.7`", ",", "18.5`", ",", "3.8`", ",", "2.`", ",", "5.1`", 
      ",", "\<\"ESE\"\>", ",", "22.`", ",", "\<\"NNW\"\>", ",", "\<\"W\"\>", 
      ",", "6.`", ",", "6.`", ",", "99.`", ",", "50.`", ",", "1026.6`", ",", 
      "1023.1`", ",", "7.`", ",", "4.`", ",", "7.`", ",", "17.9`", 
      ",", "\<\"Yes\"\>", ",", "5.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.9`", ",", "18.1`", ",", "5.2`", ",", "1.2`", ",", "8.5`", 
      ",", "\<\"NNW\"\>", ",", "22.`", ",", "\<\"NA\"\>", ",", "\<\"NW\"\>", 
      ",", "0.`", ",", "13.`", ",", "93.`", ",", "55.`", ",", "1025.7`", ",", 
      "1022.3`", ",", "1.`", ",", "1.`", ",", "8.9`", ",", "17.7`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.4`", ",", "16.8`", ",", "0.`", ",", "1.6`", ",", "8.2`", 
      ",", "\<\"NW\"\>", ",", "20.`", ",", "\<\"NA\"\>", ",", "\<\"NW\"\>", 
      ",", "0.`", ",", "6.`", ",", "91.`", ",", "50.`", ",", "1027.2`", ",", 
      "1024.7`", ",", "1.`", ",", "4.`", ",", "6.2`", ",", "16.3`", 
      ",", "\<\"No\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.2`", ",", "17.5`", ",", "0.2`", ",", "1.2`", ",", "8.5`", 
      ",", "\<\"NW\"\>", ",", "20.`", ",", "\<\"SSE\"\>", ",", "\<\"WNW\"\>", 
      ",", "7.`", ",", "7.`", ",", "92.`", ",", "45.`", ",", "1032.1`", ",", 
      "1029.6`", ",", "2.`", ",", "1.`", ",", "5.5`", ",", "17.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1`"}], ",", "18.`", ",", "0.`", ",", "2.`", ",", "8.6`",
       ",", "\<\"NA\"\>", ",", "\<\"NA\"\>", ",", "\<\"N\"\>", 
      ",", "\<\"NNW\"\>", ",", "2.`", ",", "15.`", ",", "83.`", ",", "46.`", 
      ",", "1033.2`", ",", "1028.7`", ",", "1.`", ",", "1.`", ",", "5.6`", 
      ",", "17.4`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.9`"}], ",", "18.5`", ",", "0.`", ",", "2.2`", ",", 
      "8.9`", ",", "\<\"E\"\>", ",", "22.`", ",", "\<\"NA\"\>", 
      ",", "\<\"N\"\>", ",", "0.`", ",", "7.`", ",", "84.`", ",", "38.`", ",",
       "1030.2`", ",", "1027.4`", ",", "2.`", ",", "3.`", ",", "4.7`", ",", 
      "18.2`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.6`", ",", "14.`", ",", "0.`", ",", "2.2`", ",", "2.7`", 
      ",", "\<\"NE\"\>", ",", "17.`", ",", "\<\"NA\"\>", ",", "\<\"ENE\"\>", 
      ",", "\<\"NA\"\>", ",", "7.`", ",", "99.`", ",", "67.`", ",", "1032.3`",
       ",", "1028.9`", ",", "7.`", ",", "7.`", ",", "4.6`", ",", "13.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.6`", ",", "15.7`", ",", "0.`", ",", "1.`", ",", "0.6`", 
      ",", "\<\"NNE\"\>", ",", "15.`", ",", "\<\"SSE\"\>", ",", "\<\"NNE\"\>",
       ",", "6.`", ",", "6.`", ",", "85.`", ",", "67.`", ",", "1030.3`", ",", 
      "1027.1`", ",", "7.`", ",", "7.`", ",", "9.9`", ",", "15.5`", 
      ",", "\<\"No\"\>", ",", "0.8`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.8`", ",", "14.4`", ",", "0.8`", ",", "0.6`", ",", "0.`", 
      ",", "\<\"ESE\"\>", ",", "20.`", ",", "\<\"S\"\>", ",", "\<\"ESE\"\>", 
      ",", "9.`", ",", "11.`", ",", "99.`", ",", "86.`", ",", "1028.5`", ",", 
      "1027.2`", ",", "8.`", ",", "8.`", ",", "12.1`", ",", "13.6`", 
      ",", "\<\"No\"\>", ",", "3.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.6`", ",", "15.1`", ",", "3.8`", ",", "0.2`", ",", "2.6`", 
      ",", "\<\"SSE\"\>", ",", "41.`", ",", "\<\"SE\"\>", ",", "\<\"SE\"\>", 
      ",", "9.`", ",", "20.`", ",", "78.`", ",", "65.`", ",", "1028.2`", ",", 
      "1025.7`", ",", "8.`", ",", "7.`", ",", "11.5`", ",", "13.3`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.8`", ",", "15.1`", ",", "0.`", ",", "2.2`", ",", "2.7`", 
      ",", "\<\"S\"\>", ",", "31.`", ",", "\<\"SSE\"\>", ",", "\<\"S\"\>", 
      ",", "6.`", ",", "20.`", ",", "84.`", ",", "65.`", ",", "1025.9`", ",", 
      "1023.4`", ",", "6.`", ",", "7.`", ",", "10.3`", ",", "14.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.4`", ",", "16.7`", ",", "0.`", ",", "1.6`", ",", "9.`", 
      ",", "\<\"S\"\>", ",", "22.`", ",", "\<\"SE\"\>", ",", "\<\"NNE\"\>", 
      ",", "11.`", ",", "4.`", ",", "74.`", ",", "42.`", ",", "1025.2`", ",", 
      "1022.1`", ",", "1.`", ",", "1.`", ",", "9.6`", ",", "16.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2`"}], ",", "15.5`", ",", "0.`", ",", "1.4`", ",", 
      "9.`", ",", "\<\"NE\"\>", ",", "28.`", ",", "\<\"N\"\>", 
      ",", "\<\"ESE\"\>", ",", "4.`", ",", "11.`", ",", "86.`", ",", "42.`", 
      ",", "1027.6`", ",", "1027.`", ",", "1.`", ",", "1.`", ",", "4.9`", ",",
       "14.5`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "4.3`", ",", "14.5`", ",", "0.`", ",", "2.`", ",", "3.`", 
      ",", "\<\"E\"\>", ",", "30.`", ",", "\<\"SSE\"\>", ",", "\<\"ENE\"\>", 
      ",", "6.`", ",", "13.`", ",", "76.`", ",", "70.`", ",", "1034.3`", ",", 
      "1031.7`", ",", "7.`", ",", "7.`", ",", "7.9`", ",", "13.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.4`", ",", "16.3`", ",", "0.`", ",", "1.2`", ",", "\<\"NA\"\>", 
      ",", "\<\"NNE\"\>", ",", "30.`", ",", "\<\"SSE\"\>", ",", "\<\"NE\"\>", 
      ",", "6.`", ",", "19.`", ",", "75.`", ",", "65.`", ",", "1031.4`", ",", 
      "1027.9`", ",", "7.`", ",", "7.`", ",", "12.1`", ",", "14.5`", 
      ",", "\<\"No\"\>", ",", "6.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.6`", ",", "13.7`", ",", "6.2`", ",", "2.2`", ",", "0.`", 
      ",", "\<\"NW\"\>", ",", "31.`", ",", "\<\"E\"\>", ",", "\<\"NA\"\>", 
      ",", "2.`", ",", "0.`", ",", "97.`", ",", "94.`", ",", "1027.8`", ",", 
      "1024.3`", ",", "8.`", ",", "8.`", ",", "10.3`", ",", "11.6`", 
      ",", "\<\"Yes\"\>", ",", "4.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.2`", ",", "15.`", ",", "4.8`", ",", "0.2`", ",", "0.5`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"NNW\"\>", ",", "\<\"NW\"\>", 
      ",", "22.`", ",", "17.`", ",", "90.`", ",", "65.`", ",", "1022.9`", ",",
       "1022.1`", ",", "7.`", ",", "7.`", ",", "12.9`", ",", "13.7`", 
      ",", "\<\"Yes\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.3`", ",", "16.4`", ",", "0.2`", ",", "1.2`", ",", "8.5`", 
      ",", "\<\"NW\"\>", ",", "43.`", ",", "\<\"N\"\>", ",", "\<\"WNW\"\>", 
      ",", "15.`", ",", "24.`", ",", "86.`", ",", "48.`", ",", "1023.7`", ",",
       "1019.7`", ",", "1.`", ",", "1.`", ",", "11.2`", ",", "14.7`", 
      ",", "\<\"No\"\>", ",", "0.6`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.7`", ",", "13.`", ",", "0.6`", ",", "3.2`", ",", "7.1`", 
      ",", "\<\"WNW\"\>", ",", "54.`", ",", "\<\"W\"\>", ",", "\<\"WNW\"\>", 
      ",", "19.`", ",", "28.`", ",", "82.`", ",", "58.`", ",", "1013.7`", ",",
       "1014.1`", ",", "4.`", ",", "2.`", ",", "8.8`", ",", "11.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.`", ",", "11.8`", ",", "0.`", ",", "2.2`", ",", "7.2`", 
      ",", "\<\"S\"\>", ",", "48.`", ",", "\<\"NW\"\>", ",", "\<\"S\"\>", ",",
       "7.`", ",", "24.`", ",", "73.`", ",", "49.`", ",", "1025.7`", ",", 
      "1025.6`", ",", "4.`", ",", "1.`", ",", "6.5`", ",", "11.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.1`", ",", "14.7`", ",", "0.`", ",", "2.6`", ",", "8.2`", 
      ",", "\<\"S\"\>", ",", "43.`", ",", "\<\"S\"\>", ",", "\<\"SSW\"\>", 
      ",", "24.`", ",", "26.`", ",", "72.`", ",", "57.`", ",", "1029.`", ",", 
      "1026.3`", ",", "1.`", ",", "2.`", ",", "9.`", ",", "13.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.4`", ",", "16.9`", ",", "0.`", ",", "2.6`", ",", "5.9`", 
      ",", "\<\"SSW\"\>", ",", "26.`", ",", "\<\"SSW\"\>", ",", "\<\"ESE\"\>",
       ",", "17.`", ",", "9.`", ",", "78.`", ",", "51.`", ",", "1027.8`", ",",
       "1024.8`", ",", "7.`", ",", "2.`", ",", "9.5`", ",", "16.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.4`", ",", "15.5`", ",", "0.`", ",", "1.6`", ",", "5.8`", 
      ",", "\<\"NNE\"\>", ",", "20.`", ",", "\<\"SSW\"\>", ",", "\<\"NNE\"\>",
       ",", "7.`", ",", "7.`", ",", "80.`", ",", "58.`", ",", "1028.6`", ",", 
      "1025.5`", ",", "7.`", ",", "1.`", ",", "9.4`", ",", "14.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.4`", ",", "15.5`", ",", "0.`", ",", "1.`", ",", "4.7`", 
      ",", "\<\"N\"\>", ",", "13.`", ",", "\<\"N\"\>", ",", "\<\"NNW\"\>", 
      ",", "6.`", ",", "9.`", ",", "97.`", ",", "70.`", ",", "1026.7`", ",", 
      "1023.5`", ",", "5.`", ",", "7.`", ",", "4.`", ",", "15.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.`", ",", "15.9`", ",", "0.`", ",", "0.6`", ",", "2.`", 
      ",", "\<\"NNW\"\>", ",", "17.`", ",", "\<\"SE\"\>", ",", "\<\"SSE\"\>", 
      ",", "6.`", ",", "7.`", ",", "95.`", ",", "63.`", ",", "1022.5`", ",", 
      "1019.7`", ",", "8.`", ",", "7.`", ",", "8.4`", ",", "14.8`", 
      ",", "\<\"No\"\>", ",", "4.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.4`", ",", "11.7`", ",", "4.8`", ",", "0.6`", ",", "0.`", 
      ",", "\<\"W\"\>", ",", "26.`", ",", "\<\"WNW\"\>", ",", "\<\"WNW\"\>", 
      ",", "6.`", ",", "7.`", ",", "91.`", ",", "86.`", ",", "1021.2`", ",", 
      "1019.2`", ",", "8.`", ",", "7.`", ",", "9.7`", ",", "11.3`", 
      ",", "\<\"Yes\"\>", ",", "0.6`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.4`", ",", "13.9`", ",", "0.6`", ",", "0.8`", ",", "7.7`", 
      ",", "\<\"WNW\"\>", ",", "41.`", ",", "\<\"E\"\>", ",", "\<\"WNW\"\>", 
      ",", "6.`", ",", "19.`", ",", "99.`", ",", "59.`", ",", "1023.`", ",", 
      "1021.`", ",", "3.`", ",", "6.`", ",", "4.2`", ",", "12.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.2`", ",", "14.`", ",", "0.`", ",", "1.4`", ",", "7.6`", 
      ",", "\<\"NW\"\>", ",", "33.`", ",", "\<\"NNW\"\>", ",", "\<\"SE\"\>", 
      ",", "9.`", ",", "9.`", ",", "74.`", ",", "44.`", ",", "1026.4`", ",", 
      "1025.7`", ",", "5.`", ",", "4.`", ",", "8.8`", ",", "12.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.9`", ",", "12.9`", ",", "0.`", ",", "2.`", ",", "6.8`", 
      ",", "\<\"NW\"\>", ",", "24.`", ",", "\<\"W\"\>", ",", "\<\"N\"\>", ",",
       "7.`", ",", "15.`", ",", "92.`", ",", "53.`", ",", "1025.1`", ",", 
      "1022.1`", ",", "7.`", ",", "7.`", ",", "5.5`", ",", "12.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.8`", ",", "13.`", ",", "0.`", ",", "1.4`", ",", "4.1`", 
      ",", "\<\"WNW\"\>", ",", "41.`", ",", "\<\"S\"\>", ",", "\<\"NW\"\>", 
      ",", "2.`", ",", "28.`", ",", "95.`", ",", "69.`", ",", "1028.2`", ",", 
      "1024.2`", ",", "8.`", ",", "6.`", ",", "4.3`", ",", "11.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.3`", ",", "12.6`", ",", "0.`", ",", "2.`", ",", "9.`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"NA\"\>", ",", "\<\"WNW\"\>", 
      ",", "0.`", ",", "28.`", ",", "75.`", ",", "54.`", ",", "1026.3`", ",", 
      "1021.9`", ",", "3.`", ",", "1.`", ",", "7.8`", ",", "11.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.3`", ",", "11.8`", ",", "0.`", ",", "2.6`", ",", "6.5`", 
      ",", "\<\"WNW\"\>", ",", "63.`", ",", "\<\"NNW\"\>", ",", "\<\"WNW\"\>",
       ",", "20.`", ",", "28.`", ",", "81.`", ",", "48.`", ",", "1018.7`", 
      ",", "1020.4`", ",", "6.`", ",", "1.`", ",", "7.`", ",", "11.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.5`", ",", "14.3`", ",", "0.`", ",", "3.4`", ",", "8.9`", 
      ",", "\<\"NNW\"\>", ",", "35.`", ",", "\<\"N\"\>", ",", "\<\"NNW\"\>", 
      ",", "7.`", ",", "24.`", ",", "71.`", ",", "51.`", ",", "1027.8`", ",", 
      "1025.`", ",", "1.`", ",", "1.`", ",", "6.7`", ",", "12.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5`"}], ",", "14.8`", ",", "0.`", ",", "2.2`", ",", 
      "8.`", ",", "\<\"NW\"\>", ",", "15.`", ",", "\<\"N\"\>", 
      ",", "\<\"NW\"\>", ",", "6.`", ",", "9.`", ",", "90.`", ",", "41.`", 
      ",", "1029.1`", ",", "1026.`", ",", "4.`", ",", "3.`", ",", "2.1`", ",",
       "14.5`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.2`", ",", "16.`", ",", "0.`", ",", "1.4`", ",", "6.1`", 
      ",", "\<\"NNW\"\>", ",", "31.`", ",", "\<\"S\"\>", ",", "\<\"N\"\>", 
      ",", "6.`", ",", "22.`", ",", "84.`", ",", "38.`", ",", "1024.6`", ",", 
      "1020.9`", ",", "7.`", ",", "6.`", ",", "6.5`", ",", "14.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.5`", ",", "15.4`", ",", "0.`", ",", "2.4`", ",", "6.4`", 
      ",", "\<\"W\"\>", ",", "70.`", ",", "\<\"NW\"\>", ",", "\<\"NNW\"\>", 
      ",", "22.`", ",", "28.`", ",", "53.`", ",", "68.`", ",", "1017.2`", ",",
       "1010.2`", ",", "1.`", ",", "7.`", ",", "9.7`", ",", "12.9`", 
      ",", "\<\"No\"\>", ",", "2.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.3`", ",", "11.7`", ",", "2.`", ",", "3.6`", ",", "5.6`", 
      ",", "\<\"NW\"\>", ",", "78.`", ",", "\<\"NW\"\>", ",", "\<\"W\"\>", 
      ",", "33.`", ",", "33.`", ",", "73.`", ",", "56.`", ",", "1012.1`", ",",
       "1012.3`", ",", "3.`", ",", "1.`", ",", "6.9`", ",", "11.1`", 
      ",", "\<\"Yes\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.6`", ",", "13.1`", ",", "0.2`", ",", "2.8`", ",", "8.2`", 
      ",", "\<\"WNW\"\>", ",", "61.`", ",", "\<\"NNW\"\>", ",", "\<\"WNW\"\>",
       ",", "31.`", ",", "30.`", ",", "62.`", ",", "53.`", ",", "1013.5`", 
      ",", "1014.`", ",", "5.`", ",", "1.`", ",", "10.6`", ",", "12.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.6`"}], ",", "11.5`", ",", "0.`", ",", "2.8`", ",", 
      "8.9`", ",", "\<\"N\"\>", ",", "31.`", ",", "\<\"ESE\"\>", 
      ",", "\<\"NNW\"\>", ",", "7.`", ",", "20.`", ",", "82.`", ",", "53.`", 
      ",", "1024.3`", ",", "1021.9`", ",", "1.`", ",", "1.`", ",", "3.`", ",",
       "11.1`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.1`"}], ",", "12.`", ",", "0.`", ",", "1.8`", ",", 
      "3.9`", ",", "\<\"ESE\"\>", ",", "35.`", ",", "\<\"SSW\"\>", 
      ",", "\<\"NE\"\>", ",", "4.`", ",", "13.`", ",", "80.`", ",", "52.`", 
      ",", "1030.5`", ",", "1030.`", ",", "1.`", ",", "6.`", ",", "5.9`", ",",
       "10.2`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1`"}], ",", "14.2`", ",", "0.`", ",", "1.4`", ",", 
      "7.`", ",", "\<\"W\"\>", ",", "13.`", ",", "\<\"NA\"\>", 
      ",", "\<\"WNW\"\>", ",", "\<\"NA\"\>", ",", "2.`", ",", "81.`", ",", 
      "55.`", ",", "1032.9`", ",", "1028.9`", ",", "1.`", ",", "2.`", ",", 
      "4.7`", ",", "12.6`", ",", "\<\"No\"\>", ",", "0.`", 
      ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.6`"}], ",", "14.`", ",", "0.`", ",", "1.2`", ",", 
      "7.1`", ",", "\<\"NW\"\>", ",", "41.`", ",", "\<\"WNW\"\>", 
      ",", "\<\"NNW\"\>", ",", "2.`", ",", "22.`", ",", "86.`", ",", "59.`", 
      ",", "1030.`", ",", "1026.3`", ",", "5.`", ",", "5.`", ",", "3.7`", ",",
       "13.6`", ",", "\<\"No\"\>", ",", "0.8`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "3.`", ",", "11.1`", ",", "0.8`", ",", "1.4`", ",", "0.2`", 
      ",", "\<\"W\"\>", ",", "35.`", ",", "\<\"NA\"\>", ",", "\<\"N\"\>", ",",
       "0.`", ",", "13.`", ",", "99.`", ",", "96.`", ",", "1024.4`", ",", 
      "1021.1`", ",", "7.`", ",", "8.`", ",", "6.3`", ",", "8.6`", 
      ",", "\<\"No\"\>", ",", "16.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.9`", ",", "9.5`", ",", "16.8`", ",", "1.4`", ",", "6.5`", 
      ",", "\<\"NW\"\>", ",", "35.`", ",", "\<\"NA\"\>", ",", "\<\"NW\"\>", 
      ",", "0.`", ",", "15.`", ",", "93.`", ",", "72.`", ",", "1021.6`", ",", 
      "1019.6`", ",", "6.`", ",", "6.`", ",", "5.5`", ",", "7.4`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.3`"}], ",", "8.8`", ",", "0.`", ",", "0.8`", ",", 
      "2.8`", ",", "\<\"WNW\"\>", ",", "39.`", ",", "\<\"NW\"\>", 
      ",", "\<\"NW\"\>", ",", "9.`", ",", "15.`", ",", "95.`", ",", "68.`", 
      ",", "1020.`", ",", "1016.8`", ",", "7.`", ",", "6.`", ",", "1.8`", ",",
       "8.`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.8`", ",", "8.7`", ",", "0.`", ",", "1.8`", ",", "1.2`", 
      ",", "\<\"NW\"\>", ",", "65.`", ",", "\<\"NW\"\>", ",", "\<\"NW\"\>", 
      ",", "31.`", ",", "35.`", ",", "83.`", ",", "85.`", ",", "1014.6`", ",",
       "1010.5`", ",", "7.`", ",", "7.`", ",", "6.`", ",", "6.9`", 
      ",", "\<\"No\"\>", ",", "1.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.9`", ",", "8.4`", ",", "1.6`", ",", "1.4`", ",", "7.7`", 
      ",", "\<\"NW\"\>", ",", "59.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "20.`", ",", "31.`", ",", "76.`", ",", "66.`", ",", "1016.7`", ",",
       "1018.2`", ",", "7.`", ",", "3.`", ",", "5.5`", ",", "7.1`", 
      ",", "\<\"Yes\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.6`"}], ",", "11.1`", ",", "0.2`", ",", "1.4`", ",", 
      "6.5`", ",", "\<\"N\"\>", ",", "20.`", ",", "\<\"E\"\>", 
      ",", "\<\"NNW\"\>", ",", "2.`", ",", "7.`", ",", "87.`", ",", "54.`", 
      ",", "1027.1`", ",", "1022.7`", ",", "1.`", ",", "7.`", ",", "0.8`", 
      ",", "9.9`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "0.5`", ",", "11.`", ",", "0.`", ",", "1.`", ",", "0.9`", 
      ",", "\<\"NNW\"\>", ",", "31.`", ",", "\<\"NA\"\>", ",", "\<\"NW\"\>", 
      ",", "0.`", ",", "15.`", ",", "92.`", ",", "69.`", ",", "1024.4`", ",", 
      "1021.9`", ",", "7.`", ",", "7.`", ",", "2.8`", ",", "10.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.7`", ",", "16.5`", ",", "0.`", ",", "0.6`", ",", "8.9`", 
      ",", "\<\"NNW\"\>", ",", "41.`", ",", "\<\"SW\"\>", ",", "\<\"NNW\"\>", 
      ",", "7.`", ",", "22.`", ",", "93.`", ",", "51.`", ",", "1021.8`", ",", 
      "1019.`", ",", "5.`", ",", "1.`", ",", "6.7`", ",", "15.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.7`"}], ",", "13.6`", ",", "0.`", ",", "1.8`", ",", 
      "5.2`", ",", "\<\"NNW\"\>", ",", "28.`", ",", "\<\"NA\"\>", 
      ",", "\<\"NNW\"\>", ",", "\<\"NA\"\>", ",", "17.`", ",", "83.`", ",", 
      "46.`", ",", "1023.`", ",", "1020.1`", ",", "1.`", ",", "7.`", ",", 
      "3.9`", ",", "13.3`", ",", "\<\"No\"\>", ",", "0.2`", 
      ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.9`"}], ",", "12.8`", ",", "0.2`", ",", "2.`", ",", 
      "1.9`", ",", "\<\"N\"\>", ",", "17.`", ",", "\<\"SE\"\>", 
      ",", "\<\"NNW\"\>", ",", "6.`", ",", "9.`", ",", "99.`", ",", "62.`", 
      ",", "1024.1`", ",", "1020.8`", ",", "7.`", ",", "7.`", ",", "2.7`", 
      ",", "12.1`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.8`"}], ",", "11.5`", ",", "0.`", ",", "0.6`", ",", 
      "4.7`", ",", "\<\"NNW\"\>", ",", "41.`", ",", "\<\"NA\"\>", 
      ",", "\<\"NNW\"\>", ",", "0.`", ",", "24.`", ",", "99.`", ",", "55.`", 
      ",", "1019.7`", ",", "1013.9`", ",", "7.`", ",", "3.`", ",", "1.3`", 
      ",", "11.`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "1.3`", ",", "10.6`", ",", "0.`", ",", "0.8`", ",", "5.6`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"NNW\"\>", ",", "\<\"WNW\"\>", 
      ",", "24.`", ",", "33.`", ",", "75.`", ",", "73.`", ",", "1010.8`", ",",
       "1009.4`", ",", "3.`", ",", "5.`", ",", "7.7`", ",", "8.2`", 
      ",", "\<\"No\"\>", ",", "1.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.4`", ",", "11.6`", ",", "1.2`", ",", "2.2`", ",", "8.1`", 
      ",", "\<\"NW\"\>", ",", "35.`", ",", "\<\"NNW\"\>", ",", "\<\"NW\"\>", 
      ",", "15.`", ",", "22.`", ",", "71.`", ",", "48.`", ",", "1016.7`", ",",
       "1014.9`", ",", "1.`", ",", "3.`", ",", "6.`", ",", "10.7`", 
      ",", "\<\"Yes\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.1`"}], ",", "11.`", ",", "0.2`", ",", "1.8`", ",", 
      "0.`", ",", "\<\"WNW\"\>", ",", "41.`", ",", "\<\"NA\"\>", 
      ",", "\<\"NE\"\>", ",", "0.`", ",", "6.`", ",", "92.`", ",", "87.`", 
      ",", "1014.4`", ",", "1009.`", ",", "7.`", ",", "8.`", ",", "2.4`", ",",
       "8.7`", ",", "\<\"No\"\>", ",", "19.2`", ",", "\<\"Yes\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "2.3`", ",", "11.6`", ",", "19.2`", ",", "1.8`", ",", "7.5`", 
      ",", "\<\"WNW\"\>", ",", "54.`", ",", "\<\"WNW\"\>", ",", "\<\"WNW\"\>",
       ",", "26.`", ",", "31.`", ",", "78.`", ",", "56.`", ",", "1006.9`", 
      ",", "1010.3`", ",", "7.`", ",", "3.`", ",", "7.6`", ",", "11.2`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.2`"}], ",", "11.6`", ",", "0.`", ",", "1.4`", ",", 
      "9.2`", ",", "\<\"S\"\>", ",", "39.`", ",", "\<\"E\"\>", 
      ",", "\<\"SSW\"\>", ",", "2.`", ",", "28.`", ",", "68.`", ",", "33.`", 
      ",", "1025.7`", ",", "1025.8`", ",", "1.`", ",", "1.`", ",", "3.4`", 
      ",", "11.`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.5`"}], ",", "11.2`", ",", "0.`", ",", "1.6`", ",", 
      "7.7`", ",", "\<\"ESE\"\>", ",", "26.`", ",", "\<\"N\"\>", 
      ",", "\<\"ESE\"\>", ",", "6.`", ",", "11.`", ",", "76.`", ",", "48.`", 
      ",", "1033.5`", ",", "1031.1`", ",", "1.`", ",", "5.`", ",", "3.6`", 
      ",", "10.1`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.`"}], ",", "12.2`", ",", "0.`", ",", "1.6`", ",", 
      "8.4`", ",", "\<\"ESE\"\>", ",", "30.`", ",", "\<\"SE\"\>", 
      ",", "\<\"E\"\>", ",", "7.`", ",", "13.`", ",", "82.`", ",", "51.`", 
      ",", "1032.2`", ",", "1027.4`", ",", "3.`", ",", "5.`", ",", "3.7`", 
      ",", "10.8`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.1`"}], ",", "12.9`", ",", "0.`", ",", "1.2`", ",", 
      "8.1`", ",", "\<\"S\"\>", ",", "31.`", ",", "\<\"SE\"\>", 
      ",", "\<\"SE\"\>", ",", "7.`", ",", "13.`", ",", "92.`", ",", "25.`", 
      ",", "1025.7`", ",", "1020.9`", ",", "2.`", ",", "1.`", ",", "1.4`", 
      ",", "12.3`", ",", "\<\"No\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], 
     "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.`"}], ",", "11.3`", ",", "0.2`", ",", "2.2`", ",", 
      "5.9`", ",", "\<\"WNW\"\>", ",", "33.`", ",", "\<\"SE\"\>", 
      ",", "\<\"WNW\"\>", ",", "2.`", ",", "19.`", ",", "88.`", ",", "50.`", 
      ",", "1020.`", ",", "1015.3`", ",", "7.`", ",", "7.`", ",", "1.2`", ",",
       "10.9`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.3`"}], ",", "9.7`", ",", "0.`", ",", "1.4`", ",", 
      "1.9`", ",", "\<\"SSE\"\>", ",", "28.`", ",", "\<\"SSE\"\>", 
      ",", "\<\"WSW\"\>", ",", "6.`", ",", "13.`", ",", "92.`", ",", "66.`", 
      ",", "1013.8`", ",", "1010.`", ",", "7.`", ",", "7.`", ",", "1.`", ",", 
      "7.8`", ",", "\<\"No\"\>", ",", "1.4`", ",", "\<\"Yes\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.6`"}], ",", "10.7`", ",", "1.4`", ",", "0.8`", ",", 
      "9.1`", ",", "\<\"S\"\>", ",", "59.`", ",", "\<\"SSW\"\>", 
      ",", "\<\"S\"\>", ",", "28.`", ",", "37.`", ",", "74.`", ",", "56.`", 
      ",", "1014.1`", ",", "1014.9`", ",", "2.`", ",", "4.`", ",", "5.6`", 
      ",", "9.6`", ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "0.8`", ",", "12.2`", ",", "0.`", ",", "1.8`", ",", "8.6`", 
      ",", "\<\"NA\"\>", ",", "\<\"NA\"\>", ",", "\<\"S\"\>", 
      ",", "\<\"S\"\>", ",", "19.`", ",", "22.`", ",", "69.`", ",", "49.`", 
      ",", "1020.9`", ",", "1016.8`", ",", "3.`", ",", "1.`", ",", "6.5`", 
      ",", "11.2`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.8`"}], ",", "12.2`", ",", "0.`", ",", "2.6`", ",", 
      "8.7`", ",", "\<\"NNW\"\>", ",", "31.`", ",", "\<\"NA\"\>", 
      ",", "\<\"NNW\"\>", ",", "0.`", ",", "15.`", ",", "84.`", ",", "48.`", 
      ",", "1018.3`", ",", "1014.6`", ",", "1.`", ",", "1.`", ",", "2.7`", 
      ",", "11.5`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.8`"}], ",", "14.1`", ",", "0.`", ",", "2.2`", ",", 
      "6.8`", ",", "\<\"WNW\"\>", ",", "48.`", ",", "\<\"NA\"\>", 
      ",", "\<\"WNW\"\>", ",", "0.`", ",", "26.`", ",", "81.`", ",", "38.`", 
      ",", "1017.3`", ",", "1012.9`", ",", "1.`", ",", "7.`", ",", "3.`", ",",
       "12.8`", ",", "\<\"No\"\>", ",", "1.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "3.`", ",", "9.7`", ",", "1.`", ",", "2.6`", ",", "0.7`", 
      ",", "\<\"W\"\>", ",", "65.`", ",", "\<\"NW\"\>", ",", "\<\"NW\"\>", 
      ",", "19.`", ",", "28.`", ",", "64.`", ",", "82.`", ",", "1005.1`", ",",
       "1001.3`", ",", "8.`", ",", "7.`", ",", "9.6`", ",", "8.6`", 
      ",", "\<\"No\"\>", ",", "6.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.4`", ",", "11.5`", ",", "6.6`", ",", "2.2`", ",", "9.3`", 
      ",", "\<\"WNW\"\>", ",", "57.`", ",", "\<\"NNW\"\>", ",", "\<\"WNW\"\>",
       ",", "28.`", ",", "31.`", ",", "67.`", ",", "56.`", ",", "1013.9`", 
      ",", "1014.9`", ",", "1.`", ",", "1.`", ",", "6.9`", ",", "10.5`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.3`", ",", "12.8`", ",", "0.`", ",", "2.2`", ",", "9.6`", 
      ",", "\<\"WNW\"\>", ",", "35.`", ",", "\<\"ENE\"\>", ",", "\<\"WNW\"\>",
       ",", "4.`", ",", "24.`", ",", "70.`", ",", "48.`", ",", "1021.2`", ",",
       "1018.1`", ",", "1.`", ",", "1.`", ",", "7.8`", ",", "11.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.`"}], ",", "12.3`", ",", "0.`", ",", "2.4`", ",", 
      "5.8`", ",", "\<\"W\"\>", ",", "31.`", ",", "\<\"ESE\"\>", 
      ",", "\<\"W\"\>", ",", "4.`", ",", "19.`", ",", "81.`", ",", "60.`", 
      ",", "1020.9`", ",", "1018.3`", ",", "1.`", ",", "7.`", ",", "2.6`", 
      ",", "9.1`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.9`"}], ",", "10.9`", ",", "0.`", ",", "1.8`", ",", 
      "4.2`", ",", "\<\"S\"\>", ",", "50.`", ",", "\<\"NA\"\>", 
      ",", "\<\"SSW\"\>", ",", "0.`", ",", "26.`", ",", "78.`", ",", "72.`", 
      ",", "1020.8`", ",", "1019.2`", ",", "3.`", ",", "8.`", ",", "5.5`", 
      ",", "7.2`", ",", "\<\"No\"\>", ",", "4.`", ",", "\<\"Yes\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "4.8`", ",", "14.1`", ",", "4.`", ",", "1.6`", ",", "8.3`", 
      ",", "\<\"S\"\>", ",", "48.`", ",", "\<\"S\"\>", ",", "\<\"SSE\"\>", 
      ",", "30.`", ",", "22.`", ",", "67.`", ",", "48.`", ",", "1018.2`", ",",
       "1017.6`", ",", "5.`", ",", "1.`", ",", "8.9`", ",", "13.6`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.6`"}], ",", "11.1`", ",", "0.`", ",", "3.`", ",", "5.`",
       ",", "\<\"NNW\"\>", ",", "41.`", ",", "\<\"SE\"\>", ",", "\<\"N\"\>", 
      ",", "7.`", ",", "26.`", ",", "89.`", ",", "78.`", ",", "1018.4`", ",", 
      "1015.9`", ",", "7.`", ",", "7.`", ",", "3.8`", ",", "5.7`", 
      ",", "\<\"No\"\>", ",", "1.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.1`", ",", "12.5`", ",", "1.2`", ",", "1.4`", ",", "7.2`", 
      ",", "\<\"N\"\>", ",", "43.`", ",", "\<\"WNW\"\>", ",", "\<\"N\"\>", 
      ",", "6.`", ",", "30.`", ",", "69.`", ",", "62.`", ",", "1019.8`", ",", 
      "1019.1`", ",", "6.`", ",", "2.`", ",", "7.6`", ",", "11.3`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.9`"}], ",", "9.6`", ",", "0.`", ",", "1.8`", ",", 
      "7.3`", ",", "\<\"NW\"\>", ",", "43.`", ",", "\<\"N\"\>", 
      ",", "\<\"NW\"\>", ",", "6.`", ",", "24.`", ",", "76.`", ",", "70.`", 
      ",", "1022.4`", ",", "1019.`", ",", "1.`", ",", "6.`", ",", "5.6`", ",",
       "8.1`", ",", "\<\"No\"\>", ",", "0.4`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.5`"}], ",", "7.6`", ",", "0.4`", ",", "2.4`", ",", 
      "4.7`", ",", "\<\"NW\"\>", ",", "50.`", ",", "\<\"NW\"\>", 
      ",", "\<\"NW\"\>", ",", "30.`", ",", "24.`", ",", "92.`", ",", "68.`", 
      ",", "1014.8`", ",", "1012.6`", ",", "8.`", ",", "6.`", ",", "3.3`", 
      ",", "5.1`", ",", "\<\"No\"\>", ",", "0.4`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.3`"}], ",", "9.3`", ",", "0.4`", ",", "1.4`", ",", 
      "9.9`", ",", "\<\"N\"\>", ",", "39.`", ",", "\<\"NNW\"\>", 
      ",", "\<\"N\"\>", ",", "9.`", ",", "30.`", ",", "72.`", ",", "60.`", 
      ",", "1017.4`", ",", "1016.6`", ",", "1.`", ",", "1.`", ",", "4.7`", 
      ",", "8.3`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
     "0.1`", ",", "10.4`", ",", "0.`", ",", "1.8`", ",", "7.9`", 
      ",", "\<\"WNW\"\>", ",", "59.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "22.`", ",", "24.`", ",", "69.`", ",", "63.`", ",", "1021.3`", ",",
       "1020.1`", ",", "1.`", ",", "6.`", ",", "7.`", ",", "8.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.3`", ",", "12.2`", ",", "0.`", ",", "2.8`", ",", "9.8`", 
      ",", "\<\"WNW\"\>", ",", "44.`", ",", "\<\"WNW\"\>", ",", "\<\"NW\"\>", 
      ",", "20.`", ",", "30.`", ",", "58.`", ",", "41.`", ",", "1024.2`", ",",
       "1022.4`", ",", "1.`", ",", "1.`", ",", "6.5`", ",", "10.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.1`", ",", "10.7`", ",", "0.`", ",", "3.4`", ",", "9.4`", 
      ",", "\<\"NW\"\>", ",", "59.`", ",", "\<\"NNW\"\>", ",", "\<\"WNW\"\>", 
      ",", "28.`", ",", "39.`", ",", "59.`", ",", "45.`", ",", "1022.2`", ",",
       "1018.2`", ",", "1.`", ",", "1.`", ",", "6.2`", ",", "9.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.6`", ",", "14.7`", ",", "0.`", ",", "4.4`", ",", "8.4`", 
      ",", "\<\"WNW\"\>", ",", "52.`", ",", "\<\"WNW\"\>", ",", "\<\"NW\"\>", 
      ",", "28.`", ",", "33.`", ",", "54.`", ",", "51.`", ",", "1014.7`", ",",
       "1012.4`", ",", "1.`", ",", "3.`", ",", "9.2`", ",", "12.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.7`", ",", "14.2`", ",", "0.`", ",", "3.`", ",", "10.`", 
      ",", "\<\"NNW\"\>", ",", "46.`", ",", "\<\"WNW\"\>", ",", "\<\"WSW\"\>",
       ",", "24.`", ",", "28.`", ",", "52.`", ",", "27.`", ",", "1012.7`", 
      ",", "1011.8`", ",", "1.`", ",", "1.`", ",", "8.7`", ",", "13.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.3`"}], ",", "11.6`", ",", "0.`", ",", "4.`", ",", 
      "10.4`", ",", "\<\"N\"\>", ",", "30.`", ",", "\<\"ESE\"\>", 
      ",", "\<\"NNW\"\>", ",", "9.`", ",", "17.`", ",", "59.`", ",", "35.`", 
      ",", "1023.3`", ",", "1022.`", ",", "0.`", ",", "1.`", ",", "4.5`", ",",
       "10.8`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.4`"}], ",", "12.5`", ",", "0.`", ",", "3.`", ",", 
      "6.8`", ",", "\<\"SSE\"\>", ",", "48.`", ",", "\<\"NNW\"\>", 
      ",", "\<\"WNW\"\>", ",", "7.`", ",", "30.`", ",", "89.`", ",", "30.`", 
      ",", "1025.2`", ",", "1021.8`", ",", "6.`", ",", "7.`", ",", "1.4`", 
      ",", "11.2`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "5.3`"}], ",", "13.1`", ",", "0.`", ",", "2.2`", ",", 
      "7.9`", ",", "\<\"NW\"\>", ",", "33.`", ",", "\<\"N\"\>", 
      ",", "\<\"NNW\"\>", ",", "4.`", ",", "20.`", ",", "94.`", ",", "47.`", 
      ",", "1029.6`", ",", "1025.6`", ",", "6.`", ",", "6.`", ",", "0.1`", 
      ",", "12.2`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "0.`", ",", "14.`", ",", "0.`", ",", "2.4`", ",", "4.7`", 
      ",", "\<\"WNW\"\>", ",", "39.`", ",", "\<\"NNW\"\>", ",", "\<\"WNW\"\>",
       ",", "13.`", ",", "24.`", ",", "60.`", ",", "36.`", ",", "1027.3`", 
      ",", "1024.4`", ",", "7.`", ",", "7.`", ",", "7.9`", ",", "12.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.4`", ",", "14.1`", ",", "0.`", ",", "3.`", ",", "1.8`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"NNW\"\>", ",", "\<\"NW\"\>", 
      ",", "15.`", ",", "30.`", ",", "50.`", ",", "27.`", ",", "1021.4`", ",",
       "1017.8`", ",", "8.`", ",", "8.`", ",", "8.6`", ",", "13.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.6`"}], ",", "12.2`", ",", "0.`", ",", "2.6`", ",", 
      "7.`", ",", "\<\"S\"\>", ",", "59.`", ",", "\<\"S\"\>", 
      ",", "\<\"S\"\>", ",", "15.`", ",", "26.`", ",", "66.`", ",", "44.`", 
      ",", "1018.5`", ",", "1016.8`", ",", "8.`", ",", "5.`", ",", "6.9`", 
      ",", "10.7`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "2.3`", ",", "11.6`", ",", "0.`", ",", "5.4`", ",", "9.5`", 
      ",", "\<\"S\"\>", ",", "54.`", ",", "\<\"SSW\"\>", ",", "\<\"ESE\"\>", 
      ",", "30.`", ",", "17.`", ",", "49.`", ",", "38.`", ",", "1025.9`", ",",
       "1025.5`", ",", "1.`", ",", "1.`", ",", "6.7`", ",", "11.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.7`"}], ",", "14.4`", ",", "0.`", ",", "2.6`", ",", 
      "10.4`", ",", "\<\"NNW\"\>", ",", "22.`", ",", "\<\"N\"\>", 
      ",", "\<\"NNW\"\>", ",", "2.`", ",", "11.`", ",", "64.`", ",", "28.`", 
      ",", "1031.`", ",", "1028.`", ",", "0.`", ",", "0.`", ",", "5.2`", ",", 
      "14.`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.9`"}], ",", "14.2`", ",", "0.`", ",", "2.6`", ",", 
      "7.8`", ",", "\<\"WNW\"\>", ",", "31.`", ",", "\<\"SSW\"\>", 
      ",", "\<\"N\"\>", ",", "7.`", ",", "19.`", ",", "82.`", ",", "34.`", 
      ",", "1030.2`", ",", "1024.4`", ",", "7.`", ",", "6.`", ",", "5.3`", 
      ",", "12.8`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "1.5`"}], ",", "17.3`", ",", "0.`", ",", "2.8`", ",", 
      "9.`", ",", "\<\"NW\"\>", ",", "48.`", ",", "\<\"NA\"\>", 
      ",", "\<\"WNW\"\>", ",", "0.`", ",", "26.`", ",", "77.`", ",", "23.`", 
      ",", "1023.9`", ",", "1020.3`", ",", "5.`", ",", "7.`", ",", "4.8`", 
      ",", "15.8`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.3`"}], ",", "15.1`", ",", "0.`", ",", "3.`", 
      ",", "\<\"NA\"\>", ",", "\<\"SSW\"\>", ",", "30.`", ",", "\<\"SSE\"\>", 
      ",", "\<\"SE\"\>", ",", "9.`", ",", "13.`", ",", "57.`", ",", "23.`", 
      ",", "1027.7`", ",", "1025.5`", ",", "1.`", ",", "1.`", ",", "7.9`", 
      ",", "14.4`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.1`"}], ",", "14.7`", ",", "0.`", ",", "3.4`", ",", 
      "9.9`", ",", "\<\"ENE\"\>", ",", "30.`", ",", "\<\"SE\"\>", 
      ",", "\<\"NE\"\>", ",", "6.`", ",", "15.`", ",", "60.`", ",", "43.`", 
      ",", "1029.9`", ",", "1025.9`", ",", "1.`", ",", "5.`", ",", "7.2`", 
      ",", "12.3`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.2`"}], ",", "16.2`", ",", "0.`", ",", "3.4`", ",", 
      "5.9`", ",", "\<\"E\"\>", ",", "28.`", ",", "\<\"NA\"\>", 
      ",", "\<\"ENE\"\>", ",", "0.`", ",", "20.`", ",", "74.`", ",", "45.`", 
      ",", "1027.6`", ",", "1022.9`", ",", "7.`", ",", "6.`", ",", "7.3`", 
      ",", "14.6`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "0.5`", ",", "16.3`", ",", "0.`", ",", "1.8`", ",", "4.1`", 
      ",", "\<\"NNW\"\>", ",", "39.`", ",", "\<\"SSW\"\>", ",", "\<\"WSW\"\>",
       ",", "4.`", ",", "6.`", ",", "81.`", ",", "45.`", ",", "1023.7`", ",", 
      "1017.5`", ",", "7.`", ",", "8.`", ",", "6.2`", ",", "15.4`", 
      ",", "\<\"No\"\>", ",", "4.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.1`", ",", "17.2`", ",", "4.`", ",", "2.2`", ",", "2.4`", 
      ",", "\<\"NW\"\>", ",", "59.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "24.`", ",", "15.`", ",", "89.`", ",", "85.`", ",", "1011.2`", ",",
       "1010.4`", ",", "7.`", ",", "7.`", ",", "13.5`", ",", "12.6`", 
      ",", "\<\"Yes\"\>", ",", "7.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.1`", ",", "14.8`", ",", "7.4`", ",", "2.6`", ",", "10.8`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"NW\"\>", ",", "\<\"W\"\>", 
      ",", "20.`", ",", "28.`", ",", "60.`", ",", "34.`", ",", "1023.2`", ",",
       "1021.7`", ",", "1.`", ",", "1.`", ",", "8.8`", ",", "14.3`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.1`", ",", "16.7`", ",", "0.`", ",", "3.8`", ",", "10.2`", 
      ",", "\<\"WNW\"\>", ",", "28.`", ",", "\<\"ESE\"\>", ",", "\<\"NNE\"\>",
       ",", "2.`", ",", "13.`", ",", "69.`", ",", "44.`", ",", "1027.`", ",", 
      "1024.8`", ",", "1.`", ",", "4.`", ",", "9.`", ",", "14.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.2`", ",", "12.1`", ",", "0.`", ",", "2.8`", ",", "3.9`", 
      ",", "\<\"ESE\"\>", ",", "41.`", ",", "\<\"SE\"\>", ",", "\<\"SE\"\>", 
      ",", "17.`", ",", "20.`", ",", "69.`", ",", "51.`", ",", "1033.6`", ",",
       "1033.2`", ",", "7.`", ",", "5.`", ",", "9.3`", ",", "11.1`", 
      ",", "\<\"No\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.4`", ",", "11.3`", ",", "0.2`", ",", "2.2`", ",", "0.6`", 
      ",", "\<\"ENE\"\>", ",", "35.`", ",", "\<\"SE\"\>", ",", "\<\"ESE\"\>", 
      ",", "11.`", ",", "17.`", ",", "65.`", ",", "61.`", ",", "1035.7`", ",",
       "1031.9`", ",", "7.`", ",", "7.`", ",", "8.3`", ",", "10.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.8`", ",", "12.4`", ",", "0.`", ",", "1.6`", ",", "0.`", 
      ",", "\<\"SE\"\>", ",", "26.`", ",", "\<\"SSE\"\>", ",", "\<\"ESE\"\>", 
      ",", "13.`", ",", "13.`", ",", "79.`", ",", "73.`", ",", "1027.3`", ",",
       "1023.5`", ",", "8.`", ",", "8.`", ",", "8.7`", ",", "10.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.3`", ",", "16.1`", ",", "0.`", ",", "1.8`", ",", "2.9`", 
      ",", "\<\"S\"\>", ",", "35.`", ",", "\<\"S\"\>", ",", "\<\"S\"\>", ",", 
      "19.`", ",", "24.`", ",", "63.`", ",", "33.`", ",", "1019.7`", ",", 
      "1016.2`", ",", "7.`", ",", "7.`", ",", "10.`", ",", "15.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.9`"}], ",", "16.7`", ",", "0.`", ",", "2.8`", ",", 
      "8.6`", ",", "\<\"NW\"\>", ",", "35.`", ",", "\<\"WNW\"\>", 
      ",", "\<\"NW\"\>", ",", "7.`", ",", "22.`", ",", "84.`", ",", "33.`", 
      ",", "1018.1`", ",", "1013.9`", ",", "7.`", ",", "7.`", ",", "6.4`", 
      ",", "15.5`", ",", "\<\"No\"\>", ",", "1.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "0.2`", ",", "15.5`", ",", "1.`", ",", "2.4`", ",", "9.4`", 
      ",", "\<\"SE\"\>", ",", "31.`", ",", "\<\"NA\"\>", ",", "\<\"WNW\"\>", 
      ",", "0.`", ",", "11.`", ",", "79.`", ",", "37.`", ",", "1020.6`", ",", 
      "1018.2`", ",", "1.`", ",", "1.`", ",", "7.2`", ",", "15.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "3.7`"}], ",", "14.7`", ",", "0.`", ",", "3.4`", ",", 
      "10.9`", ",", "\<\"SSE\"\>", ",", "43.`", ",", "\<\"SE\"\>", 
      ",", "\<\"N\"\>", ",", "9.`", ",", "22.`", ",", "53.`", ",", "25.`", 
      ",", "1025.8`", ",", "1020.9`", ",", "0.`", ",", "0.`", ",", "5.5`", 
      ",", "13.4`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.7`"}], ",", "15.2`", ",", "0.`", ",", "4.`", ",", 
      "9.7`", ",", "\<\"N\"\>", ",", "30.`", ",", "\<\"SW\"\>", 
      ",", "\<\"WNW\"\>", ",", "6.`", ",", "20.`", ",", "62.`", ",", "35.`", 
      ",", "1022.8`", ",", "1017.9`", ",", "1.`", ",", "2.`", ",", "6.3`", 
      ",", "14.9`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "2.5`"}], ",", "16.6`", ",", "0.`", ",", "3.`", ",", 
      "9.9`", ",", "\<\"NW\"\>", ",", "31.`", ",", "\<\"NE\"\>", 
      ",", "\<\"N\"\>", ",", "4.`", ",", "20.`", ",", "68.`", ",", "20.`", 
      ",", "1018.8`", ",", "1013.9`", ",", "1.`", ",", "1.`", ",", "6.`", ",",
       "16.3`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], 
    ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"-", "0.5`"}], ",", "21.6`", ",", "0.`", ",", "5.`", ",", 
      "9.9`", ",", "\<\"NW\"\>", ",", "48.`", ",", "\<\"NNE\"\>", 
      ",", "\<\"NW\"\>", ",", "9.`", ",", "26.`", ",", "44.`", ",", "27.`", 
      ",", "1014.6`", ",", "1010.9`", ",", "7.`", ",", "5.`", ",", "11.9`", 
      ",", "21.5`", ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}],
     ",", 
    RowBox[{"{", 
     RowBox[{
     "9.`", ",", "25.5`", ",", "0.`", ",", "5.6`", ",", "10.2`", 
      ",", "\<\"NW\"\>", ",", "50.`", ",", "\<\"N\"\>", ",", "\<\"NW\"\>", 
      ",", "20.`", ",", "26.`", ",", "47.`", ",", "31.`", ",", "1015.3`", ",",
       "1011.4`", ",", "3.`", ",", "1.`", ",", "17.5`", ",", "25.1`", 
      ",", "\<\"No\"\>", ",", "9.8`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "13.1`", ",", "19.4`", ",", "9.8`", ",", "8.8`", ",", "6.`", 
      ",", "\<\"NNW\"\>", ",", "67.`", ",", "\<\"N\"\>", ",", "\<\"NW\"\>", 
      ",", "39.`", ",", "30.`", ",", "71.`", ",", "43.`", ",", "1007.3`", ",",
       "1006.`", ",", "7.`", ",", "1.`", ",", "16.7`", ",", "18.2`", 
      ",", "\<\"Yes\"\>", ",", "1.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.7`", ",", "19.7`", ",", "1.6`", ",", "5.2`", ",", "8.`", 
      ",", "\<\"NW\"\>", ",", "98.`", ",", "\<\"NW\"\>", ",", "\<\"NNW\"\>", 
      ",", "31.`", ",", "52.`", ",", "63.`", ",", "33.`", ",", "1009.1`", ",",
       "1001.5`", ",", "3.`", ",", "6.`", ",", "15.6`", ",", "18.5`", 
      ",", "\<\"Yes\"\>", ",", "3.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.9`", ",", "13.2`", ",", "3.4`", ",", "6.6`", ",", "11.`", 
      ",", "\<\"WNW\"\>", ",", "65.`", ",", "\<\"WNW\"\>", ",", "\<\"WNW\"\>",
       ",", "26.`", ",", "31.`", ",", "53.`", ",", "33.`", ",", "1017.`", ",",
       "1017.6`", ",", "3.`", ",", "1.`", ",", "7.1`", ",", "12.2`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.7`", ",", "14.1`", ",", "0.`", ",", "5.6`", ",", "9.`", 
      ",", "\<\"ENE\"\>", ",", "20.`", ",", "\<\"SSW\"\>", ",", "\<\"NNW\"\>",
       ",", "6.`", ",", "7.`", ",", "69.`", ",", "43.`", ",", "1026.7`", ",", 
      "1022.1`", ",", "7.`", ",", "1.`", ",", "7.4`", ",", "13.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.1`", ",", "18.`", ",", "0.`", ",", "1.6`", ",", "8.6`", 
      ",", "\<\"NNW\"\>", ",", "39.`", ",", "\<\"NNW\"\>", ",", "\<\"NNW\"\>",
       ",", "2.`", ",", "28.`", ",", "82.`", ",", "36.`", ",", "1021.`", ",", 
      "1015.6`", ",", "4.`", ",", "1.`", ",", "7.`", ",", "17.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.1`", ",", "23.3`", ",", "0.`", ",", "3.6`", ",", "10.3`", 
      ",", "\<\"NW\"\>", ",", "44.`", ",", "\<\"N\"\>", ",", "\<\"NW\"\>", 
      ",", "9.`", ",", "28.`", ",", "54.`", ",", "30.`", ",", "1016.4`", ",", 
      "1011.7`", ",", "1.`", ",", "1.`", ",", "16.4`", ",", "22.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.5`", ",", "23.3`", ",", "0.`", ",", "6.8`", ",", "10.9`", 
      ",", "\<\"WNW\"\>", ",", "65.`", ",", "\<\"N\"\>", ",", "\<\"NW\"\>", 
      ",", "15.`", ",", "41.`", ",", "46.`", ",", "15.`", ",", "1012.5`", ",",
       "1010.9`", ",", "1.`", ",", "0.`", ",", "18.3`", ",", "21.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.7`", ",", "19.5`", ",", "0.`", ",", "10.`", ",", "11.`", 
      ",", "\<\"NNW\"\>", ",", "46.`", ",", "\<\"NNE\"\>", ",", "\<\"NNW\"\>",
       ",", "13.`", ",", "33.`", ",", "42.`", ",", "25.`", ",", "1018.7`", 
      ",", "1015.1`", ",", "1.`", ",", "0.`", ",", "14.5`", ",", "18.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.2`", ",", "21.9`", ",", "0.`", ",", "6.8`", ",", "5.2`", 
      ",", "\<\"NW\"\>", ",", "80.`", ",", "\<\"SSE\"\>", ",", "\<\"NW\"\>", 
      ",", "2.`", ",", "20.`", ",", "51.`", ",", "50.`", ",", "1012.1`", ",", 
      "1006.5`", ",", "1.`", ",", "8.`", ",", "15.9`", ",", "21.`", 
      ",", "\<\"No\"\>", ",", "17.4`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.8`", ",", "16.2`", ",", "17.4`", ",", "6.4`", ",", "7.9`", 
      ",", "\<\"NW\"\>", ",", "50.`", ",", "\<\"NW\"\>", ",", "\<\"N\"\>", 
      ",", "15.`", ",", "22.`", ",", "73.`", ",", "44.`", ",", "1016.7`", ",",
       "1017.8`", ",", "7.`", ",", "1.`", ",", "8.`", ",", "14.3`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.4`", ",", "17.3`", ",", "0.`", ",", "2.2`", ",", "11.3`", 
      ",", "\<\"E\"\>", ",", "31.`", ",", "\<\"SSE\"\>", ",", "\<\"SW\"\>", 
      ",", "4.`", ",", "6.`", ",", "67.`", ",", "33.`", ",", "1030.5`", ",", 
      "1027.7`", ",", "1.`", ",", "1.`", ",", "10.7`", ",", "16.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.2`", ",", "18.7`", ",", "0.`", ",", "2.6`", ",", "11.1`", 
      ",", "\<\"N\"\>", ",", "31.`", ",", "\<\"E\"\>", ",", "\<\"NNW\"\>", 
      ",", "4.`", ",", "13.`", ",", "70.`", ",", "32.`", ",", "1032.2`", ",", 
      "1026.9`", ",", "1.`", ",", "1.`", ",", "11.`", ",", "18.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.5`", ",", "20.9`", ",", "0.`", ",", "3.6`", ",", "10.6`", 
      ",", "\<\"NNW\"\>", ",", "44.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "20.`", ",", "26.`", ",", "48.`", ",", "35.`", ",", "1025.4`", ",",
       "1020.6`", ",", "2.`", ",", "6.`", ",", "15.4`", ",", "20.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.5`", ",", "25.7`", ",", "0.`", ",", "4.8`", ",", "10.5`", 
      ",", "\<\"NNW\"\>", ",", "50.`", ",", "\<\"NNW\"\>", ",", "\<\"NW\"\>", 
      ",", "2.`", ",", "24.`", ",", "62.`", ",", "25.`", ",", "1022.8`", ",", 
      "1016.4`", ",", "5.`", ",", "1.`", ",", "15.9`", ",", "24.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.4`", ",", "24.3`", ",", "0.`", ",", "9.4`", ",", "11.1`", 
      ",", "\<\"WNW\"\>", ",", "52.`", ",", "\<\"NW\"\>", ",", "\<\"NW\"\>", 
      ",", "31.`", ",", "30.`", ",", "36.`", ",", "25.`", ",", "1010.5`", ",",
       "1009.9`", ",", "1.`", ",", "1.`", ",", "20.4`", ",", "23.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.9`", ",", "18.9`", ",", "0.`", ",", "9.6`", ",", "9.4`", 
      ",", "\<\"NW\"\>", ",", "44.`", ",", "\<\"S\"\>", ",", "\<\"NW\"\>", 
      ",", "6.`", ",", "22.`", ",", "41.`", ",", "32.`", ",", "1015.2`", ",", 
      "1013.9`", ",", "2.`", ",", "7.`", ",", "14.9`", ",", "16.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "2.3`", ",", "16.8`", ",", "0.`", ",", "4.8`", ",", "11.4`", 
      ",", "\<\"N\"\>", ",", "41.`", ",", "\<\"NNW\"\>", ",", "\<\"NNW\"\>", 
      ",", "6.`", ",", "28.`", ",", "52.`", ",", "34.`", ",", "1019.8`", ",", 
      "1017.`", ",", "2.`", ",", "1.`", ",", "9.8`", ",", "16.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "1.4`", ",", "20.6`", ",", "0.`", ",", "5.4`", ",", "11.1`", 
      ",", "\<\"N\"\>", ",", "46.`", ",", "\<\"SW\"\>", ",", "\<\"N\"\>", ",",
       "6.`", ",", "30.`", ",", "56.`", ",", "16.`", ",", "1020.8`", ",", 
      "1015.4`", ",", "5.`", ",", "1.`", ",", "11.3`", ",", "19.5`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.6`", ",", "27.6`", ",", "0.`", ",", "5.2`", ",", "11.`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"NNW\"\>", ",", "\<\"NW\"\>", 
      ",", "15.`", ",", "28.`", ",", "44.`", ",", "21.`", ",", "1017.7`", ",",
       "1014.1`", ",", "0.`", ",", "0.`", ",", "19.`", ",", "26.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "16.8`", ",", "28.9`", ",", "0.`", ",", "10.`", ",", "10.8`", 
      ",", "\<\"NNW\"\>", ",", "70.`", ",", "\<\"NW\"\>", ",", "\<\"NW\"\>", 
      ",", "31.`", ",", "41.`", ",", "44.`", ",", "22.`", ",", "1016.3`", ",",
       "1011.8`", ",", "1.`", ",", "1.`", ",", "22.5`", ",", "28.4`", 
      ",", "\<\"No\"\>", ",", "7.6`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "14.4`", ",", "20.7`", ",", "7.6`", ",", "9.4`", ",", "4.9`", 
      ",", "\<\"NNW\"\>", ",", "33.`", ",", "\<\"NNW\"\>", ",", "\<\"NNW\"\>",
       ",", "20.`", ",", "19.`", ",", "94.`", ",", "65.`", ",", "1015.5`", 
      ",", "1013.2`", ",", "8.`", ",", "4.`", ",", "14.5`", ",", "19.3`", 
      ",", "\<\"Yes\"\>", ",", "3.`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "10.3`", ",", "21.3`", ",", "3.`", ",", "4.2`", ",", "6.7`", 
      ",", "\<\"NNW\"\>", ",", "43.`", ",", "\<\"ENE\"\>", ",", "\<\"N\"\>", 
      ",", "7.`", ",", "19.`", ",", "79.`", ",", "46.`", ",", "1018.1`", ",", 
      "1013.6`", ",", "8.`", ",", "1.`", ",", "11.7`", ",", "19.8`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.2`", ",", "18.`", ",", "0.`", ",", "4.8`", ",", "8.4`", 
      ",", "\<\"W\"\>", ",", "65.`", ",", "\<\"N\"\>", ",", "\<\"W\"\>", ",", 
      "24.`", ",", "33.`", ",", "65.`", ",", "40.`", ",", "1009.5`", ",", 
      "1005.3`", ",", "5.`", ",", "4.`", ",", "12.8`", ",", "16.2`", 
      ",", "\<\"No\"\>", ",", "8.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.3`", ",", "16.`", ",", "8.2`", ",", "5.4`", ",", "11.8`", 
      ",", "\<\"NW\"\>", ",", "57.`", ",", "\<\"NNW\"\>", ",", "\<\"N\"\>", 
      ",", "11.`", ",", "28.`", ",", "68.`", ",", "45.`", ",", "1016.8`", ",",
       "1013.3`", ",", "1.`", ",", "1.`", ",", "6.9`", ",", "14.6`", 
      ",", "\<\"Yes\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.5`", ",", "17.9`", ",", "0.`", ",", "5.8`", ",", "11.5`", 
      ",", "\<\"N\"\>", ",", "44.`", ",", "\<\"NNE\"\>", ",", "\<\"NNW\"\>", 
      ",", "2.`", ",", "26.`", ",", "72.`", ",", "33.`", ",", "1019.1`", ",", 
      "1017.5`", ",", "0.`", ",", "1.`", ",", "7.2`", ",", "16.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.5`", ",", "20.`", ",", "0.`", ",", "6.2`", ",", "11.5`", 
      ",", "\<\"NNW\"\>", ",", "31.`", ",", "\<\"S\"\>", ",", "\<\"N\"\>", 
      ",", "2.`", ",", "9.`", ",", "69.`", ",", "22.`", ",", "1026.2`", ",", 
      "1024.2`", ",", "0.`", ",", "1.`", ",", "8.1`", ",", "18.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.6`", ",", "22.`", ",", "0.`", ",", "4.4`", ",", "11.`", 
      ",", "\<\"N\"\>", ",", "41.`", ",", "\<\"NNW\"\>", ",", "\<\"N\"\>", 
      ",", "6.`", ",", "19.`", ",", "82.`", ",", "25.`", ",", "1028.8`", ",", 
      "1024.9`", ",", "1.`", ",", "2.`", ",", "10.`", ",", "21.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.2`", ",", "22.4`", ",", "0.`", ",", "5.4`", ",", "11.2`", 
      ",", "\<\"NW\"\>", ",", "31.`", ",", "\<\"SSW\"\>", ",", "\<\"NW\"\>", 
      ",", "2.`", ",", "17.`", ",", "70.`", ",", "30.`", ",", "1027.8`", ",", 
      "1023.8`", ",", "1.`", ",", "3.`", ",", "13.6`", ",", "20.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.5`", ",", "23.9`", ",", "0.`", ",", "4.8`", ",", "11.7`", 
      ",", "\<\"NW\"\>", ",", "30.`", ",", "\<\"ENE\"\>", ",", "\<\"NNW\"\>", 
      ",", "4.`", ",", "11.`", ",", "67.`", ",", "27.`", ",", "1025.8`", ",", 
      "1021.5`", ",", "0.`", ",", "4.`", ",", "12.6`", ",", "22.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.7`", ",", "26.1`", ",", "0.`", ",", "6.2`", ",", "7.5`", 
      ",", "\<\"SSW\"\>", ",", "70.`", ",", "\<\"NE\"\>", ",", "\<\"NNW\"\>", 
      ",", "6.`", ",", "33.`", ",", "56.`", ",", "47.`", ",", "1020.9`", ",", 
      "1016.`", ",", "4.`", ",", "7.`", ",", "16.3`", ",", "23.2`", 
      ",", "\<\"No\"\>", ",", "13.2`", ",", "\<\"Yes\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.9`", ",", "21.1`", ",", "13.2`", ",", "6.6`", ",", "\<\"NA\"\>", 
      ",", "\<\"NW\"\>", ",", "41.`", ",", "\<\"NNE\"\>", ",", "\<\"N\"\>", 
      ",", "7.`", ",", "24.`", ",", "82.`", ",", "61.`", ",", "1019.2`", ",", 
      "1016.7`", ",", "7.`", ",", "3.`", ",", "14.5`", ",", "19.4`", 
      ",", "\<\"Yes\"\>", ",", "0.6`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.2`", ",", "19.6`", ",", "0.6`", ",", "3.4`", ",", "10.4`", 
      ",", "\<\"ENE\"\>", ",", "31.`", ",", "\<\"SSE\"\>", ",", "\<\"NNW\"\>",
       ",", "4.`", ",", "7.`", ",", "71.`", ",", "42.`", ",", "1022.3`", ",", 
      "1019.7`", ",", "7.`", ",", "4.`", ",", "11.6`", ",", "18.4`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "4.4`", ",", "21.`", ",", "0.`", ",", "4.2`", ",", "12.2`", 
      ",", "\<\"NW\"\>", ",", "28.`", ",", "\<\"SW\"\>", ",", "\<\"NW\"\>", 
      ",", "2.`", ",", "9.`", ",", "73.`", ",", "30.`", ",", "1025.7`", ",", 
      "1022.3`", ",", "1.`", ",", "1.`", ",", "9.6`", ",", "19.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "5.`", ",", "24.1`", ",", "0.`", ",", "6.2`", ",", "12.`", 
      ",", "\<\"NNW\"\>", ",", "52.`", ",", "\<\"NA\"\>", ",", "\<\"NNW\"\>", 
      ",", "0.`", ",", "26.`", ",", "73.`", ",", "34.`", ",", "1024.5`", ",", 
      "1020.7`", ",", "6.`", ",", "1.`", ",", "11.6`", ",", "21.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "6.7`", ",", "24.7`", ",", "0.`", ",", "5.4`", ",", "8.6`", 
      ",", "\<\"NW\"\>", ",", "43.`", ",", "\<\"N\"\>", ",", "\<\"NW\"\>", 
      ",", "4.`", ",", "20.`", ",", "80.`", ",", "31.`", ",", "1025.7`", ",", 
      "1022.2`", ",", "1.`", ",", "7.`", ",", "12.7`", ",", "23.7`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "8.3`", ",", "28.5`", ",", "0.`", ",", "5.8`", ",", "9.8`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"W\"\>", ",", "\<\"NW\"\>", 
      ",", "2.`", ",", "26.`", ",", "66.`", ",", "30.`", ",", "1024.1`", ",", 
      "1019.8`", ",", "1.`", ",", "6.`", ",", "16.8`", ",", "27.4`", 
      ",", "\<\"No\"\>", ",", "0.2`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "11.3`", ",", "27.4`", ",", "0.2`", ",", "7.6`", ",", "12.1`", 
      ",", "\<\"NW\"\>", ",", "52.`", ",", "\<\"SE\"\>", ",", "\<\"NW\"\>", 
      ",", "6.`", ",", "31.`", ",", "60.`", ",", "20.`", ",", "1021.4`", ",", 
      "1017.5`", ",", "1.`", ",", "1.`", ",", "16.4`", ",", "26.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.`", ",", "20.6`", ",", "0.`", ",", "9.`", ",", "6.2`", 
      ",", "\<\"ENE\"\>", ",", "39.`", ",", "\<\"S\"\>", ",", "\<\"SW\"\>", 
      ",", "11.`", ",", "11.`", ",", "54.`", ",", "28.`", ",", "1022.3`", ",",
       "1018.6`", ",", "7.`", ",", "5.`", ",", "11.4`", ",", "18.5`", 
      ",", "\<\"No\"\>", ",", "0.8`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.4`", ",", "15.`", ",", "0.8`", ",", "4.8`", ",", "11.7`", 
      ",", "\<\"S\"\>", ",", "70.`", ",", "\<\"S\"\>", ",", "\<\"S\"\>", ",", 
      "35.`", ",", "37.`", ",", "43.`", ",", "24.`", ",", "1023.4`", ",", 
      "1023.1`", ",", "1.`", ",", "5.`", ",", "8.3`", ",", "14.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.2`", ",", "18.`", ",", "0.`", ",", "7.4`", ",", "12.2`", 
      ",", "\<\"SSE\"\>", ",", "48.`", ",", "\<\"SSE\"\>", ",", "\<\"S\"\>", 
      ",", "26.`", ",", "15.`", ",", "47.`", ",", "25.`", ",", "1026.6`", ",",
       "1022.8`", ",", "1.`", ",", "2.`", ",", "9.1`", ",", "16.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "0.9`", ",", "20.7`", ",", "0.`", ",", "5.4`", ",", "8.4`", 
      ",", "\<\"NNW\"\>", ",", "39.`", ",", "\<\"SSE\"\>", ",", "\<\"N\"\>", 
      ",", "2.`", ",", "17.`", ",", "71.`", ",", "29.`", ",", "1023.2`", ",", 
      "1018.4`", ",", "3.`", ",", "8.`", ",", "9.4`", ",", "19.1`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "3.3`", ",", "25.5`", ",", "0.`", ",", "5.2`", ",", "10.8`", 
      ",", "\<\"N\"\>", ",", "43.`", ",", "\<\"N\"\>", ",", "\<\"NNW\"\>", 
      ",", "4.`", ",", "19.`", ",", "57.`", ",", "16.`", ",", "1018.8`", ",", 
      "1014.6`", ",", "0.`", ",", "3.`", ",", "12.`", ",", "24.8`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.9`", ",", "26.1`", ",", "0.`", ",", "6.8`", ",", "3.5`", 
      ",", "\<\"NNW\"\>", ",", "43.`", ",", "\<\"NA\"\>", ",", "\<\"WNW\"\>", 
      ",", "0.`", ",", "19.`", ",", "45.`", ",", "20.`", ",", "1017.6`", ",", 
      "1014.2`", ",", "5.`", ",", "8.`", ",", "16.3`", ",", "25.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "9.`", ",", "30.7`", ",", "0.`", ",", "7.6`", ",", "12.1`", 
      ",", "\<\"NNW\"\>", ",", "76.`", ",", "\<\"SSE\"\>", ",", "\<\"NW\"\>", 
      ",", "7.`", ",", "50.`", ",", "38.`", ",", "15.`", ",", "1016.1`", ",", 
      "1010.8`", ",", "1.`", ",", "3.`", ",", "20.4`", ",", "30.`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "7.1`", ",", "28.4`", ",", "0.`", ",", "11.6`", ",", "12.7`", 
      ",", "\<\"N\"\>", ",", "48.`", ",", "\<\"NNW\"\>", ",", "\<\"NNW\"\>", 
      ",", "2.`", ",", "19.`", ",", "45.`", ",", "22.`", ",", "1020.`", ",", 
      "1016.9`", ",", "0.`", ",", "1.`", ",", "17.2`", ",", "28.2`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.5`", ",", "19.9`", ",", "0.`", ",", "8.4`", ",", "5.3`", 
      ",", "\<\"ESE\"\>", ",", "43.`", ",", "\<\"ENE\"\>", ",", "\<\"ENE\"\>",
       ",", "11.`", ",", "9.`", ",", "63.`", ",", "47.`", ",", "1024.`", ",", 
      "1022.8`", ",", "3.`", ",", "2.`", ",", "14.5`", ",", "18.3`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.5`", ",", "26.9`", ",", "0.`", ",", "5.`", ",", "7.1`", 
      ",", "\<\"NW\"\>", ",", "46.`", ",", "\<\"SSW\"\>", ",", "\<\"WNW\"\>", 
      ",", "6.`", ",", "28.`", ",", "69.`", ",", "39.`", ",", "1021.`", ",", 
      "1016.2`", ",", "6.`", ",", "7.`", ",", "15.8`", ",", "25.9`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "12.3`", ",", "30.2`", ",", "0.`", ",", "6.`", ",", "12.6`", 
      ",", "\<\"NW\"\>", ",", "78.`", ",", "\<\"NW\"\>", ",", "\<\"WNW\"\>", 
      ",", "31.`", ",", "35.`", ",", "43.`", ",", "13.`", ",", "1009.6`", ",",
       "1009.2`", ",", "1.`", ",", "1.`", ",", "23.8`", ",", "28.6`", 
      ",", "\<\"No\"\>", ",", "0.`", ",", "\<\"No\"\>"}], "}"}]}], "}"}], 
  "]"}]], "Output",
 CellChangeTimes->{3.8262315684659553`*^9},
 CellLabel->"Out[36]=",ExpressionUUID->"f4facda4-ce47-43f3-b54b-cf65e41e627c"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"etDirectory", "[", 
   RowBox[{"NotebookDirectory", "[", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exportXLSX", "=", 
   RowBox[{"SystemDialogInput", "[", 
    RowBox[{"\"\<FileOpen\>\"", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<data\\\\\>\""}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Data files\>\"", "\[Rule]", 
         RowBox[{"{", "\"\<*.xlsx\>\"", "}"}]}], "}"}]}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"exportResult", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Append", "[", 
      RowBox[{
       RowBox[{"BatchSpecimens", "[", 
        RowBox[{"[", "#", "]"}], "]"}], ",", 
       RowBox[{"pResult", "[", 
        RowBox[{"[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
    RowBox[{"Range", "[", 
     RowBox[{"Length", "[", "BatchSpecimens", "]"}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{"exportXLSX", ",", "exportResult"}], "]"}], ";"}]}], "Input",Expres\
sionUUID->"619f824f-b6e4-4cda-85b5-146281adee6d"]
},
WindowSize->{1360, 695},
WindowMargins->{{Automatic, 86}, {120, Automatic}},
FrontEndVersion->"12.2 for Microsoft Windows (64-bit) (December 12, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"1010d438-63d0-4b8b-8c08-afeb6d3c5ad0"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 1476, 34, 105, "Input",ExpressionUUID->"80ce72f3-0ed1-4349-b9a4-0a4c031e2668"],
Cell[2037, 56, 156, 3, 28, "Input",ExpressionUUID->"d69ccc90-d2a4-4fde-9d0d-1ef2aaed49d3"],
Cell[2196, 61, 223, 3, 28, "Input",ExpressionUUID->"128fd950-8403-4e90-98fa-9960055b4280"],
Cell[2422, 66, 156, 3, 28, "Input",ExpressionUUID->"cc253950-a8ed-4531-9981-0e2f39fbcc29"],
Cell[2581, 71, 277, 7, 48, "Input",ExpressionUUID->"0162896d-f5c1-46e2-aae2-e38856a2b52f"],
Cell[2861, 80, 526, 16, 28, "Input",ExpressionUUID->"95bbd891-60d6-4bd0-9c0f-3d8081e4870d"],
Cell[3390, 98, 177, 3, 28, "Input",ExpressionUUID->"660645b8-6f36-4f70-bcf6-734eb88a0e94"],
Cell[3570, 103, 347, 8, 28, "Input",ExpressionUUID->"4c9c3158-1472-467e-843d-a932e63f5ae0"],
Cell[3920, 113, 671, 18, 67, "Input",ExpressionUUID->"37bb7d3b-32c8-45b6-9537-3932a7d341cc"],
Cell[4594, 133, 170, 3, 48, "Input",ExpressionUUID->"48ddda7b-67d9-4a5b-83d9-65306a808492"],
Cell[4767, 138, 209, 5, 28, "Input",ExpressionUUID->"ef0977ab-ab25-4a9b-aebf-6590e45df3b3"],
Cell[CellGroupData[{
Cell[5001, 147, 352, 6, 28, "Input",ExpressionUUID->"ee8b21a4-b922-442e-9ef7-58e173aa6005"],
Cell[5356, 155, 79729, 1424, 62, "Output",ExpressionUUID->"eba3df0b-5538-40ac-99fa-6b33c018bc89"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85122, 1584, 821, 17, 86, "Input",ExpressionUUID->"53fdd2ff-7bbd-4545-bd48-a4b20623d0e0"],
Cell[85946, 1603, 21808, 508, 467, "Output",ExpressionUUID->"c3e40d40-acab-4e50-bdfa-6bb05af89908"],
Cell[107757, 2113, 513, 10, 23, "Message",ExpressionUUID->"2a837225-8725-4044-9dbc-7d1e384b9190"],
Cell[108273, 2125, 108113, 1935, 467, "Output",ExpressionUUID->"8d3fd806-0f33-4970-8927-85b5844ec939"]
}, Open  ]],
Cell[216401, 4063, 692, 16, 67, "Input",ExpressionUUID->"d3aac202-b2b8-4c2c-b76b-167a87feb28b"],
Cell[217096, 4081, 81, 0, 28, "Input",ExpressionUUID->"ffd29dc8-5bbe-4136-b198-f3e313afce09"],
Cell[CellGroupData[{
Cell[217202, 4085, 1245, 32, 86, "Input",ExpressionUUID->"2f9d765c-a657-412e-baa8-a7c4c917df25"],
Cell[218450, 4119, 843, 15, 23, "Message",ExpressionUUID->"2d1e7fe3-2449-4b7d-8e93-d5e6514ce9b7"],
Cell[219296, 4136, 227041, 4049, 7022, "Output",ExpressionUUID->"f4facda4-ce47-43f3-b54b-cf65e41e627c"]
}, Open  ]],
Cell[446352, 8188, 1160, 34, 86, "Input",ExpressionUUID->"619f824f-b6e4-4cda-85b5-146281adee6d"]
}
]
*)

